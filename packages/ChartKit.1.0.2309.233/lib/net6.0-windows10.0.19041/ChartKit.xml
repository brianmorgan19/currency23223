<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ChartKit</name>
    </assembly>
    <members>
        <member name="T:ChartKit.Axis`3">
            <summary>
            Defines an Axis in a Cartesian chart.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <typeparam name="TTextGeometry">The type of the text geometry.</typeparam>
            <typeparam name="TLineGeometry">The type of the line geometry.</typeparam>
        </member>
        <member name="F:ChartKit.Axis`3.activeSeparators">
            <summary>
            The active separators
            </summary>
        </member>
        <member name="P:ChartKit.Axis`3.DataBounds">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.IPlane.DataBounds"/>
        </member>
        <member name="P:ChartKit.Axis`3.VisibleDataBounds">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.IPlane.VisibleDataBounds"/>
        </member>
        <member name="P:ChartKit.Axis`3.Name">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.IPlane.Name"/>
        </member>
        <member name="P:ChartKit.Axis`3.NameTextSize">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.IPlane.NameTextSize"/>
        </member>
        <member name="P:ChartKit.Axis`3.NamePadding">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.IPlane.NamePadding"/>
        </member>
        <member name="P:ChartKit.Axis`3.LabelsAlignment">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.ICartesianAxis.LabelsAlignment"/>
        </member>
        <member name="P:ChartKit.Axis`3.Orientation">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.ICartesianAxis.Orientation"/>
        </member>
        <member name="P:ChartKit.Axis`3.Padding">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.ICartesianAxis.Padding"/>
        </member>
        <member name="P:ChartKit.Axis`3.Labeler">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.IPlane.Labeler"/>
        </member>
        <member name="P:ChartKit.Axis`3.MinStep">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.IPlane.MinStep"/>
        </member>
        <member name="P:ChartKit.Axis`3.ForceStepToMin">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.IPlane.ForceStepToMin"/>
        </member>
        <member name="P:ChartKit.Axis`3.MinLimit">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.IPlane.MinLimit"/>
        </member>
        <member name="P:ChartKit.Axis`3.MaxLimit">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.IPlane.MaxLimit"/>
        </member>
        <member name="P:ChartKit.Axis`3.UnitWidth">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.IPlane.UnitWidth"/>
        </member>
        <member name="P:ChartKit.Axis`3.Position">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.ICartesianAxis.Position"/>
        </member>
        <member name="P:ChartKit.Axis`3.LabelsRotation">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.IPlane.LabelsRotation"/>
        </member>
        <member name="P:ChartKit.Axis`3.TextSize">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.IPlane.TextSize"/>
        </member>
        <member name="P:ChartKit.Axis`3.Labels">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.IPlane.Labels"/>
        </member>
        <member name="P:ChartKit.Axis`3.ShowSeparatorLines">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.IPlane.ShowSeparatorLines"/>
        </member>
        <member name="P:ChartKit.Axis`3.CustomSeparators">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.IPlane.CustomSeparators"/>
        </member>
        <member name="P:ChartKit.Axis`3.IsVisible">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.IPlane.IsVisible"/>
        </member>
        <member name="P:ChartKit.Axis`3.IsInverted">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.IPlane.IsInverted"/>
        </member>
        <member name="P:ChartKit.Axis`3.SeparatorsAtCenter">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.ICartesianAxis.SeparatorsAtCenter"/>
        </member>
        <member name="P:ChartKit.Axis`3.TicksAtCenter">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.ICartesianAxis.TicksAtCenter"/>
        </member>
        <member name="P:ChartKit.Axis`3.NamePaint">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.IPlane`1.NamePaint"/>
        </member>
        <member name="P:ChartKit.Axis`3.LabelsPaint">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.IPlane`1.LabelsPaint"/>
        </member>
        <member name="P:ChartKit.Axis`3.SeparatorsPaint">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.IPlane`1.SeparatorsPaint"/>
        </member>
        <member name="P:ChartKit.Axis`3.SubseparatorsPaint">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.ICartesianAxis`1.SubseparatorsPaint"/>
        </member>
        <member name="P:ChartKit.Axis`3.SubseparatorsCount">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.ICartesianAxis`1.SubseparatorsCount"/>
        </member>
        <member name="P:ChartKit.Axis`3.DrawTicksPath">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.ICartesianAxis`1.DrawTicksPath"/>
        </member>
        <member name="P:ChartKit.Axis`3.TicksPaint">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.ICartesianAxis`1.TicksPaint"/>
        </member>
        <member name="P:ChartKit.Axis`3.SubticksPaint">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.ICartesianAxis`1.SubticksPaint"/>
        </member>
        <member name="P:ChartKit.Axis`3.ZeroPaint">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.ICartesianAxis`1.ZeroPaint"/>
        </member>
        <member name="P:ChartKit.Axis`3.CrosshairPaint">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.ICartesianAxis`1.CrosshairPaint"/>
        </member>
        <member name="P:ChartKit.Axis`3.CrosshairLabelsPaint">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.ICartesianAxis`1.CrosshairLabelsPaint"/>
        </member>
        <member name="P:ChartKit.Axis`3.CrosshairLabelsBackground">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.ICartesianAxis`1.CrosshairLabelsBackground"/>
        </member>
        <member name="P:ChartKit.Axis`3.CrosshairPadding">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.ICartesianAxis`1.CrosshairPadding"/>
        </member>
        <member name="P:ChartKit.Axis`3.CrosshairSnapEnabled">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.ICartesianAxis`1.CrosshairSnapEnabled" />
        </member>
        <member name="P:ChartKit.Axis`3.TextBrush">
            <summary>
            
            </summary>
        </member>
        <member name="P:ChartKit.Axis`3.SeparatorsBrush">
            <summary>
            
            </summary>
        </member>
        <member name="P:ChartKit.Axis`3.AnimationsSpeed">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.IPlane.AnimationsSpeed"/>
        </member>
        <member name="P:ChartKit.Axis`3.EasingFunction">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.IPlane.EasingFunction"/>
        </member>
        <member name="P:ChartKit.Axis`3.MinZoomDelta">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.ICartesianAxis.MinZoomDelta"/>
        </member>
        <member name="P:ChartKit.Axis`3.InLineNamePlacement">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.ICartesianAxis.MinZoomDelta"/>
        </member>
        <member name="P:ChartKit.Axis`3.SharedWith">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.ICartesianAxis.SharedWith"/>
        </member>
        <member name="E:ChartKit.Axis`3.Initialized">
            <inheritdoc cref="E:ChartKit.Kernel.Sketches.ICartesianAxis.Initialized"/>
        </member>
        <member name="M:ChartKit.Axis`3.Invalidate(ChartKit.Chart{`0})">
            <inheritdoc cref="M:ChartKit.Kernel.ChartElement`1.Invalidate(ChartKit.Chart{`0})"/>
        </member>
        <member name="M:ChartKit.Axis`3.InvalidateCrosshair(ChartKit.Chart{`0},ChartKit.Drawing.LvcPoint)">
            <inheritdoc cref="M:ChartKit.Kernel.Sketches.ICartesianAxis`1.InvalidateCrosshair(ChartKit.Chart{`0},ChartKit.Drawing.LvcPoint)"/>
        </member>
        <member name="M:ChartKit.Axis`3.GetNameLabelSize(ChartKit.Chart{`0})">
            <inheritdoc cref="M:ChartKit.Kernel.Sketches.IPlane`1.GetNameLabelSize(ChartKit.Chart{`0})"/>
        </member>
        <member name="M:ChartKit.Axis`3.GetPossibleSize(ChartKit.Chart{`0})">
            <inheritdoc cref="M:ChartKit.Kernel.Sketches.IPlane`1.GetPossibleSize(ChartKit.Chart{`0})"/>
        </member>
        <member name="M:ChartKit.Axis`3.GetLimits">
            <inheritdoc cref="M:ChartKit.Kernel.Sketches.ICartesianAxis.GetLimits"/>
        </member>
        <member name="M:ChartKit.Axis`3.SetLimits(System.Double,System.Double)">
            <inheritdoc cref="M:ChartKit.Kernel.Sketches.ICartesianAxis.SetLimits(System.Double,System.Double)"/>
        </member>
        <member name="M:ChartKit.Axis`3.ChartKit#Kernel#Sketches#ICartesianAxis#Initialize(ChartKit.Measure.AxisOrientation)">
            <inheritdoc cref="M:ChartKit.Kernel.Sketches.ICartesianAxis.Initialize(ChartKit.Measure.AxisOrientation)"/>
        </member>
        <member name="M:ChartKit.Axis`3.Delete(ChartKit.Chart{`0})">
            <summary>
            Deletes the specified chart.
            </summary>
            <param name="chart">The chart.</param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Axis`3.RemoveFromUI(ChartKit.Chart{`0})">
            <inheritdoc cref="M:ChartKit.Kernel.IChartElement`1.RemoveFromUI(ChartKit.Chart{`0})"/>
        </member>
        <member name="M:ChartKit.Axis`3.OnPaintChanged(System.String)">
            <summary>
            Called when [paint changed].
            </summary>
            <param name="propertyName">Name of the property.</param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Axis`3.GetPaintTasks">
            <summary>
            Gets the paint tasks.
            </summary>
            <returns></returns>
        </member>
        <member name="T:ChartKit.BarSeries`4">
            <summary>
            Defines a bar series point.
            </summary>
            <typeparam name="TModel">The type of the model.</typeparam>
            <typeparam name="TVisual">The type of the visual.</typeparam>
            <typeparam name="TLabel">The type of the label.</typeparam>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <seealso cref="T:ChartKit.CartesianSeries`4" />
            <seealso cref="T:ChartKit.Kernel.Sketches.IBarSeries`1" />
        </member>
        <member name="M:ChartKit.BarSeries`4.#ctor(ChartKit.Kernel.SeriesProperties)">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.BarSeries`4"/> class.
            </summary>
            <param name="properties">The properties.</param>
        </member>
        <member name="P:ChartKit.BarSeries`4.GroupPadding">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.IBarSeries`1.GroupPadding"/>
        </member>
        <member name="P:ChartKit.BarSeries`4.Padding">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.IBarSeries`1.Padding"/>
        </member>
        <member name="P:ChartKit.BarSeries`4.MaxBarWidth">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.IBarSeries`1.MaxBarWidth"/>
        </member>
        <member name="P:ChartKit.BarSeries`4.IgnoresBarPosition">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.IBarSeries`1.IgnoresBarPosition"/>
        </member>
        <member name="P:ChartKit.BarSeries`4.Rx">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.IBarSeries`1.Rx"/>
        </member>
        <member name="P:ChartKit.BarSeries`4.Ry">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.IBarSeries`1.Ry"/>
        </member>
        <member name="P:ChartKit.BarSeries`4.ErrorPaint">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.IErrorSeries`1.ErrorPaint"/>
        </member>
        <member name="M:ChartKit.BarSeries`4.GetMiniaturesSketch">
            <inheritdoc cref="M:ChartKit.Series`4.GetMiniaturesSketch"/>
        </member>
        <member name="T:ChartKit.BarSeries`4.MeasureHelper">
            <summary>
            A mesure helper class.
            </summary>
        </member>
        <member name="M:ChartKit.BarSeries`4.MeasureHelper.#ctor(ChartKit.Measure.Scaler,ChartKit.CartesianChart{`3},ChartKit.Kernel.Sketches.IBarSeries{`3},ChartKit.Kernel.Sketches.ICartesianAxis,System.Single,System.Single,System.Single,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the measue helper class.
            </summary>
            <param name="scaler">The scaler.</param>
            <param name="cartesianChart">The chart.</param>
            <param name="barSeries">The series.</param>
            <param name="axis">The axis.</param>
            <param name="p">The pivot.</param>
            <param name="minP">The min pivot allowed.</param>
            <param name="maxP">The max pivot allowed.</param>
            <param name="isStacked">Indicates whether the series is stacked or not.</param>
            <param name="isRow">Indicates whether the serie is row or not.</param>
        </member>
        <member name="F:ChartKit.BarSeries`4.MeasureHelper.uw">
            <summary>
            helper units.
            </summary>
        </member>
        <member name="F:ChartKit.BarSeries`4.MeasureHelper.uwm">
            <summary>
            helper units.
            </summary>
        </member>
        <member name="F:ChartKit.BarSeries`4.MeasureHelper.cp">
            <summary>
            helper units.
            </summary>
        </member>
        <member name="F:ChartKit.BarSeries`4.MeasureHelper.p">
            <summary>
            helper units.
            </summary>
        </member>
        <member name="F:ChartKit.BarSeries`4.MeasureHelper.actualUw">
            <summary>
            helper units.
            </summary>
        </member>
        <member name="M:ChartKit.BarSeries`4.OnPointerEnter(ChartKit.Kernel.ChartPoint)">
            <inheritdoc cref="M:ChartKit.Series`4.OnPointerEnter(ChartKit.Kernel.ChartPoint)"/>
        </member>
        <member name="M:ChartKit.BarSeries`4.OnPointerLeft(ChartKit.Kernel.ChartPoint)">
            <inheritdoc cref="M:ChartKit.Series`4.OnPointerLeft(ChartKit.Kernel.ChartPoint)"/>
        </member>
        <member name="T:ChartKit.BoxSeries`5">
            <summary>
            Defines a candle sticks series.
            </summary>
            <typeparam name="TModel">The type of the model.</typeparam>
            <typeparam name="TVisual">The type of the visual.</typeparam>
            <typeparam name="TLabel">The type of the label.</typeparam>
            <typeparam name="TMiniatureGeometry">The type of the miniature geometry, used in tool tips and legends.</typeparam> 
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <seealso cref="T:ChartKit.CartesianSeries`4" />
            <seealso cref="T:ChartKit.Kernel.Sketches.ICartesianSeries`1" />
            <seealso cref="T:ChartKit.Kernel.Sketches.IHeatSeries`1" />
        </member>
        <member name="M:ChartKit.BoxSeries`5.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.BoxSeries`5"/> class.
            </summary>
        </member>
        <member name="P:ChartKit.BoxSeries`5.MaxBarWidth">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.IBoxSeries`1.MaxBarWidth"/>
        </member>
        <member name="P:ChartKit.BoxSeries`5.Padding">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.IBoxSeries`1.Padding"/>
        </member>
        <member name="M:ChartKit.BoxSeries`5.Invalidate(ChartKit.Chart{`4})">
            <inheritdoc cref="M:ChartKit.Kernel.ChartElement`1.Invalidate(ChartKit.Chart{`0})"/>
        </member>
        <member name="M:ChartKit.BoxSeries`5.GetBounds(ChartKit.CartesianChart{`4},ChartKit.Kernel.Sketches.ICartesianAxis,ChartKit.Kernel.Sketches.ICartesianAxis)">
            <inheritdoc cref="M:ChartKit.Kernel.Sketches.ICartesianSeries`1.GetBounds(ChartKit.CartesianChart{`0},ChartKit.Kernel.Sketches.ICartesianAxis,ChartKit.Kernel.Sketches.ICartesianAxis)"/>
        </member>
        <member name="M:ChartKit.BoxSeries`5.GetMiniaturesSketch">
            <inheritdoc cref="M:ChartKit.Series`4.GetMiniaturesSketch"/>
        </member>
        <member name="M:ChartKit.BoxSeries`5.GetRequestedSecondaryOffset">
            <inheritdoc cref="M:ChartKit.CartesianSeries`4.GetRequestedSecondaryOffset"/>
        </member>
        <member name="M:ChartKit.BoxSeries`5.SetDefaultPointTransitions(ChartKit.Kernel.ChartPoint)">
            <inheritdoc cref="M:ChartKit.Series`4.SetDefaultPointTransitions(ChartKit.Kernel.ChartPoint)"/>
        </member>
        <member name="M:ChartKit.BoxSeries`5.SoftDeleteOrDisposePoint(ChartKit.Kernel.ChartPoint,ChartKit.Measure.Scaler,ChartKit.Measure.Scaler)">
            <inheritdoc cref="M:ChartKit.CartesianSeries`4.SoftDeleteOrDisposePoint(ChartKit.Kernel.ChartPoint,ChartKit.Measure.Scaler,ChartKit.Measure.Scaler)"/>
        </member>
        <member name="M:ChartKit.BoxSeries`5.OnPointerEnter(ChartKit.Kernel.ChartPoint)">
            <inheritdoc cref="M:ChartKit.Series`4.OnPointerEnter(ChartKit.Kernel.ChartPoint)"/>
        </member>
        <member name="M:ChartKit.BoxSeries`5.OnPointerLeft(ChartKit.Kernel.ChartPoint)">
            <inheritdoc cref="M:ChartKit.Series`4.OnPointerLeft(ChartKit.Kernel.ChartPoint)"/>
        </member>
        <member name="M:ChartKit.BoxSeries`5.OnPaintChanged(System.String)">
            <summary>
            Called when [paint changed].
            </summary>
            <param name="propertyName">Name of the property.</param>
            <returns></returns>
        </member>
        <member name="T:ChartKit.BoxSeries`5.MeasureHelper">
            <summary>
            A mesure helper class.
            </summary>
        </member>
        <member name="M:ChartKit.BoxSeries`5.MeasureHelper.#ctor(ChartKit.Measure.Scaler,ChartKit.CartesianChart{`4},ChartKit.Kernel.Sketches.IBoxSeries{`4},ChartKit.Kernel.Sketches.ICartesianAxis,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the measue helper class.
            </summary>
            <param name="scaler">The scaler.</param>
            <param name="cartesianChart">The chart.</param>
            <param name="boxSeries">The series.</param>
            <param name="axis">The axis.</param>
            <param name="p">The pivot.</param>
            <param name="minP">The min pivot allowed.</param>
            <param name="maxP">The max pivot allowed.</param>
        </member>
        <member name="F:ChartKit.BoxSeries`5.MeasureHelper.uw">
            <summary>
            helper units.
            </summary>
        </member>
        <member name="F:ChartKit.BoxSeries`5.MeasureHelper.uwm">
            <summary>
            helper units.
            </summary>
        </member>
        <member name="F:ChartKit.BoxSeries`5.MeasureHelper.cp">
            <summary>
            helper units.
            </summary>
        </member>
        <member name="F:ChartKit.BoxSeries`5.MeasureHelper.p">
            <summary>
            helper units.
            </summary>
        </member>
        <member name="F:ChartKit.BoxSeries`5.MeasureHelper.actualUw">
            <summary>
            helper units.
            </summary>
        </member>
        <member name="T:ChartKit.CartesianChart`1">
            <summary>
            Defines a Cartesian chart.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <seealso cref="T:ChartKit.Chart`1" />
        </member>
        <member name="M:ChartKit.CartesianChart`1.#ctor(ChartKit.Kernel.Sketches.ICartesianChartView{`0},System.Action{ChartKit.Kernel.ChartKitSettings},ChartKit.Motion.MotionCanvas{`0},ChartKit.Drawing.ISizedGeometry{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.CartesianChart`1"/> class.
            </summary>
            <param name="view">The view.</param>
            <param name="defaultPlatformConfig">The default platform configuration.</param>
            <param name="canvas">The canvas.</param>
            <param name="zoomingSection">The zooming section.</param>
        </member>
        <member name="P:ChartKit.CartesianChart`1.XAxes">
            <summary>
            Gets the x axes.
            </summary>
            <value>
            The x axes.
            </value>
        </member>
        <member name="P:ChartKit.CartesianChart`1.YAxes">
            <summary>
            Gets the y axes.
            </summary>
            <value>
            The y axes.
            </value>
        </member>
        <member name="P:ChartKit.CartesianChart`1.Sections">
            <summary>
            Gets the sections.
            </summary>
            <value>
            The sections.
            </value>
        </member>
        <member name="P:ChartKit.CartesianChart`1.Series">
            <inheritdoc cref="P:ChartKit.Chart`1.Series"/>
        </member>
        <member name="P:ChartKit.CartesianChart`1.VisibleSeries">
            <inheritdoc cref="P:ChartKit.Chart`1.VisibleSeries"/>
        </member>
        <member name="P:ChartKit.CartesianChart`1.IsZoomingOrPanning">
            <summary>
            Gets or sets a value indicating whether this instance is zooming or panning.
            </summary>
            <value>
              <c>true</c> if this instance is zooming or panning; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:ChartKit.CartesianChart`1.View">
            <summary>
            Gets the view.
            </summary>
            <value>
            The view.
            </value>
        </member>
        <member name="M:ChartKit.CartesianChart`1.FindHoveredPointsBy(ChartKit.Drawing.LvcPoint)">
            <summary>
            Finds the points near to the specified location.
            </summary>
            <param name="pointerPosition">The pointer position.</param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.CartesianChart`1.ScaleUIPoint(ChartKit.Drawing.LvcPoint,System.Int32,System.Int32)">
            <summary>
            Scales the specified point to the UI.
            </summary>
            <param name="point">The point.</param>
            <param name="xAxisIndex">Index of the x axis.</param>
            <param name="yAxisIndex">Index of the y axis.</param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.CartesianChart`1.Zoom(ChartKit.Drawing.LvcPoint,ChartKit.Measure.ZoomDirection,System.Nullable{System.Double},System.Boolean)">
            <summary>
            Zooms to the specified pivot.
            </summary>
            <param name="pivot">The pivot.</param>
            <param name="direction">The direction.</param>
            <param name="scaleFactor">The scale factor.</param>
            <param name="isActive"></param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.CartesianChart`1.Pan(ChartKit.Drawing.LvcPoint,System.Boolean)">
            <summary>
            Pans with the specified delta.
            </summary>
            <param name="delta">The delta.</param>
            <param name="isActive">Indicates whether the pointer is down.</param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.CartesianChart`1.Measure">
            <summary>
            Measures this chart.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ChartKit.CartesianChart`1.Unload">
            <inheritdoc cref="M:ChartKit.Chart`1.Unload"/>
        </member>
        <member name="T:ChartKit.CartesianSeries`4">
            <summary>
            Defines a Cartesian series.
            </summary>
            <typeparam name="TModel">The type of the model.</typeparam>
            <typeparam name="TVisual">The type of the visual.</typeparam>
            <typeparam name="TLabel">The type of the label.</typeparam>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <seealso cref="T:ChartKit.ChartSeries`4" />
            <seealso cref="T:System.IDisposable" />
            <seealso cref="T:ChartKit.Kernel.Sketches.ICartesianSeries`1" />
        </member>
        <member name="M:ChartKit.CartesianSeries`4.#ctor(ChartKit.Kernel.SeriesProperties)">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.CartesianSeries`4"/> class.
            </summary>
            <param name="properties">The series properties.</param>
        </member>
        <member name="P:ChartKit.CartesianSeries`4.ScalesXAt">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.ICartesianSeries`1.ScalesXAt"/>
        </member>
        <member name="P:ChartKit.CartesianSeries`4.ScalesYAt">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.ICartesianSeries`1.ScalesYAt"/>
        </member>
        <member name="P:ChartKit.CartesianSeries`4.DataLabelsPosition">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.ICartesianSeries`1.DataLabelsPosition"/>
        </member>
        <member name="P:ChartKit.CartesianSeries`4.DataLabelsTranslate">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.ICartesianSeries`1.DataLabelsTranslate"/>
        </member>
        <member name="P:ChartKit.CartesianSeries`4.XToolTipLabelFormatter">
            <summary>
            Gets or sets the tool tip label formatter for the X axis, this function will build the label when a point in this series 
            is shown inside a tool tip.
            </summary>
            <value>
            The tool tip label formatter.
            </value>
        </member>
        <member name="P:ChartKit.CartesianSeries`4.YToolTipLabelFormatter">
            <summary>
            Gets or sets the tool tip label formatter for the Y axis, this function will build the label when a point in this series 
            is shown inside a tool tip.
            </summary>
            <value>
            The tool tip label formatter.
            </value>
        </member>
        <member name="P:ChartKit.CartesianSeries`4.ClippingMode">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.ICartesianSeries`1.ClippingMode"/>
        </member>
        <member name="M:ChartKit.CartesianSeries`4.GetBounds(ChartKit.CartesianChart{`3},ChartKit.Kernel.Sketches.ICartesianAxis,ChartKit.Kernel.Sketches.ICartesianAxis)">
            <inheritdoc cref="M:ChartKit.Kernel.Sketches.ICartesianSeries`1.GetBounds(ChartKit.CartesianChart{`0},ChartKit.Kernel.Sketches.ICartesianAxis,ChartKit.Kernel.Sketches.ICartesianAxis)"/>
        </member>
        <member name="M:ChartKit.CartesianSeries`4.GetPrimaryToolTipText(ChartKit.Kernel.ChartPoint)">
            <inheritdoc cref="M:ChartKit.ISeries.GetPrimaryToolTipText(ChartKit.Kernel.ChartPoint)"/>
        </member>
        <member name="M:ChartKit.CartesianSeries`4.GetSecondaryToolTipText(ChartKit.Kernel.ChartPoint)">
            <inheritdoc cref="M:ChartKit.ISeries.GetSecondaryToolTipText(ChartKit.Kernel.ChartPoint)"/>
        </member>
        <member name="M:ChartKit.CartesianSeries`4.GetClipRectangle(ChartKit.CartesianChart{`3})">
            <summary>
            Gets the clip rectangle for the series.
            </summary>
            <param name="cartesianChart">The cartesian chart.</param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.CartesianSeries`4.GetRequestedGeometrySize">
            <summary>
            Gets the geometry size to calculate the series bounds.
            </summary>
            <returns>The geometry requested size.</returns>
        </member>
        <member name="M:ChartKit.CartesianSeries`4.GetRequestedSecondaryOffset">
            <summary>
            Gets the requested secondary offset [normalized as proportion of the axis' unit width].
            </summary>
            <returns>The offset.</returns>
        </member>
        <member name="M:ChartKit.CartesianSeries`4.GetRequestedPrimaryOffset">
            <summary>
            Gets the requested secondary offset [normalized as proportion of the axis' unit width].
            </summary>
            <returns>The offset</returns>
        </member>
        <member name="M:ChartKit.CartesianSeries`4.SoftDeleteOrDispose(ChartKit.Kernel.Sketches.IChartView)">
            <summary>
            Deletes the series from the user interface.
            </summary>
            <param name="chart"></param>
            <inheritdoc cref="M:ChartKit.ISeries.SoftDeleteOrDispose(ChartKit.Kernel.Sketches.IChartView)" />
        </member>
        <member name="M:ChartKit.CartesianSeries`4.SoftDeleteOrDisposePoint(ChartKit.Kernel.ChartPoint,ChartKit.Measure.Scaler,ChartKit.Measure.Scaler)">
            <summary>
            Softs the delete point.
            </summary>
            <param name="point">The point.</param>
            <param name="primaryScale">The primary scale.</param>
            <param name="secondaryScale">The secondary scale.</param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.CartesianSeries`4.GetLabelPosition(System.Single,System.Single,System.Single,System.Single,ChartKit.Drawing.LvcSize,ChartKit.Measure.DataLabelsPosition,ChartKit.Kernel.SeriesProperties,System.Boolean,ChartKit.Drawing.LvcPoint,ChartKit.Drawing.LvcSize)">
            <summary>
            Gets the label position.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="labelSize">Size of the label.</param>
            <param name="position">The position.</param>
            <param name="seriesProperties">The series properties.</param>
            <param name="isGreaterThanPivot">if set to <c>true</c> [is greater than pivot].</param>
            <param name="drawMarginLocation">The draw margin location.</param>
            <param name="drawMarginSize">the draw margin size</param>
            <returns></returns>
        </member>
        <member name="T:ChartKit.Chart`1">
            <summary>
            Defines a chart,
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <seealso cref="T:ChartKit.Kernel.Sketches.IChart" />
        </member>
        <member name="M:ChartKit.Chart`1.#ctor(ChartKit.Motion.MotionCanvas{`0},System.Action{ChartKit.Kernel.ChartKitSettings},ChartKit.Kernel.Sketches.IChartView)">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.Chart`1"/> class.
            </summary>
            <param name="canvas">The canvas.</param>
            <param name="defaultPlatformConfig">The default platform configuration.</param>
            <param name="view">The chart view.</param>
        </member>
        <member name="E:ChartKit.Chart`1.Measuring">
            <inheritdoc cref="E:ChartKit.Kernel.Sketches.IChartView`1.Measuring" />
        </member>
        <member name="E:ChartKit.Chart`1.UpdateStarted">
            <inheritdoc cref="E:ChartKit.Kernel.Sketches.IChartView`1.UpdateStarted" />
        </member>
        <member name="E:ChartKit.Chart`1.UpdateFinished">
            <inheritdoc cref="E:ChartKit.Kernel.Sketches.IChartView`1.UpdateFinished" />
        </member>
        <member name="P:ChartKit.Chart`1.AutoToolTipsInfo">
            <summary>
            Gets the tool tip meta data.
            </summary>
        </member>
        <member name="P:ChartKit.Chart`1.ActualBounds">
            <summary>
            Gets the bounds of the chart.
            </summary>
        </member>
        <member name="P:ChartKit.Chart`1.MeasureWork">
            <summary>
            Gets the measure work.
            </summary>
            <value>
            The measure work.
            </value>
        </member>
        <member name="P:ChartKit.Chart`1.ThemeId">
            <summary>
            Gets or sets the theme identifier.
            </summary>
            <value>
            The theme identifier.
            </value>
        </member>
        <member name="P:ChartKit.Chart`1.IsLoaded">
            <summary>
            Gets whether the control is loaded.
            </summary>
        </member>
        <member name="P:ChartKit.Chart`1.Canvas">
            <summary>
            Gets the canvas.
            </summary>
            <value>
            The canvas.
            </value>
        </member>
        <member name="P:ChartKit.Chart`1.VisibleSeries">
            <summary>
            Gets the visible series.
            </summary>
            <value>
            The drawable series.
            </value>
        </member>
        <member name="P:ChartKit.Chart`1.Series">
            <summary>
            Gets the series.
            </summary>
            <value>
            The drawable series.
            </value>
        </member>
        <member name="P:ChartKit.Chart`1.View">
            <summary>
            Gets the view.
            </summary>
            <value>
            The view.
            </value>
        </member>
        <member name="P:ChartKit.Chart`1.SeriesContext">
            <summary>
            The series context
            </summary>
        </member>
        <member name="P:ChartKit.Chart`1.ControlSize">
            <summary>
            Gets the size of the control.
            </summary>
            <value>
            The size of the control.
            </value>
        </member>
        <member name="P:ChartKit.Chart`1.DrawMarginLocation">
            <summary>
            Gets the draw margin location.
            </summary>
            <value>
            The draw margin location.
            </value>
        </member>
        <member name="P:ChartKit.Chart`1.DrawMarginSize">
            <summary>
            Gets the size of the draw margin.
            </summary>
            <value>
            The size of the draw margin.
            </value>
        </member>
        <member name="P:ChartKit.Chart`1.LegendPosition">
            <summary>
            Gets the legend position.
            </summary>
            <value>
            The legend position.
            </value>
        </member>
        <member name="P:ChartKit.Chart`1.Legend">
            <summary>
            Gets the legend.
            </summary>
            <value>
            The legend.
            </value>
        </member>
        <member name="P:ChartKit.Chart`1.TooltipPosition">
            <summary>
            Gets the tooltip position.
            </summary>
            <value>
            The tooltip position.
            </value>
        </member>
        <member name="P:ChartKit.Chart`1.TooltipFindingStrategy">
            <summary>
            Gets the tooltip finding strategy.
            </summary>
            <value>
            The tooltip finding strategy.
            </value>
        </member>
        <member name="P:ChartKit.Chart`1.Tooltip">
            <summary>
            Gets the tooltip.
            </summary>
            <value>
            The tooltip.
            </value>
        </member>
        <member name="P:ChartKit.Chart`1.AnimationsSpeed">
            <summary>
            Gets the animations speed.
            </summary>
            <value>
            The animations speed.
            </value>
        </member>
        <member name="P:ChartKit.Chart`1.EasingFunction">
            <summary>
            Gets the easing function.
            </summary>
            <value>
            The easing function.
            </value>
        </member>
        <member name="P:ChartKit.Chart`1.VisualElements">
            <summary>
            Gets the visual elements.
            </summary>
            <value>
            The visual elements.
            </value>
        </member>
        <member name="M:ChartKit.Chart`1.Update(ChartKit.Kernel.ChartUpdateParams)">
            <inheritdoc cref="M:ChartKit.Kernel.Sketches.IChart.Update(ChartKit.Kernel.ChartUpdateParams)" />
        </member>
        <member name="M:ChartKit.Chart`1.FindHoveredPointsBy(ChartKit.Drawing.LvcPoint)">
            <summary>
            Finds the points near to the specified point.
            </summary>
            <param name="pointerPosition">The pointer position.</param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Chart`1.Load">
            <summary>
            Loads the control resources.
            </summary>
        </member>
        <member name="M:ChartKit.Chart`1.Unload">
            <summary>
            Unloads the control.
            </summary>
        </member>
        <member name="M:ChartKit.Chart`1.Measure">
            <summary>
            Measures this chart.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Chart`1.SetDrawMargin(ChartKit.Drawing.LvcSize,ChartKit.Measure.Margin)">
            <summary>
            Sets the draw margin.
            </summary>
            <param name="controlSize">Size of the control.</param>
            <param name="margin">The margin.</param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Chart`1.SetPreviousSize">
            <summary>
            Saves the previous size of the chart.
            </summary>
        </member>
        <member name="M:ChartKit.Chart`1.InvokeOnMeasuring">
            <summary>
            Invokes the <see cref="E:ChartKit.Chart`1.Measuring"/> event.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Chart`1.InvokeOnUpdateStarted">
            <summary>
            Invokes the on update started.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Chart`1.InvokeOnUpdateFinished">
            <summary>
            Invokes the on update finished.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Chart`1.SizeChanged">
            <summary>
            Returns a value indicating if the control size changed.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Chart`1.UpdateThrottlerUnlocked">
            <summary>
            Called when the updated the throttler is unlocked.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Chart`1.UpdateBounds">
            <summary>
            Updates the bounds tracker.
            </summary>
        </member>
        <member name="M:ChartKit.Chart`1.InitializeVisualsCollector">
            <summary>
            Initializes the visuals collector.
            </summary>
        </member>
        <member name="M:ChartKit.Chart`1.AddVisual(ChartKit.Kernel.ChartElement{`0})">
            <summary>
            Adds a visual element to the chart.
            </summary>
        </member>
        <member name="M:ChartKit.Chart`1.RemoveVisual(ChartKit.Kernel.ChartElement{`0})">
            <summary>
            Removes a visual element from the chart.
            </summary>
        </member>
        <member name="M:ChartKit.Chart`1.GetLegendPosition">
            <summary>
            Gets the legend position.
            </summary>
            <returns>The position of the legend.</returns>
        </member>
        <member name="M:ChartKit.Chart`1.CollectVisuals">
            <summary>
            Collects and deletes from the UI the unused visuals.
            </summary>
        </member>
        <member name="M:ChartKit.Chart`1.DrawLegend(System.Single@,System.Single@,System.Single@,System.Single@)">
            <summary>
            Draws the legend and appends the size of the legend to the current margin calculation.
            </summary>
            <param name="ts">The top margin.</param>
            <param name="bs">The bottom margin.</param>
            <param name="ls">The left margin.</param>
            <param name="rs">The right margin.</param>
        </member>
        <member name="M:ChartKit.Chart`1.DrawToolTip">
            <summary>
            Draws the current tool tip, requires canvas invalidation after this call.
            </summary>
        </member>
        <member name="T:ChartKit.ChartKits">
            <summary>
            LiveCharts global settings.
            </summary>
        </member>
        <member name="P:ChartKit.ChartKits.IgnoreToolTipLabel">
            <summary>
            A constant that indicates that the tool tip should not add the current label.
            </summary>
        </member>
        <member name="P:ChartKit.ChartKits.IgnoreSeriesName">
            <summary>
            A constant that indicates that the tool tip should ignore the series name.
            </summary>
        </member>
        <member name="P:ChartKit.ChartKits.EnableLogging">
            <summary>
            Gets a value indicating whether Charts should create a log as it renders the charts.
            </summary>
        </member>
        <member name="P:ChartKit.ChartKits.HasBackend">
            <summary>
            Gets a value indicating whether  Charts has a backend registered.
            </summary>
        </member>
        <member name="P:ChartKit.ChartKits.HasTheme">
            <summary>
            Gets a value indicating whether Charts has a theme registered.
            </summary>
        </member>
        <member name="P:ChartKit.ChartKits.HasDefaultMappers">
            <summary>
            Gets a value indicating whether Charts has the default mappers registered.
            </summary>
        </member>
        <member name="P:ChartKit.ChartKits.DefaultSettings">
            <summary>
            Gets the current settings.
            </summary>
            <value>
            The current settings.
            </value>
        </member>
        <member name="P:ChartKit.ChartKits.HoverKey">
            <summary>
            Gets the hover key.
            </summary>
            <value>
            The bar series hover key.
            </value>
        </member>
        <member name="P:ChartKit.ChartKits.TangentAngle">
            <summary>
            Gets a constant that indicates that a rotation angle follows the tangent line, this property is only useful in polar series.
            </summary>
        </member>
        <member name="P:ChartKit.ChartKits.CotangentAngle">
            <summary>
            Gets a constant that indicates that a rotation angle follows the cotangent line, this property is only useful in polar series.
            </summary>
        </member>
        <member name="F:ChartKit.ChartKits.DisableAnimations">
            <summary>
            The disable animations
            </summary>
        </member>
        <member name="M:ChartKit.ChartKits.Configure(System.Action{ChartKit.Kernel.ChartKitSettings})">
            <summary>
            Configures ChartKit.
            </summary>
            <param name="configuration">The configuration.</param>
            <returns></returns>
            <exception cref="T:System.NullReferenceException">$"{nameof(ChartKitSettings)} must not be null.</exception>
        </member>
        <member name="M:ChartKit.ChartKits.HasMapFor``1(System.Action{``0,ChartKit.Kernel.ChartPoint})">
            <summary>
            Defines a mapper for the given type.
            </summary>
            <typeparam name="TModel">The type of the model.</typeparam>
            <param name="mapper">The mapper.</param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.ChartKits.AsDate(System.Double)">
            <summary>
            Converts ticks to Date, and prevents overflow exceptions.
            </summary>
            <param name="ticks">The ticks.</param>
            <returns>A DateTime object.</returns>
        </member>
        <member name="M:ChartKit.ChartKits.AsTimeSpan(System.Double)">
            <summary>
            Converts ticks to TimeSpan, and prevents overflow exceptions.
            </summary>
            <param name="ticks">The ticks.</param>
            <returns>A DateTime object.</returns>
        </member>
        <member name="T:ChartKit.ChartSeries`4">
            <summary>
            Defines a chart data series.
            </summary>
            <typeparam name="TModel">The type of the model.</typeparam>
            <typeparam name="TVisual">The type of the visual.</typeparam>
            <typeparam name="TLabel">The type of the label.</typeparam>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <seealso cref="T:ChartKit.Series`4" />
            <seealso cref="T:ChartKit.Kernel.Sketches.IChartSeries`1" />
        </member>
        <member name="M:ChartKit.ChartSeries`4.#ctor(ChartKit.Kernel.SeriesProperties)">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.ChartSeries`4"/> class.
            </summary>
            <param name="properties">The properties.</param>
        </member>
        <member name="P:ChartKit.ChartSeries`4.DataLabelsPaint">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.IChartSeries`1.DataLabelsPaint"/>
        </member>
        <member name="P:ChartKit.ChartSeries`4.DataLabelsSize">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.IChartSeries`1.DataLabelsSize"/>
        </member>
        <member name="P:ChartKit.ChartSeries`4.DataLabelsRotation">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.IChartSeries`1.DataLabelsRotation"/>
        </member>
        <member name="P:ChartKit.ChartSeries`4.DataLabelsPadding">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.IChartSeries`1.DataLabelsPadding"/>
        </member>
        <member name="P:ChartKit.ChartSeries`4.DataLabelsMaxWidth">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.IChartSeries`1.DataLabelsMaxWidth"/>
        </member>
        <member name="T:ChartKit.ColumnSeries`5">
            <summary>
            Defines a column series.
            </summary>
            <typeparam name="TModel">The type of the model.</typeparam>
            <typeparam name="TVisual">The type of the visual.</typeparam>
            <typeparam name="TLabel">the type of the label.</typeparam>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <typeparam name="TErrorGeometry">The type of the error geometry.</typeparam>
        </member>
        <member name="M:ChartKit.ColumnSeries`5.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.ColumnSeries`5"/> class.
            </summary>
        </member>
        <member name="M:ChartKit.ColumnSeries`5.Invalidate(ChartKit.Chart{`3})">
            <inheritdoc cref="M:ChartKit.Kernel.ChartElement`1.Invalidate(ChartKit.Chart{`0})"/>
        </member>
        <member name="M:ChartKit.ColumnSeries`5.GetRequestedSecondaryOffset">
            <inheritdoc cref="M:ChartKit.CartesianSeries`4.GetRequestedSecondaryOffset"/>
        </member>
        <member name="M:ChartKit.ColumnSeries`5.SetDefaultPointTransitions(ChartKit.Kernel.ChartPoint)">
            <inheritdoc cref="M:ChartKit.Series`4.SetDefaultPointTransitions(ChartKit.Kernel.ChartPoint)"/>
        </member>
        <member name="M:ChartKit.ColumnSeries`5.SoftDeleteOrDisposePoint(ChartKit.Kernel.ChartPoint,ChartKit.Measure.Scaler,ChartKit.Measure.Scaler)">
            <inheritdoc cref="M:ChartKit.CartesianSeries`4.SoftDeleteOrDisposePoint(ChartKit.Kernel.ChartPoint,ChartKit.Measure.Scaler,ChartKit.Measure.Scaler)"/>
        </member>
        <member name="T:ChartKit.ConditionalDraw.ConditionalDrawExtensions">
            <summary>
            Defines some conditional drawing extensions, things will draw according to this conditions...
            </summary>
        </member>
        <member name="M:ChartKit.ConditionalDraw.ConditionalDrawExtensions.OnPointMeasured``4(ChartKit.Series{``0,``1,``2,``3},System.Action{ChartKit.Kernel.ChartPoint{``0,``1,``2}})">
            <summary>
            Executes the given action when a point is measured, this metod just subscribes to the
            <see cref="E:ChartKit.Series`4.PointMeasured"/> event, but with a simple syntax.
            </summary>
            <typeparam name="TModel">TThe type of the model.</typeparam>
            <typeparam name="TVisual">The type of the visual.</typeparam>
            <typeparam name="TLabel">The type of the label.</typeparam>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <param name="series">The target series.</param>
            <param name="predicate">The action to execute.</param>
            <returns>The series.</returns>
            <remarks>
            The action is subscribed to the <see cref="E:ChartKit.Series`4.PointMeasured"/> event.
            </remarks>
        </member>
        <member name="M:ChartKit.ConditionalDraw.ConditionalDrawExtensions.WithConditionalPaint``4(ChartKit.Series{``0,``1,``2,``3},ChartKit.Drawing.IPaint{``3})">
            <summary>
            Returns a <see cref="T:ChartKit.ConditionalDraw.ConditionalPaintBuilder`4"/> for the given paint.
            </summary>
            <typeparam name="TModel">The type of the model.</typeparam>
            <typeparam name="TVisual">The type of the visual.</typeparam>
            <typeparam name="TLabel">The type of the label.</typeparam>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <param name="series">The series.</param>
            <param name="paint">The paint.</param>
            <returns></returns>
        </member>
        <member name="T:ChartKit.ConditionalDraw.ConditionalPaintBuilder`4">
            <summary>
            Defines a <see cref="T:ChartKit.ConditionalDraw.ConditionalPaintBuilder`4"/> instance.
            </summary>
        </member>
        <member name="M:ChartKit.ConditionalDraw.ConditionalPaintBuilder`4.#ctor(ChartKit.Series{`0,`1,`2,`3},ChartKit.Drawing.IPaint{`3})">
            <summary>
            Initializes a new builder for the given paint.
            </summary>
            <param name="series">The series.</param>
            <param name="paint">The paint.</param>
        </member>
        <member name="M:ChartKit.ConditionalDraw.ConditionalPaintBuilder`4.When(System.Func{ChartKit.Kernel.ChartPoint{`0,`1,`2},System.Boolean})">
            <summary>
            Applies the paint when the given condition is true.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ChartKit.ConditionalDraw.ConditionalPaintBuilder`4.UnSubscribe">
            <summary>
            Un-subscribes the generated event handlers from the target series.
            </summary>
        </member>
        <member name="T:ChartKit.Defaults.BoxValue">
            <summary>
            Defines a point for box plots.
            </summary>
        </member>
        <member name="M:ChartKit.Defaults.BoxValue.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.Defaults.FinancialPoint"/> class.
            </summary>
        </member>
        <member name="M:ChartKit.Defaults.BoxValue.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.Defaults.FinancialPoint"/> class.
            </summary>
            <param name="max">The max.</param>
            <param name="thirdQuartile">The third quartile.</param>
            <param name="firstQuartile">The first quartile.</param>
            <param name="min">The min.</param>
            <param name="median">The median.</param>
        </member>
        <member name="P:ChartKit.Defaults.BoxValue.Max">
            <summary>
            Gets or sets the high.
            </summary>
            <value>
            The high.
            </value>
        </member>
        <member name="P:ChartKit.Defaults.BoxValue.ThirdQuartile">
            <summary>
            Gets or sets the max quiadrile value.
            </summary>
            <value>
            The open.
            </value>
        </member>
        <member name="P:ChartKit.Defaults.BoxValue.FirtQuartile">
            <summary>
            Gets or sets the min quadrile value.
            </summary>
            <value>
            The close.
            </value>
        </member>
        <member name="P:ChartKit.Defaults.BoxValue.Min">
            <summary>
            Gets or sets the min value.
            </summary>
            <value>
            The low.
            </value>
        </member>
        <member name="P:ChartKit.Defaults.BoxValue.Median">
            <summary>
            Gets or sets the median value.
            </summary>
            <value>
            The low.
            </value>
        </member>
        <member name="P:ChartKit.Defaults.BoxValue.MetaData">
            <inheritdoc cref="P:ChartKit.Kernel.IChartEntity.MetaData"/>
        </member>
        <member name="P:ChartKit.Defaults.BoxValue.Coordinate">
            <inheritdoc cref="P:ChartKit.Kernel.IChartEntity.Coordinate"/>
        </member>
        <member name="E:ChartKit.Defaults.BoxValue.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Defaults.BoxValue.OnPropertyChanged(System.String)">
            <summary>
            Called when a property changed.
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="M:ChartKit.Defaults.BoxValue.OnCoordinateChanged(System.Int32)">
            <summary>
            Called when the coordinate changed.
            </summary>
        </member>
        <member name="T:ChartKit.Defaults.DateTimePoint">
            <summary>
            Defines a date time point for the Cartesian coordinate system that implements <see cref="T:System.ComponentModel.INotifyPropertyChanged"/>.
            </summary>
        </member>
        <member name="M:ChartKit.Defaults.DateTimePoint.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.Defaults.DateTimePoint"/> class.
            </summary>
        </member>
        <member name="M:ChartKit.Defaults.DateTimePoint.#ctor(System.DateTime,System.Nullable{System.Double})">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.Defaults.DateTimePoint"/> class.
            </summary>
            <param name="dateTime">The date time.</param>
            <param name="value">The value.</param>
        </member>
        <member name="P:ChartKit.Defaults.DateTimePoint.DateTime">
            <summary>
            Gets or sets the date time.
            </summary>
            <value>
            The date time.
            </value>
        </member>
        <member name="P:ChartKit.Defaults.DateTimePoint.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>
            The value.
            </value>
        </member>
        <member name="P:ChartKit.Defaults.DateTimePoint.MetaData">
            <inheritdoc cref="P:ChartKit.Kernel.IChartEntity.MetaData"/>
        </member>
        <member name="P:ChartKit.Defaults.DateTimePoint.Coordinate">
            <inheritdoc cref="P:ChartKit.Kernel.IChartEntity.Coordinate"/>
        </member>
        <member name="E:ChartKit.Defaults.DateTimePoint.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Defaults.DateTimePoint.OnPropertyChanged(System.String)">
            <summary>
            Called when a property changed.
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="T:ChartKit.Defaults.ErrorDateTimePoint">
            <summary>
            Defines an error point that uses DateTine in the X axis to create error series.
            </summary>
        </member>
        <member name="M:ChartKit.Defaults.ErrorDateTimePoint.#ctor(System.DateTime,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.Defaults.ErrorValue"/> class.
            </summary>
            <param name="dateTime">The DateTime coordinate.</param>
            <param name="y">The Y coordinate.</param>
            <param name="xErrorI">The left error.</param>
            <param name="xErrorJ">The right error.</param>
            <param name="yErrorI">The top error.</param>
            <param name="yErrorJ">The bottom error.</param>
        </member>
        <member name="M:ChartKit.Defaults.ErrorDateTimePoint.#ctor(System.DateTime,System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.Defaults.ErrorValue"/> class.
            </summary>
            <param name="dateTime">The dateTime coordinate.</param>
            <param name="y">The Y coordinate.</param>
            <param name="xError">The error in X.</param>
            <param name="yError">The error in Y.</param>
        </member>
        <member name="P:ChartKit.Defaults.ErrorDateTimePoint.DateTime">
            <summary>
            Gets or sets the X coordinate.
            </summary>
            <value>
            The high.
            </value>
        </member>
        <member name="P:ChartKit.Defaults.ErrorDateTimePoint.Y">
            <summary>
            Gets or sets the Y coordinate.
            </summary>
            <value>
            The high.
            </value>
        </member>
        <member name="P:ChartKit.Defaults.ErrorDateTimePoint.XErrorI">
            <summary>
            Gets or sets the left error in X.
            </summary>
            <value>
            The open.
            </value>
        </member>
        <member name="P:ChartKit.Defaults.ErrorDateTimePoint.XErrorJ">
            <summary>
            Gets or sets the right error in x.
            </summary>
            <value>
            The close.
            </value>
        </member>
        <member name="P:ChartKit.Defaults.ErrorDateTimePoint.YErrorI">
            <summary>
            Gets or sets the top error in Y.
            </summary>
            <value>
            The open.
            </value>
        </member>
        <member name="P:ChartKit.Defaults.ErrorDateTimePoint.YErrorJ">
            <summary>
            Gets or sets the bottom error in Y.
            </summary>
            <value>
            The close.
            </value>
        </member>
        <member name="P:ChartKit.Defaults.ErrorDateTimePoint.MetaData">
            <inheritdoc cref="P:ChartKit.Kernel.IChartEntity.MetaData"/>
        </member>
        <member name="P:ChartKit.Defaults.ErrorDateTimePoint.Coordinate">
            <inheritdoc cref="P:ChartKit.Kernel.IChartEntity.Coordinate"/>
        </member>
        <member name="E:ChartKit.Defaults.ErrorDateTimePoint.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Defaults.ErrorDateTimePoint.OnPropertyChanged(System.String)">
            <summary>
            Called when a property changed.
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="T:ChartKit.Defaults.ErrorPoint">
            <summary>
            Defines an error point to create error series.
            </summary>
        </member>
        <member name="M:ChartKit.Defaults.ErrorPoint.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.Defaults.ErrorValue"/> class.
            </summary>
            <param name="x">The X coordinate.</param>
            <param name="y">The Y coordinate.</param>
            <param name="xErrorI">The left error.</param>
            <param name="xErrorJ">The right error.</param>
            <param name="yErrorI">The top error.</param>
            <param name="yErrorJ">The bottom error.</param>
        </member>
        <member name="M:ChartKit.Defaults.ErrorPoint.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.Defaults.ErrorValue"/> class.
            </summary>
            <param name="x">The X coordinate.</param>
            <param name="y">The Y coordinate.</param>
            <param name="xError">The error in X.</param>
            <param name="yError">The error in Y.</param>
        </member>
        <member name="P:ChartKit.Defaults.ErrorPoint.X">
            <summary>
            Gets or sets the X coordinate.
            </summary>
            <value>
            The high.
            </value>
        </member>
        <member name="P:ChartKit.Defaults.ErrorPoint.Y">
            <summary>
            Gets or sets the Y coordinate.
            </summary>
            <value>
            The high.
            </value>
        </member>
        <member name="P:ChartKit.Defaults.ErrorPoint.XErrorI">
            <summary>
            Gets or sets the left error in X.
            </summary>
            <value>
            The open.
            </value>
        </member>
        <member name="P:ChartKit.Defaults.ErrorPoint.XErrorJ">
            <summary>
            Gets or sets the right error in x.
            </summary>
            <value>
            The close.
            </value>
        </member>
        <member name="P:ChartKit.Defaults.ErrorPoint.YErrorI">
            <summary>
            Gets or sets the top error in Y.
            </summary>
            <value>
            The open.
            </value>
        </member>
        <member name="P:ChartKit.Defaults.ErrorPoint.YErrorJ">
            <summary>
            Gets or sets the bottom error in Y.
            </summary>
            <value>
            The close.
            </value>
        </member>
        <member name="P:ChartKit.Defaults.ErrorPoint.MetaData">
            <inheritdoc cref="P:ChartKit.Kernel.IChartEntity.MetaData"/>
        </member>
        <member name="P:ChartKit.Defaults.ErrorPoint.Coordinate">
            <inheritdoc cref="P:ChartKit.Kernel.IChartEntity.Coordinate"/>
        </member>
        <member name="E:ChartKit.Defaults.ErrorPoint.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Defaults.ErrorPoint.OnPropertyChanged(System.String)">
            <summary>
            Called when a property changed.
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="T:ChartKit.Defaults.ErrorValue">
            <summary>
            Defines an error value to create error series.
            </summary>
        </member>
        <member name="M:ChartKit.Defaults.ErrorValue.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.Defaults.FinancialPoint"/> class.
            </summary>
        </member>
        <member name="M:ChartKit.Defaults.ErrorValue.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.Defaults.ErrorValue"/> class.
            </summary>
            <param name="y">The Y coordinate.</param>
            <param name="yErrorI">The top error.</param>
            <param name="yErrorJ">The bottom error.</param>
        </member>
        <member name="M:ChartKit.Defaults.ErrorValue.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.Defaults.ErrorValue"/> class.
            </summary>
            <param name="y">The Y coordinate.</param>
            <param name="yError">The error in Y.</param>
        </member>
        <member name="P:ChartKit.Defaults.ErrorValue.Y">
            <summary>
            Gets or sets the high.
            </summary>
            <value>
            The high.
            </value>
        </member>
        <member name="P:ChartKit.Defaults.ErrorValue.YErrorI">
            <summary>
            Gets or sets the open.
            </summary>
            <value>
            The open.
            </value>
        </member>
        <member name="P:ChartKit.Defaults.ErrorValue.YErrorJ">
            <summary>
            Gets or sets the close.
            </summary>
            <value>
            The close.
            </value>
        </member>
        <member name="P:ChartKit.Defaults.ErrorValue.MetaData">
            <inheritdoc cref="P:ChartKit.Kernel.IChartEntity.MetaData"/>
        </member>
        <member name="P:ChartKit.Defaults.ErrorValue.Coordinate">
            <inheritdoc cref="P:ChartKit.Kernel.IChartEntity.Coordinate"/>
        </member>
        <member name="E:ChartKit.Defaults.ErrorValue.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Defaults.ErrorValue.OnPropertyChanged(System.String)">
            <summary>
            Called when a property changed.
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="M:ChartKit.Defaults.ErrorValue.OnCoordinateChanged(System.Int32)">
            <summary>
            Called when the coordinate changed.
            </summary>
        </member>
        <member name="T:ChartKit.Defaults.FinancialPoint">
            <summary>
            Defines a point with financial data.
            </summary>
        </member>
        <member name="M:ChartKit.Defaults.FinancialPoint.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.Defaults.FinancialPoint"/> class.
            </summary>
        </member>
        <member name="M:ChartKit.Defaults.FinancialPoint.#ctor(System.DateTime,System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double})">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.Defaults.FinancialPoint"/> class.
            </summary>
            <param name="date">The date.</param>
            <param name="high">The high.</param>
            <param name="open">The open.</param>
            <param name="close">The close.</param>
            <param name="low">The low.</param>
        </member>
        <member name="P:ChartKit.Defaults.FinancialPoint.Date">
            <summary>
            Gets or sets the date.
            </summary>
            <value>
            The date.
            </value>
        </member>
        <member name="P:ChartKit.Defaults.FinancialPoint.High">
            <summary>
            Gets or sets the high.
            </summary>
            <value>
            The high.
            </value>
        </member>
        <member name="P:ChartKit.Defaults.FinancialPoint.Open">
            <summary>
            Gets or sets the open.
            </summary>
            <value>
            The open.
            </value>
        </member>
        <member name="P:ChartKit.Defaults.FinancialPoint.Close">
            <summary>
            Gets or sets the close.
            </summary>
            <value>
            The close.
            </value>
        </member>
        <member name="P:ChartKit.Defaults.FinancialPoint.Low">
            <summary>
            Gets or sets the low.
            </summary>
            <value>
            The low.
            </value>
        </member>
        <member name="P:ChartKit.Defaults.FinancialPoint.MetaData">
            <inheritdoc cref="P:ChartKit.Kernel.IChartEntity.MetaData"/>
        </member>
        <member name="P:ChartKit.Defaults.FinancialPoint.Coordinate">
            <inheritdoc cref="P:ChartKit.Kernel.IChartEntity.Coordinate"/>
        </member>
        <member name="E:ChartKit.Defaults.FinancialPoint.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Defaults.FinancialPoint.OnPropertyChanged(System.String)">
            <summary>
            Called when a property changed.
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="T:ChartKit.Defaults.FinancialPointI">
            <summary>
            Defines a point with financial data, this point does not use <see cref="T:System.DateTime"/> in the X axis, instead it uses the position
            of the point the array as the X coordinate,the dates must be specified in the
            <see cref="P:ChartKit.Axis`3.Labels"/> property.
            </summary>
        </member>
        <member name="M:ChartKit.Defaults.FinancialPointI.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.Defaults.FinancialPoint"/> class.
            </summary>
        </member>
        <member name="M:ChartKit.Defaults.FinancialPointI.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.Defaults.FinancialPoint"/> class.
            </summary>
            <param name="high">The high.</param>
            <param name="open">The open.</param>
            <param name="close">The close.</param>
            <param name="low">The low.</param>
        </member>
        <member name="P:ChartKit.Defaults.FinancialPointI.High">
            <summary>
            Gets or sets the high.
            </summary>
            <value>
            The high.
            </value>
        </member>
        <member name="P:ChartKit.Defaults.FinancialPointI.Open">
            <summary>
            Gets or sets the open.
            </summary>
            <value>
            The open.
            </value>
        </member>
        <member name="P:ChartKit.Defaults.FinancialPointI.Close">
            <summary>
            Gets or sets the close.
            </summary>
            <value>
            The close.
            </value>
        </member>
        <member name="P:ChartKit.Defaults.FinancialPointI.Low">
            <summary>
            Gets or sets the low.
            </summary>
            <value>
            The low.
            </value>
        </member>
        <member name="P:ChartKit.Defaults.FinancialPointI.MetaData">
            <inheritdoc cref="P:ChartKit.Kernel.IChartEntity.MetaData"/>
        </member>
        <member name="P:ChartKit.Defaults.FinancialPointI.Coordinate">
            <inheritdoc cref="P:ChartKit.Kernel.IChartEntity.Coordinate"/>
        </member>
        <member name="E:ChartKit.Defaults.FinancialPointI.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Defaults.FinancialPointI.OnPropertyChanged(System.String)">
            <summary>
            Called when a property changed.
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="M:ChartKit.Defaults.FinancialPointI.OnCoordinateChanged(System.Int32)">
            <summary>
            Called when the coordinate changed.
            </summary>
        </member>
        <member name="T:ChartKit.Defaults.MappedChartEntity">
            <summary>
            Defines the <see cref="T:ChartKit.Defaults.MappedChartEntity"/> class, a helper class to map any object that does not implements <see cref="T:ChartKit.Kernel.IChartEntity"/>,
            when you need a better performance you should implement <see cref="T:ChartKit.Kernel.IChartEntity"/> in your DTOs, the default objects in the library
            already implement <see cref="T:ChartKit.Kernel.IChartEntity"/>.
            </summary>
        </member>
        <member name="P:ChartKit.Defaults.MappedChartEntity.MetaData">
            <inheritdoc cref="P:ChartKit.Kernel.IChartEntity.MetaData"/>
        </member>
        <member name="P:ChartKit.Defaults.MappedChartEntity.Coordinate">
            <inheritdoc cref="P:ChartKit.Kernel.IChartEntity.Coordinate"/>
        </member>
        <member name="T:ChartKit.Defaults.ObservablePoint">
            <summary>
            Defines a point for the Cartesian coordinate system that implements <see cref="T:System.ComponentModel.INotifyPropertyChanged"/>.
            </summary>
            <seealso cref="T:System.ComponentModel.INotifyPropertyChanged" />
        </member>
        <member name="M:ChartKit.Defaults.ObservablePoint.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.Defaults.ObservablePoint"/> class.
            </summary>
        </member>
        <member name="M:ChartKit.Defaults.ObservablePoint.#ctor(System.Nullable{System.Double},System.Nullable{System.Double})">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.Defaults.ObservablePoint"/> class.
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
        </member>
        <member name="P:ChartKit.Defaults.ObservablePoint.X">
            <summary>
            Gets or sets the x coordinate.
            </summary>
            <value>
            The x.
            </value>
        </member>
        <member name="P:ChartKit.Defaults.ObservablePoint.Y">
            <summary>
            Gets or sets the y coordinate.
            </summary>
            <value>
            The y.
            </value>
        </member>
        <member name="P:ChartKit.Defaults.ObservablePoint.MetaData">
            <inheritdoc cref="P:ChartKit.Kernel.IChartEntity.MetaData"/>
        </member>
        <member name="P:ChartKit.Defaults.ObservablePoint.Coordinate">
            <inheritdoc cref="P:ChartKit.Kernel.IChartEntity.Coordinate"/>
        </member>
        <member name="E:ChartKit.Defaults.ObservablePoint.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Defaults.ObservablePoint.OnPropertyChanged(System.String)">
            <summary>
            Called when a property changes.
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="T:ChartKit.Defaults.ObservablePolarPoint">
            <summary>
            Defines a point for the polar coordinate system that implements <see cref="T:System.ComponentModel.INotifyPropertyChanged"/>.
            </summary>
        </member>
        <member name="M:ChartKit.Defaults.ObservablePolarPoint.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.Defaults.ObservablePoint"/> class.
            </summary>
        </member>
        <member name="M:ChartKit.Defaults.ObservablePolarPoint.#ctor(System.Nullable{System.Double},System.Nullable{System.Double})">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.Defaults.ObservablePoint"/> class.
            </summary>
            <param name="angle">The angle.</param>
            <param name="radius">The radius.</param>
        </member>
        <member name="P:ChartKit.Defaults.ObservablePolarPoint.Angle">
            <summary>
            Gets or sets the angle.
            </summary>
        </member>
        <member name="P:ChartKit.Defaults.ObservablePolarPoint.Radius">
            <summary>
            Gets or sets the Radius.
            </summary>
        </member>
        <member name="P:ChartKit.Defaults.ObservablePolarPoint.MetaData">
            <inheritdoc cref="P:ChartKit.Kernel.IChartEntity.MetaData"/>
        </member>
        <member name="P:ChartKit.Defaults.ObservablePolarPoint.Coordinate">
            <inheritdoc cref="P:ChartKit.Kernel.IChartEntity.Coordinate"/>
        </member>
        <member name="E:ChartKit.Defaults.ObservablePolarPoint.PropertyChanged">
            <summary>
            Called when a property changes.
            </summary>
        </member>
        <member name="M:ChartKit.Defaults.ObservablePolarPoint.OnPropertyChanged(System.String)">
            <summary>
            Raises the property changed event.
            </summary>
        </member>
        <member name="T:ChartKit.Defaults.ObservableValue">
            <summary>
            Defines an object that notifies when the value property changes.
            </summary>
            <seealso cref="T:System.ComponentModel.INotifyPropertyChanged" />
        </member>
        <member name="M:ChartKit.Defaults.ObservableValue.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.Defaults.ObservableValue"/> class.
            </summary>
        </member>
        <member name="M:ChartKit.Defaults.ObservableValue.#ctor(System.Nullable{System.Double})">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.Defaults.ObservableValue"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="P:ChartKit.Defaults.ObservableValue.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>
            The value.
            </value>
        </member>
        <member name="P:ChartKit.Defaults.ObservableValue.MetaData">
            <inheritdoc cref="P:ChartKit.Kernel.IChartEntity.MetaData"/>
        </member>
        <member name="P:ChartKit.Defaults.ObservableValue.Coordinate">
            <inheritdoc cref="P:ChartKit.Kernel.IChartEntity.Coordinate"/>
        </member>
        <member name="E:ChartKit.Defaults.ObservableValue.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Defaults.ObservableValue.OnPropertyChanged(System.String)">
            <summary>
            Called when am property changed.
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="M:ChartKit.Defaults.ObservableValue.OnCoordinateChanged(System.Int32)">
            <summary>
            Called when the coordinate changed.
            </summary>
        </member>
        <member name="T:ChartKit.Defaults.TimeSpanPoint">
            <summary>
            Defines a time span point for the Cartesian coordinate system that implements <see cref="T:System.ComponentModel.INotifyPropertyChanged"/>.
            </summary>
        </member>
        <member name="M:ChartKit.Defaults.TimeSpanPoint.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.Defaults.TimeSpanPoint"/> class.
            </summary>
        </member>
        <member name="M:ChartKit.Defaults.TimeSpanPoint.#ctor(System.TimeSpan,System.Nullable{System.Double})">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.Defaults.TimeSpanPoint"/> class.
            </summary>
            <param name="timeSpan">The date time.</param>
            <param name="value">The value.</param>
        </member>
        <member name="P:ChartKit.Defaults.TimeSpanPoint.TimeSpan">
            <summary>
            Gets or sets the time span.
            </summary>
            <value>
            The date time.
            </value>
        </member>
        <member name="P:ChartKit.Defaults.TimeSpanPoint.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>
            The value.
            </value>
        </member>
        <member name="P:ChartKit.Defaults.TimeSpanPoint.MetaData">
            <inheritdoc cref="P:ChartKit.Kernel.IChartEntity.MetaData"/>
        </member>
        <member name="P:ChartKit.Defaults.TimeSpanPoint.Coordinate">
            <inheritdoc cref="P:ChartKit.Kernel.IChartEntity.Coordinate"/>
        </member>
        <member name="E:ChartKit.Defaults.TimeSpanPoint.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Defaults.TimeSpanPoint.OnPropertyChanged(System.String)">
            <summary>
            Called when a property changed.
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="T:ChartKit.Defaults.WeightedPoint">
            <summary>
            Defines a point with a weighted coordinate.
            </summary>
            <seealso cref="T:System.ComponentModel.INotifyPropertyChanged" />
        </member>
        <member name="M:ChartKit.Defaults.WeightedPoint.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.Defaults.WeightedPoint"/> class.
            </summary>
        </member>
        <member name="M:ChartKit.Defaults.WeightedPoint.#ctor(System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double})">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.Defaults.WeightedPoint"/> class.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="weight">The weight.</param>
        </member>
        <member name="P:ChartKit.Defaults.WeightedPoint.X">
            <summary>
            Gets or sets the x.
            </summary>
            <value>
            The x.
            </value>
        </member>
        <member name="P:ChartKit.Defaults.WeightedPoint.Y">
            <summary>
            Gets or sets the y.
            </summary>
            <value>
            The y.
            </value>
        </member>
        <member name="P:ChartKit.Defaults.WeightedPoint.Weight">
            <summary>
            Gets or sets the weight.
            </summary>
            <value>
            The weight.
            </value>
        </member>
        <member name="E:ChartKit.Defaults.WeightedPoint.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
            <returns></returns>
        </member>
        <member name="P:ChartKit.Defaults.WeightedPoint.MetaData">
            <inheritdoc cref="P:ChartKit.Kernel.IChartEntity.MetaData"/>
        </member>
        <member name="P:ChartKit.Defaults.WeightedPoint.Coordinate">
            <inheritdoc cref="P:ChartKit.Kernel.IChartEntity.Coordinate"/>
        </member>
        <member name="M:ChartKit.Defaults.WeightedPoint.OnPropertyChanged(System.String)">
            <summary>
            Called when a property changed.
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="T:ChartKit.Drawing.Align">
            <summary>
            Defines the drawing alignment.
            </summary>
        </member>
        <member name="F:ChartKit.Drawing.Align.Start">
            <summary>
            Aligns to the start
            </summary>
        </member>
        <member name="F:ChartKit.Drawing.Align.End">
            <summary>
            Aligns to the end
            </summary>
        </member>
        <member name="F:ChartKit.Drawing.Align.Middle">
            <summary>
            Aligns to the middle
            </summary>
        </member>
        <member name="T:ChartKit.Drawing.Animatable">
            <inheritdoc cref="T:ChartKit.Drawing.IAnimatable" />
        </member>
        <member name="M:ChartKit.Drawing.Animatable.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.Drawing.Animatable"/> class.
            </summary>
        </member>
        <member name="P:ChartKit.Drawing.Animatable.IsValid">
            <inheritdoc cref="P:ChartKit.Drawing.IAnimatable.IsValid" />
        </member>
        <member name="P:ChartKit.Drawing.Animatable.CurrentTime">
            <inheritdoc cref="P:ChartKit.Drawing.IAnimatable.CurrentTime" />
        </member>
        <member name="P:ChartKit.Drawing.Animatable.RemoveOnCompleted">
            <inheritdoc cref="P:ChartKit.Drawing.IAnimatable.RemoveOnCompleted" />
        </member>
        <member name="P:ChartKit.Drawing.Animatable.MotionProperties">
            <inheritdoc cref="P:ChartKit.Drawing.IAnimatable.MotionProperties" />
        </member>
        <member name="M:ChartKit.Drawing.Animatable.SetTransition(ChartKit.Drawing.Animation,System.String[])">
            <inheritdoc cref="M:ChartKit.Drawing.IAnimatable.SetTransition(ChartKit.Drawing.Animation,System.String[])" />
        </member>
        <member name="M:ChartKit.Drawing.Animatable.RemoveTransition(System.String[])">
            <inheritdoc cref="M:ChartKit.Drawing.IAnimatable.RemoveTransition(System.String[])" />
        </member>
        <member name="M:ChartKit.Drawing.Animatable.CompleteTransition(System.String[])">
            <inheritdoc cref="M:ChartKit.Drawing.IAnimatable.CompleteTransition(System.String[])" />
        </member>
        <member name="M:ChartKit.Drawing.Animatable.RegisterMotionProperty``1(``0)">
            <summary>
            Registers a motion property.
            </summary>
            <typeparam name="T">The type of the property.</typeparam>
            <param name="motionProperty">The transition.</param>
            <returns></returns>
        </member>
        <member name="T:ChartKit.Drawing.Animation">
            <summary>
            Defines an animation.
            </summary>
        </member>
        <member name="M:ChartKit.Drawing.Animation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.Drawing.Animation"/> class.
            </summary>
        </member>
        <member name="M:ChartKit.Drawing.Animation.#ctor(System.Func{System.Single,System.Single},System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.Drawing.Animation"/> class.
            </summary>
            <param name="easingFunction">The easing function.</param>
            <param name="duration">The duration.</param>
        </member>
        <member name="M:ChartKit.Drawing.Animation.#ctor(System.Func{System.Single,System.Single},System.TimeSpan,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.Drawing.Animation"/> class.
            </summary>
            <param name="easingFunction">The easing function.</param>
            <param name="duration">The duration.</param>
            <param name="repeatTimes">The repeat times.</param>
        </member>
        <member name="M:ChartKit.Drawing.Animation.#ctor(System.Func{System.Single,System.Single},System.Int64,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.Drawing.Animation"/> class.
            </summary>
            <param name="easingFunction">The easing function.</param>
            <param name="duration">The duration.</param>
            <param name="repeatTimes">The repeat times.</param>
        </member>
        <member name="M:ChartKit.Drawing.Animation.#ctor(ChartKit.Drawing.Animation)">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.Drawing.Animation"/> class.
            </summary>
            <param name="animation">The animation.</param>
        </member>
        <member name="P:ChartKit.Drawing.Animation.EasingFunction">
            <summary>
            Gets or sets the easing function.
            </summary>
        </member>
        <member name="P:ChartKit.Drawing.Animation.Duration">
            <summary>
            Gets or sets the duration of the transition in Milliseconds.
            </summary>
        </member>
        <member name="P:ChartKit.Drawing.Animation.Repeat">
            <summary>
            Gets or sets how many times the animation needs to repeat before it is completed, 
            use int.MaxValue to repeat it indefinitely number of times.
            </summary>
        </member>
        <member name="T:ChartKit.Drawing.BezierErrorVisualPoint`3">
            <summary>
            Defines a line bezier visual point.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <typeparam name="TVisual">The type of the visual.</typeparam>
            <typeparam name="TErrorGeometry">The type of the error geometry.</typeparam>
        </member>
        <member name="P:ChartKit.Drawing.BezierErrorVisualPoint`3.YError">
            <summary>
            Gets or sets the y error geometry.
            </summary>
        </member>
        <member name="P:ChartKit.Drawing.BezierErrorVisualPoint`3.XError">
            <summary>
            Gets or sets the x error geometry.
            </summary>
        </member>
        <member name="T:ChartKit.Drawing.BezierVisualPoint`2">
            <summary>
            Defines a line bezier visual point.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <typeparam name="TVisual">The type of the visual.</typeparam>
        </member>
        <member name="P:ChartKit.Drawing.BezierVisualPoint`2.Geometry">
            <summary>
            Gets the geometry.
            </summary>
            <value>
            The geometry.
            </value>
        </member>
        <member name="P:ChartKit.Drawing.BezierVisualPoint`2.Bezier">
            <summary>
            Gets the bezier.
            </summary>
            <value>
            The bezier.
            </value>
        </member>
        <member name="P:ChartKit.Drawing.BezierVisualPoint`2.FillPath">
            <summary>
            Gets or sets the path.
            </summary>
            <value>
            The path.
            </value>
        </member>
        <member name="P:ChartKit.Drawing.BezierVisualPoint`2.StrokePath">
            <summary>
            Gets or sets the stroke path.
            </summary>
            <value>
            The stroke path.
            </value>
        </member>
        <member name="T:ChartKit.Drawing.ContainerOrientation">
            <summary>
            Defines orientation.
            </summary>
        </member>
        <member name="F:ChartKit.Drawing.ContainerOrientation.Horizontal">
            <summary>
            The horizontal orientation.
            </summary>
        </member>
        <member name="F:ChartKit.Drawing.ContainerOrientation.Vertical">
            <summary>
            The vertical orientation.
            </summary>
        </member>
        <member name="T:ChartKit.Drawing.DrawingContext">
            <summary>
            Defines a context that is able to draw 2D shapes in the user interface.
            </summary>
        </member>
        <member name="M:ChartKit.Drawing.DrawingContext.OnBeginDraw">
            <summary>
            Called when the frame starts.
            </summary>
        </member>
        <member name="M:ChartKit.Drawing.DrawingContext.OnEndDraw">
            <summary>
            Called when the frame ends.
            </summary>
        </member>
        <member name="T:ChartKit.Drawing.ErrorVisual`1">
            <summary>
            Defines an error visual.
            </summary>
            <typeparam name="TErrorGeometry">The type of the error geometry.</typeparam>
        </member>
        <member name="P:ChartKit.Drawing.ErrorVisual`1.YError">
            <summary>
            Gets or sets the y error geometry.
            </summary>
        </member>
        <member name="P:ChartKit.Drawing.ErrorVisual`1.XError">
            <summary>
            Gets or sets the x error geometry.
            </summary>
        </member>
        <member name="T:ChartKit.Drawing.IAnimatable">
            <summary>
            Defines an animated object, the properties of this object move according to the easing and speed when a change occurs.
            </summary>
        </member>
        <member name="P:ChartKit.Drawing.IAnimatable.IsValid">
            <summary>
            Gets or sets a value indicating whether this instance is completed.
            </summary>
            <value>
              <c>true</c> if this instance is completed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:ChartKit.Drawing.IAnimatable.CurrentTime">
            <summary>
            Gets or sets the current time.
            </summary>
            <value>
            The current time.
            </value>
        </member>
        <member name="P:ChartKit.Drawing.IAnimatable.RemoveOnCompleted">
            <summary>
            Gets or sets a value indicating whether the element is removed when all the transitions complete.
            </summary>
            <value>
              <c>true</c> if remove on completed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:ChartKit.Drawing.IAnimatable.MotionProperties">
            <summary>
            Gets the motion properties.
            </summary>
        </member>
        <member name="M:ChartKit.Drawing.IAnimatable.SetTransition(ChartKit.Drawing.Animation,System.String[])">
            <summary>
            Sets a property transition for the specified property or properties.
            </summary>
            <param name="animation">The animation.</param>
            <param name="propertyName">Name of the property, use null to set all the animatable properties.</param>
        </member>
        <member name="M:ChartKit.Drawing.IAnimatable.RemoveTransition(System.String[])">
            <summary>
            Removes a property or properties transitions.
            </summary>
            <param name="propertyName">Name of the property, null to remove them all.</param>
        </member>
        <member name="M:ChartKit.Drawing.IAnimatable.CompleteTransition(System.String[])">
            <summary>
            Completes the property or properties transitions.
            </summary>
            <param name="propertyName">Name of the property, null to select them all.</param>
        </member>
        <member name="T:ChartKit.Drawing.IArcGeometry`1">
            <summary>
            Defines an arc geometry.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <seealso cref="T:ChartKit.Drawing.IGeometry`1" />
        </member>
        <member name="P:ChartKit.Drawing.IArcGeometry`1.CenterX">
            <summary>
            Gets or sets the center x.
            </summary>
            <value>
            The center x.
            </value>
        </member>
        <member name="P:ChartKit.Drawing.IArcGeometry`1.CenterY">
            <summary>
            Gets or sets the center y.
            </summary>
            <value>
            The center y.
            </value>
        </member>
        <member name="P:ChartKit.Drawing.IArcGeometry`1.Width">
            <summary>
            Gets or sets the width.
            </summary>
            <value>
            The width.
            </value>
        </member>
        <member name="P:ChartKit.Drawing.IArcGeometry`1.Height">
            <summary>
            Gets or sets the height.
            </summary>
            <value>
            The height.
            </value>
        </member>
        <member name="P:ChartKit.Drawing.IArcGeometry`1.StartAngle">
            <summary>
            Gets or sets the start angle in degrees.
            </summary>
            <value>
            The start angle.
            </value>
        </member>
        <member name="P:ChartKit.Drawing.IArcGeometry`1.SweepAngle">
            <summary>
            Gets or sets the sweep angle in degrees.
            </summary>
            <value>
            The sweep angle.
            </value>
        </member>
        <member name="T:ChartKit.Drawing.IBoxGeometry`1">
            <summary>
            Defines a box geometry.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <seealso cref="T:ChartKit.Drawing.ISizedGeometry`1" />
        </member>
        <member name="P:ChartKit.Drawing.IBoxGeometry`1.Width">
            <summary>
            Gets or sets the width.
            </summary>
            <value>
            The width.
            </value>
        </member>
        <member name="P:ChartKit.Drawing.IBoxGeometry`1.Third">
            <summary>
            Gets or sets the third quadrile.
            </summary>
            <value>
            The third quadrile.
            </value>
        </member>
        <member name="P:ChartKit.Drawing.IBoxGeometry`1.First">
            <summary>
            Gets or sets the first quadrile.
            </summary>
            <value>
            The first quadrile.
            </value>
        </member>
        <member name="P:ChartKit.Drawing.IBoxGeometry`1.Min">
            <summary>
            Gets or sets the min.
            </summary>
            <value>
            The min.
            </value>
        </member>
        <member name="P:ChartKit.Drawing.IBoxGeometry`1.Median">
            <summary>
            Gets or sets the median.
            </summary>
            <value>
            The median.
            </value>
        </member>
        <member name="T:ChartKit.Drawing.IColoredGeometry`1">
            <summary>
            Defines a colored geometry in the user interface, a geometry with a Color property.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <seealso cref="T:ChartKit.Drawing.IGeometry`1" />
        </member>
        <member name="P:ChartKit.Drawing.IColoredGeometry`1.Color">
            <summary>
            Gets or sets the color.
            </summary>
        </member>
        <member name="T:ChartKit.Drawing.ICubicBezierPathCommand`1">
            <summary>
            Defiens a bezier command.
            </summary>
            <seealso cref="T:ChartKit.Drawing.IPathCommand`1" />
        </member>
        <member name="P:ChartKit.Drawing.ICubicBezierPathCommand`1.X0">
            <summary>
            Gets or sets the x0.
            </summary>
            <value>
            The x0.
            </value>
        </member>
        <member name="P:ChartKit.Drawing.ICubicBezierPathCommand`1.Y0">
            <summary>
            Gets or sets the y0.
            </summary>
            <value>
            The y0.
            </value>
        </member>
        <member name="P:ChartKit.Drawing.ICubicBezierPathCommand`1.X1">
            <summary>
            Gets or sets the x1.
            </summary>
            <value>
            The x1.
            </value>
        </member>
        <member name="P:ChartKit.Drawing.ICubicBezierPathCommand`1.Y1">
            <summary>
            Gets or sets the y1.
            </summary>
            <value>
            The y1.
            </value>
        </member>
        <member name="P:ChartKit.Drawing.ICubicBezierPathCommand`1.X2">
            <summary>
            Gets or sets the x2.
            </summary>
            <value>
            The x2.
            </value>
        </member>
        <member name="P:ChartKit.Drawing.ICubicBezierPathCommand`1.Y2">
            <summary>
            Gets or sets the y2.
            </summary>
            <value>
            The y2.
            </value>
        </member>
        <member name="T:ChartKit.Drawing.IDoughnutGeometry`1">
            <summary>
            Defines a doughnut geometry.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <seealso cref="T:ChartKit.Drawing.IDrawable`1" />
        </member>
        <member name="P:ChartKit.Drawing.IDoughnutGeometry`1.CenterX">
            <summary>
            Gets or sets the center x.
            </summary>
            <value>
            The center x.
            </value>
        </member>
        <member name="P:ChartKit.Drawing.IDoughnutGeometry`1.CenterY">
            <summary>
            Gets or sets the center y.
            </summary>
            <value>
            The center y.
            </value>
        </member>
        <member name="P:ChartKit.Drawing.IDoughnutGeometry`1.Width">
            <summary>
            Gets or sets the width.
            </summary>
            <value>
            The width.
            </value>
        </member>
        <member name="P:ChartKit.Drawing.IDoughnutGeometry`1.Height">
            <summary>
            Gets or sets the height.
            </summary>
            <value>
            The height.
            </value>
        </member>
        <member name="P:ChartKit.Drawing.IDoughnutGeometry`1.StartAngle">
            <summary>
            Gets or sets the start angle in degrees.
            </summary>
            <value>
            The start angle.
            </value>
        </member>
        <member name="P:ChartKit.Drawing.IDoughnutGeometry`1.SweepAngle">
            <summary>
            Gets or sets the sweep angle in degrees.
            </summary>
            <value>
            The sweep angle.
            </value>
        </member>
        <member name="P:ChartKit.Drawing.IDoughnutGeometry`1.PushOut">
            <summary>
            Gets or sets the push out.
            </summary>
            <value>
            The push out.
            </value>
        </member>
        <member name="P:ChartKit.Drawing.IDoughnutGeometry`1.InnerRadius">
            <summary>
            Gets or sets the inner radius.
            </summary>
            <value>
            The inner radius.
            </value>
        </member>
        <member name="P:ChartKit.Drawing.IDoughnutGeometry`1.CornerRadius">
            <summary>
            Gets or sets the corner radius.
            </summary>
            <value>
            The corner radius.
            </value>
        </member>
        <member name="P:ChartKit.Drawing.IDoughnutGeometry`1.InvertedCornerRadius">
            <summary>
            Gets or sets a value indicating whether the direction of the corner radius is inverted.
            </summary>
            <value>
              <c>true</c> if the direction is inverted; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:ChartKit.Drawing.IDrawable`1">
            <summary>
            Defines a drawable object, an object that can be represented in the user interface.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <seealso cref="T:ChartKit.Drawing.IAnimatable" />
        </member>
        <member name="M:ChartKit.Drawing.IDrawable`1.Draw(`0)">
            <summary>
            Draws the instance in the user interface with for the specified context.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="T:ChartKit.Drawing.IFinancialGeometry`1">
            <summary>
            Defines a financial geometry.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <seealso cref="T:ChartKit.Drawing.ISizedGeometry`1" />
        </member>
        <member name="P:ChartKit.Drawing.IFinancialGeometry`1.Width">
            <summary>
            Gets or sets the width.
            </summary>
            <value>
            The width.
            </value>
        </member>
        <member name="P:ChartKit.Drawing.IFinancialGeometry`1.Open">
            <summary>
            Gets or sets the open.
            </summary>
            <value>
            The open.
            </value>
        </member>
        <member name="P:ChartKit.Drawing.IFinancialGeometry`1.Close">
            <summary>
            Gets or sets the close.
            </summary>
            <value>
            The close.
            </value>
        </member>
        <member name="P:ChartKit.Drawing.IFinancialGeometry`1.Low">
            <summary>
            Gets or sets the low.
            </summary>
            <value>
            The low.
            </value>
        </member>
        <member name="T:ChartKit.Drawing.IGeometry`1">
            <summary>
            Defines a geometry in the user interface.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <seealso cref="T:ChartKit.Drawing.IDrawable`1" />
        </member>
        <member name="P:ChartKit.Drawing.IGeometry`1.Parent">
            <summary>
            Gets or sets the parent shape, if any the X and Y properties will be relative to the parent.
            </summary>
        </member>
        <member name="P:ChartKit.Drawing.IGeometry`1.TransformOrigin">
            <summary>
            Gets or sets the transform origin.
            </summary>
        </member>
        <member name="P:ChartKit.Drawing.IGeometry`1.TranslateTransform">
            <summary>
            Gets or sets the translate transform.
            </summary>
            <value>
            The translate in coordinates.
            </value>
        </member>
        <member name="P:ChartKit.Drawing.IGeometry`1.RotateTransform">
            <summary>
            Gets or sets the rotation transform in degrees.
            </summary>
            <value>
            The rotation in degrees.
            </value>
        </member>
        <member name="P:ChartKit.Drawing.IGeometry`1.ScaleTransform">
            <summary>
            Gets or sets the scale transform.
            </summary>
            <value>
            The scale to use on the X and Y axis.
            </value>
        </member>
        <member name="P:ChartKit.Drawing.IGeometry`1.SkewTransform">
            <summary>
            Gets or sets the skew transform.
            </summary>
            <value>
            The skew factor to use in the X and Y axis, both axes go from 0 to 1, where 0 is nothing and 1
            the length of the shape in the specified axis.
            </value>
        </member>
        <member name="P:ChartKit.Drawing.IGeometry`1.X">
            <summary>
            Gets or sets the x coordinate.
            When the parent is null the coordinates are relative to the canvas.
            When the parent is not null
            the setter coordinates are relative to the parent
            but
            the getter is relative to the canvas.
            </summary>
            <value>
            The x coordinate.
            </value>
        </member>
        <member name="P:ChartKit.Drawing.IGeometry`1.Y">
            <summary>
            Gets or sets the y coordinate.
            When the parent is null the coordinates are relative to the canvas.
            When the parent is not null
            the setter coordinates are relative to the parent
            but
            the getter is relative to the canvas.
            </summary>
            <value>
            The y coordinate.
            </value>
        </member>
        <member name="M:ChartKit.Drawing.IGeometry`1.Measure(ChartKit.Drawing.IPaint{`0})">
            <summary>
            Measures the specified drawable task.
            </summary>
            <param name="drawableTask">The drawable task.</param>
            <returns></returns>
        </member>
        <member name="T:ChartKit.Drawing.ILabelGeometry`1">
            <summary>
            Defines a label geometry in the user interface.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <seealso cref="T:ChartKit.Drawing.IGeometry`1" />
        </member>
        <member name="P:ChartKit.Drawing.ILabelGeometry`1.Padding">
            <summary>
            Gets or sets the padding.
            </summary>
            <value>
            The padding.
            </value>
        </member>
        <member name="P:ChartKit.Drawing.ILabelGeometry`1.LineHeight">
            <summary>
            Gets or sets the line height [in times the text height].
            </summary>
            <value>
            The padding.
            </value>
        </member>
        <member name="P:ChartKit.Drawing.ILabelGeometry`1.VerticalAlign">
            <summary>
            Gets or sets the vertical align.
            </summary>
            <value>
            The vertical align.
            </value>
        </member>
        <member name="P:ChartKit.Drawing.ILabelGeometry`1.HorizontalAlign">
            <summary>
            Gets or sets the horizontal align.
            </summary>
            <value>
            The horizontal align.
            </value>
        </member>
        <member name="P:ChartKit.Drawing.ILabelGeometry`1.Text">
            <summary>
            Gets or sets the text.
            </summary>
            <value>
            The text.
            </value>
        </member>
        <member name="P:ChartKit.Drawing.ILabelGeometry`1.TextSize">
            <summary>
            Gets or sets the size of the text.
            </summary>
            <value>
            The size of the text.
            </value>
        </member>
        <member name="P:ChartKit.Drawing.ILabelGeometry`1.MaxWidth">
            <summary>
            Gets or sets the maximum width.
            </summary>
        </member>
        <member name="P:ChartKit.Drawing.ILabelGeometry`1.Background">
            <summary>
            Gets or sets the background color.
            </summary>
        </member>
        <member name="T:ChartKit.Drawing.ILineGeometry`1">
            <summary>
            Defines a line geometry in the user interface.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <seealso cref="T:ChartKit.Drawing.IGeometry`1" />
        </member>
        <member name="P:ChartKit.Drawing.ILineGeometry`1.X1">
            <summary>
            Gets or sets the x1.
            </summary>
            <value>
            The x1.
            </value>
        </member>
        <member name="P:ChartKit.Drawing.ILineGeometry`1.Y1">
            <summary>
            Gets or sets the y1.
            </summary>
            <value>
            The y1.
            </value>
        </member>
        <member name="T:ChartKit.Drawing.ILinePathSegment`1">
            <summary>
            Defines a line path segment.
            </summary>
            <typeparam name="TPath">The type of the path.</typeparam>
            <seealso cref="T:ChartKit.Drawing.IPathCommand`1" />
        </member>
        <member name="P:ChartKit.Drawing.ILinePathSegment`1.X">
            <summary>
            Gets or sets the x.
            </summary>
            <value>
            The x.
            </value>
        </member>
        <member name="P:ChartKit.Drawing.ILinePathSegment`1.Y">
            <summary>
            Gets or sets the y.
            </summary>
            <value>
            The y.
            </value>
        </member>
        <member name="T:ChartKit.Drawing.IMoveToPathCommand`1">
            <summary>
            Defines the move to path comamnd.
            </summary>
            <typeparam name="TPath">The type of the path.</typeparam>
            <seealso cref="T:ChartKit.Drawing.IPathCommand`1" />
        </member>
        <member name="P:ChartKit.Drawing.IMoveToPathCommand`1.X">
            <summary>
            Gets or sets the x.
            </summary>
            <value>
            The x.
            </value>
        </member>
        <member name="P:ChartKit.Drawing.IMoveToPathCommand`1.Y">
            <summary>
            Gets or sets the y.
            </summary>
            <value>
            The y.
            </value>
        </member>
        <member name="T:ChartKit.Drawing.INeedleGeometry`1">
            <summary>
            Defines a needle geometry in the user interface.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <seealso cref="T:ChartKit.Drawing.IGeometry`1" />
        </member>
        <member name="P:ChartKit.Drawing.INeedleGeometry`1.Radius">
            <summary>
            Gets or sets the radius.
            </summary>
        </member>
        <member name="T:ChartKit.Drawing.IPaint`1">
            <summary>
            Defines a set of geometries that will be drawn according to this instance specifications.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
        </member>
        <member name="P:ChartKit.Drawing.IPaint`1.IsStroke">
            <summary>
            Gets or sets a value indicating whether this instance is stroke.
            </summary>
            <value>
              <c>true</c> if this instance is stroke; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:ChartKit.Drawing.IPaint`1.IsFill">
            <summary>
            Gets or sets a value indicating whether this instance is fill.
            </summary>
            <value>
              <c>true</c> if this instance is fill; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:ChartKit.Drawing.IPaint`1.FontFamily">
            <summary>
            Gets or sets the font family.
            </summary>
        </member>
        <member name="P:ChartKit.Drawing.IPaint`1.ZIndex">
            <summary>
            Gets or sets the index of the z.
            </summary>
            <value>
            The index of the z.
            </value>
        </member>
        <member name="P:ChartKit.Drawing.IPaint`1.StrokeThickness">
            <summary>
            Gets or sets the stroke thickness.
            </summary>
            <value>
            The stroke thickness.
            </value>
        </member>
        <member name="P:ChartKit.Drawing.IPaint`1.IsPaused">
            <summary>
            Gets or sets a value indicating whether this instance is paused.
            </summary>
            <value>
              <c>true</c> if this instance is paused; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:ChartKit.Drawing.IPaint`1.GetClipRectangle(ChartKit.Motion.MotionCanvas{`0})">
            <summary>
            Gets or sets the clip rectangle.
            </summary>
            <returns>
            <param name="canvas">The canvas.</param>
            The clip rectangle.
            </returns>
        </member>
        <member name="M:ChartKit.Drawing.IPaint`1.SetClipRectangle(ChartKit.Motion.MotionCanvas{`0},ChartKit.Drawing.LvcRectangle)">
            <summary>
            Gets or sets the clip rectangle.
            </summary>
            <param name="canvas">The canvas.</param>
            <param name="value">
            The clip rectangle.
            </param>
        </member>
        <member name="M:ChartKit.Drawing.IPaint`1.InitializeTask(`0)">
            <summary>
            Initializes the task.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:ChartKit.Drawing.IPaint`1.GetGeometries(ChartKit.Motion.MotionCanvas{`0})">
            <summary>
            Gets the geometries.
            </summary>
            <returns></returns>
            <param name="canvas">The canvas.</param>
        </member>
        <member name="M:ChartKit.Drawing.IPaint`1.SetGeometries(ChartKit.Motion.MotionCanvas{`0},System.Collections.Generic.HashSet{ChartKit.Drawing.IDrawable{`0}})">
            <summary>
            Sets the geometries.
            </summary>
            <param name="canvas">The canvas.</param>
            <param name="geometries">The geometries.</param>
        </member>
        <member name="M:ChartKit.Drawing.IPaint`1.AddGeometryToPaintTask(ChartKit.Motion.MotionCanvas{`0},ChartKit.Drawing.IDrawable{`0})">
            <summary>
            Adds the geometry to paint task.
            </summary>
            <param name="canvas">The canvas.</param>
            <param name="geometry">The geometry.</param>
        </member>
        <member name="M:ChartKit.Drawing.IPaint`1.RemoveGeometryFromPainTask(ChartKit.Motion.MotionCanvas{`0},ChartKit.Drawing.IDrawable{`0})">
            <summary>
            Removes the geometry from pain task.
            </summary>
            <param name="canvas">The canvas.</param>
            <param name="geometry">The geometry.</param>
        </member>
        <member name="M:ChartKit.Drawing.IPaint`1.ClearGeometriesFromPaintTask(ChartKit.Motion.MotionCanvas{`0})">
            <summary>
            Removes all geometry from paint task.
            </summary>
            <param name="canvas">The canvas.</param>
        </member>
        <member name="M:ChartKit.Drawing.IPaint`1.ReleaseCanvas(ChartKit.Motion.MotionCanvas{`0})">
            <summary>
            Releases the canvas resources.
            </summary>
            <param name="canvas">The canvas.</param>
        </member>
        <member name="M:ChartKit.Drawing.IPaint`1.ApplyOpacityMask(`0,ChartKit.Drawing.IPaintable{`0})">
            <summary>
            Sets the opacity according to the given geometry.
            </summary>
            <param name="context">The context.</param>
            <param name="geometry">The geometry.</param>
        </member>
        <member name="M:ChartKit.Drawing.IPaint`1.RestoreOpacityMask(`0,ChartKit.Drawing.IPaintable{`0})">
            <summary>
            Resets the opacity.
            </summary>
            <param name="context">The context.</param>
            <param name="geometry">The geometry.</param>
        </member>
        <member name="M:ChartKit.Drawing.IPaint`1.CloneTask">
            <summary>
            Clones the task.
            </summary>
            <returns></returns>
        </member>
        <member name="T:ChartKit.Drawing.IPaintable`1">
            <summary>
            Defines a paintable object, an object that has can have its own paint definition.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <seealso cref="T:ChartKit.Drawing.IDrawable`1" />
        </member>
        <member name="P:ChartKit.Drawing.IPaintable`1.Stroke">
            <summary>
            Gets or sets the stroke paint.
            </summary>
        </member>
        <member name="P:ChartKit.Drawing.IPaintable`1.Fill">
            <summary>
            Gets or sets the fill paint.
            </summary>
        </member>
        <member name="P:ChartKit.Drawing.IPaintable`1.Opacity">
            <summary>
            Gets or sets the opacity.
            </summary>
            <value>
            The opacity.
            </value>
        </member>
        <member name="T:ChartKit.Drawing.IPathCommand`1">
            <summary>
            Defines a path command.
            </summary>
            <typeparam name="TPathContext">The type of the path context.</typeparam>
            <seealso cref="T:ChartKit.Drawing.IAnimatable" />
        </member>
        <member name="P:ChartKit.Drawing.IPathCommand`1.Id">
            <summary>
            Gets or sets the segment id.
            </summary>
        </member>
        <member name="M:ChartKit.Drawing.IPathCommand`1.Execute(`0,System.Int64,ChartKit.Drawing.Animatable)">
            <summary>
            Executes the command in the path.
            </summary>
            <param name="path">The path.</param>
            <param name="currentTime">The current time.</param>
            <param name="pathGeometry">The path geometry.</param>
        </member>
        <member name="T:ChartKit.Drawing.IPathGeometry`2">
            <summary>
            Defines a path geometry in the user interface.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <typeparam name="TPathArgs">The type of the path.</typeparam>
            <seealso cref="T:ChartKit.Drawing.IDrawable`1" />
        </member>
        <member name="P:ChartKit.Drawing.IPathGeometry`2.IsClosed">
            <summary>
            Gets or sets a value indicating whether the path is closed.
            </summary>
            <value>
              <c>true</c> if this instance is closed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:ChartKit.Drawing.IPathGeometry`2.FirstCommand">
            <summary>
            Gets the first linked node.
            </summary>
        </member>
        <member name="P:ChartKit.Drawing.IPathGeometry`2.LastCommand">
            <summary>
            Gets the last linked node.
            </summary>
        </member>
        <member name="P:ChartKit.Drawing.IPathGeometry`2.CountCommands">
            <summary>
            Gets current commands count.
            </summary>
        </member>
        <member name="M:ChartKit.Drawing.IPathGeometry`2.AddLast(ChartKit.Drawing.IPathCommand{`1})">
            <summary>
            Adds a path command at the end.
            </summary>
            <param name="command">The command.</param>
            <returns>The linked node.</returns>
        </member>
        <member name="M:ChartKit.Drawing.IPathGeometry`2.AddFirst(ChartKit.Drawing.IPathCommand{`1})">
            <summary>
            Adds a path command at the beginning.
            </summary>
            <param name="command">The command.</param>
            <returns>The linked node.</returns>
        </member>
        <member name="M:ChartKit.Drawing.IPathGeometry`2.AddAfter(System.Collections.Generic.LinkedListNode{ChartKit.Drawing.IPathCommand{`1}},ChartKit.Drawing.IPathCommand{`1})">
            <summary>
            Adds a command after the given liked node.
            </summary>
            <param name="node">The linked node.</param>
            <param name="command"></param>
            <returns>The linked node.</returns>
        </member>
        <member name="M:ChartKit.Drawing.IPathGeometry`2.AddBefore(System.Collections.Generic.LinkedListNode{ChartKit.Drawing.IPathCommand{`1}},ChartKit.Drawing.IPathCommand{`1})">
            <summary>
            Adds a path command before the given linked node.
            </summary>
            <param name="node">The linked node.</param>
            <param name="command"></param>
            <returns>The linked node.</returns>
        </member>
        <member name="M:ChartKit.Drawing.IPathGeometry`2.RemoveCommand(ChartKit.Drawing.IPathCommand{`1})">
            <summary>
            Removes a path command.
            </summary>
            <param name="command">The command.</param>
        </member>
        <member name="M:ChartKit.Drawing.IPathGeometry`2.RemoveCommand(System.Collections.Generic.LinkedListNode{ChartKit.Drawing.IPathCommand{`1}})">
            <summary>
            Removes the specified node.
            </summary>
            <param name="node">The node.</param>
        </member>
        <member name="M:ChartKit.Drawing.IPathGeometry`2.ContainsCommand(ChartKit.Drawing.IPathCommand{`1})">
            <summary>
            Determines whether the specified command is contained in the current path.
            </summary>
            <param name="command">The command.</param>
            <returns>
              <c>true</c> if the specified command contains command; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:ChartKit.Drawing.IPathGeometry`2.ClearCommands">
            <summary>
            Clears the commands.
            </summary>
        </member>
        <member name="T:ChartKit.Drawing.IRoundedGeometry`1">
            <summary>
            Defines a geometry in the user interface with rounded corners.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <seealso cref="T:ChartKit.Drawing.IGeometry`1" />
        </member>
        <member name="P:ChartKit.Drawing.IRoundedGeometry`1.BorderRadius">
            <summary>
            Gets or sets the border radius.
            </summary>
        </member>
        <member name="T:ChartKit.Drawing.ISizedGeometry`1">
            <summary>
            Defines a sized geometry in the user interface, a geometry with Height and Width properties.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <seealso cref="T:ChartKit.Drawing.IGeometry`1" />
        </member>
        <member name="P:ChartKit.Drawing.ISizedGeometry`1.Width">
            <summary>
            Gets or sets the width.
            </summary>
            <value>
            The width.
            </value>
        </member>
        <member name="P:ChartKit.Drawing.ISizedGeometry`1.Height">
            <summary>
            Gets or sets the height.
            </summary>
            <value>
            The height.
            </value>
        </member>
        <member name="T:ChartKit.Drawing.ISolidColorGeometry`1">
            <summary>
            Defines a sized and solid color geometry.
            </summary>
        </member>
        <member name="P:ChartKit.Drawing.ISolidColorGeometry`1.Color">
            <summary>
            Gets or sets the color.
            </summary>
        </member>
        <member name="T:ChartKit.Drawing.IStepLineSegment`1">
            <summary>
            Defiens a stepline segment.
            </summary>
            <typeparam name="TPathContext">The type of the path context.</typeparam>
            <seealso cref="T:ChartKit.Drawing.IPathCommand`1" />
        </member>
        <member name="P:ChartKit.Drawing.IStepLineSegment`1.X0">
            <summary>
            Gets or sets the X0 value.
            </summary>
        </member>
        <member name="P:ChartKit.Drawing.IStepLineSegment`1.Y0">
            <summary>
            Gets or sets the Y0 value.
            </summary>
        </member>
        <member name="P:ChartKit.Drawing.IStepLineSegment`1.X1">
            <summary>
            Gets or sets the X1 value.
            </summary>
        </member>
        <member name="P:ChartKit.Drawing.IStepLineSegment`1.Y1">
            <summary>
            Gets or sets the Y1 value.
            </summary>
        </member>
        <member name="T:ChartKit.Drawing.ISvgPath`1">
            <summary>
            Defines a geometry that is built using from a svg path.
            </summary>
        </member>
        <member name="P:ChartKit.Drawing.ISvgPath`1.SVGPath">
            <summary>
            Gets or sets the svg path.
            </summary>
        </member>
        <member name="T:ChartKit.Drawing.IVectorGeometry`2">
            <summary>
            Defines an area geometry.
            </summary>
            <typeparam name="TSegment"></typeparam>
            <typeparam name="TDrawingContext"></typeparam>
        </member>
        <member name="P:ChartKit.Drawing.IVectorGeometry`2.Commands">
            <summary>
            Gets or sets the commands.
            </summary>
        </member>
        <member name="P:ChartKit.Drawing.IVectorGeometry`2.ClosingMethod">
            <summary>
            Defines the closing method.
            </summary>
        </member>
        <member name="P:ChartKit.Drawing.IVectorGeometry`2.Pivot">
            <summary>
            Gets or sets the pivot.
            </summary>
        </member>
        <member name="T:ChartKit.Drawing.KeyFrame">
            <summary>
            Defines a key frame.
            </summary>
        </member>
        <member name="P:ChartKit.Drawing.KeyFrame.Time">
            <summary>
            The time, from 0 to 1.
            </summary>
        </member>
        <member name="P:ChartKit.Drawing.KeyFrame.Value">
            <summary>
            The value from 0 to 1.
            </summary>
        </member>
        <member name="P:ChartKit.Drawing.KeyFrame.EasingFunction">
            <summary>
            EasingFunction.
            </summary>
        </member>
        <member name="T:ChartKit.Drawing.LvcColor">
            <summary>
            Defines a color.
            </summary>
        </member>
        <member name="M:ChartKit.Drawing.LvcColor.#ctor(System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.Drawing.LvcColor"/> struct.
            </summary>
            <param name="red">The red component from 0 to 255.</param>
            <param name="green">The green component from 0 to 255.</param>
            <param name="blue">The blue component from 0 to 255.</param>
            <param name="alpha">The alpha channel component from 0 to 255.</param>
        </member>
        <member name="M:ChartKit.Drawing.LvcColor.#ctor(System.Byte,System.Byte,System.Byte)">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.Drawing.LvcColor"/> struct.
            </summary>
            <param name="red">The red component from 0 to 255.</param>
            <param name="green">The green component from 0 to 255.</param>
            <param name="blue">The blue component from 0 to 255.</param>
        </member>
        <member name="P:ChartKit.Drawing.LvcColor.Empty">
            <summary>
            Gets an empty color.
            </summary>
        </member>
        <member name="P:ChartKit.Drawing.LvcColor.R">
            <summary>
            Gets or sets the red component.
            </summary>
        </member>
        <member name="P:ChartKit.Drawing.LvcColor.G">
            <summary>
            Gets or sets the green component.
            </summary>
        </member>
        <member name="P:ChartKit.Drawing.LvcColor.B">
            <summary>
            Gets or sets the blue component.
            </summary>
        </member>
        <member name="P:ChartKit.Drawing.LvcColor.A">
            <summary>
            Gets or sets the alpha component.
            </summary>
        </member>
        <member name="P:ChartKit.Drawing.LvcColor.IsEmpty">
            <summary>
            Gets or sets whether this color is empty.
            </summary>
        </member>
        <member name="M:ChartKit.Drawing.LvcColor.Equals(System.Object)">
            <summary>
            Determines whether the instance is equals to the given instance.
            </summary>
            <param name="obj">The instance to compare to.</param>
            <returns>The comparision result.</returns>
        </member>
        <member name="M:ChartKit.Drawing.LvcColor.GetHashCode">
            <summary>
            Gets the object hash code.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Drawing.LvcColor.op_Equality(ChartKit.Drawing.LvcColor,ChartKit.Drawing.LvcColor)">
            <summary>
            Compares two <see cref="T:ChartKit.Drawing.LvcColor"/> instances.
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Drawing.LvcColor.op_Inequality(ChartKit.Drawing.LvcColor,ChartKit.Drawing.LvcColor)">
            <summary>
            Compares two <see cref="T:ChartKit.Drawing.LvcColor"/> instances.
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Drawing.LvcColor.FromRGB(System.Byte,System.Byte,System.Byte)">
            <summary>
            Creates a new instance of the <see cref="T:ChartKit.Drawing.LvcColor"/> class with the given components.
            </summary>
            <param name="red">The red component from 0 to 255.</param>
            <param name="green">The green component from 0 to 255.</param>
            <param name="blue">The blue component from 0 to 255.</param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Drawing.LvcColor.FromArgb(System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
            Creates a new instance of the <see cref="T:ChartKit.Drawing.LvcColor"/> class with the given components.
            </summary>
            <param name="alpha">The alpha channel component from 0 to 255.</param>
            <param name="red">The red component from 0 to 255.</param>
            <param name="green">The green component from 0 to 255.</param>
            <param name="blue">The blue component from 0 to 255.</param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Drawing.LvcColor.FromArgb(System.Byte,ChartKit.Drawing.LvcColor)">
            <summary>
            Creates a new instance of the <see cref="T:ChartKit.Drawing.LvcColor"/> class with the given components.
            </summary>
            <param name="alpha">The alpha channel component from 0 to 255.</param>
            <param name="color">The red color.</param>
            <returns></returns>
        </member>
        <member name="T:ChartKit.Drawing.LvcPoint">
            <summary>
            Defines a point.
            </summary>
        </member>
        <member name="M:ChartKit.Drawing.LvcPoint.#ctor(System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.Drawing.LvcPoint"/> struct.
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
        </member>
        <member name="M:ChartKit.Drawing.LvcPoint.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.Drawing.LvcPoint"/> struct.
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
        </member>
        <member name="P:ChartKit.Drawing.LvcPoint.X">
            <summary>
            Gets or sets the X coordinate.
            </summary>
        </member>
        <member name="P:ChartKit.Drawing.LvcPoint.Y">
            <summary>
            Gets or sets the Y coordinate.
            </summary>
        </member>
        <member name="M:ChartKit.Drawing.LvcPoint.Equals(System.Object)">
            <summary>
            Determines whether the instance is equals to the given instance.
            </summary>
            <param name="obj">The instance to compare to.</param>
            <returns>The comparision result.</returns>
        </member>
        <member name="M:ChartKit.Drawing.LvcPoint.GetHashCode">
            <summary>
            Gets the object hash code.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Drawing.LvcPoint.op_Equality(ChartKit.Drawing.LvcPoint,ChartKit.Drawing.LvcPoint)">
            <summary>
            Compares two <see cref="T:ChartKit.Drawing.LvcPoint"/> instances.
            </summary>
            <param name="l"></param>
            <param name="r"></param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Drawing.LvcPoint.op_Inequality(ChartKit.Drawing.LvcPoint,ChartKit.Drawing.LvcPoint)">
            <summary>
            Compares two <see cref="T:ChartKit.Drawing.LvcPoint"/> instances.
            </summary>
            <param name="l"></param>
            <param name="r"></param>
            <returns></returns>
        </member>
        <member name="T:ChartKit.Drawing.LvcPointD">
            <summary>
            Defines a point with double precision.
            </summary>
        </member>
        <member name="M:ChartKit.Drawing.LvcPointD.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.Drawing.LvcPointD"/> struct.
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
        </member>
        <member name="M:ChartKit.Drawing.LvcPointD.#ctor(ChartKit.Drawing.LvcPoint)">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.Drawing.LvcPointD"/> struct.
            </summary>
            <param name="point">The point coordinate.</param>
        </member>
        <member name="P:ChartKit.Drawing.LvcPointD.X">
            <summary>
            Gets or sets the X coordinate.
            </summary>
        </member>
        <member name="P:ChartKit.Drawing.LvcPointD.Y">
            <summary>
            Gets or sets the Y coordinate.
            </summary>
        </member>
        <member name="M:ChartKit.Drawing.LvcPointD.Equals(System.Object)">
            <summary>
            Determines whether the instance is equals to the given instance.
            </summary>
            <param name="obj">The instance to compare to.</param>
            <returns>The comparision result.</returns>
        </member>
        <member name="M:ChartKit.Drawing.LvcPointD.GetHashCode">
            <summary>
            Gets the object hash code.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Drawing.LvcPointD.op_Equality(ChartKit.Drawing.LvcPointD,ChartKit.Drawing.LvcPointD)">
            <summary>
            Compares two <see cref="T:ChartKit.Drawing.LvcPointD"/> instances.
            </summary>
            <param name="l"></param>
            <param name="r"></param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Drawing.LvcPointD.op_Inequality(ChartKit.Drawing.LvcPointD,ChartKit.Drawing.LvcPointD)">
            <summary>
            Compares two <see cref="T:ChartKit.Drawing.LvcPointD"/> instances.
            </summary>
            <param name="l"></param>
            <param name="r"></param>
            <returns></returns>
        </member>
        <member name="T:ChartKit.Drawing.LvcRectangle">
            <summary>
            Defines  a rectangle.
            </summary>
        </member>
        <member name="M:ChartKit.Drawing.LvcRectangle.#ctor(ChartKit.Drawing.LvcPoint,ChartKit.Drawing.LvcSize)">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.Drawing.LvcRectangle"/> struct.
            </summary>
            <param name="location"></param>
            <param name="size"></param>
        </member>
        <member name="F:ChartKit.Drawing.LvcRectangle.Empty">
            <summary>
            Gets an empty rectangle instance.
            </summary>
        </member>
        <member name="P:ChartKit.Drawing.LvcRectangle.Location">
            <summary>
            Gets or sets the location.
            </summary>
        </member>
        <member name="P:ChartKit.Drawing.LvcRectangle.X">
            <summary>
            Gets the X location coordinate.
            </summary>
        </member>
        <member name="P:ChartKit.Drawing.LvcRectangle.Y">
            <summary>
            Gets the Y location coordinate.
            </summary>
        </member>
        <member name="P:ChartKit.Drawing.LvcRectangle.Size">
            <summary>
            Gets or sets the size.
            </summary>
        </member>
        <member name="P:ChartKit.Drawing.LvcRectangle.Width">
            <summary>
            Gets the width.
            </summary>
        </member>
        <member name="P:ChartKit.Drawing.LvcRectangle.Height">
            <summary>
            Gets the height.
            </summary>
        </member>
        <member name="P:ChartKit.Drawing.LvcRectangle.IsEmpty">
            <summary>
            Gets or sets whether the instance is empty.
            </summary>
        </member>
        <member name="M:ChartKit.Drawing.LvcRectangle.Equals(System.Object)">
            <summary>
            Determines whether the instance is equals to the given instance.
            </summary>
            <param name="obj">The instance to compare to.</param>
            <returns>The comparision result.</returns>
        </member>
        <member name="M:ChartKit.Drawing.LvcRectangle.GetHashCode">
            <summary>
            Gets the object hash code.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Drawing.LvcRectangle.op_Equality(ChartKit.Drawing.LvcRectangle,ChartKit.Drawing.LvcRectangle)">
            <summary>
            Compares 2 <see cref="T:ChartKit.Drawing.LvcRectangle"/> instances.
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Drawing.LvcRectangle.op_Inequality(ChartKit.Drawing.LvcRectangle,ChartKit.Drawing.LvcRectangle)">
            <summary>
            Compares 2 <see cref="T:ChartKit.Drawing.LvcRectangle"/> instances.
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="T:ChartKit.Drawing.LvcSize">
            <summary>
            Defines a size.
            </summary>
        </member>
        <member name="M:ChartKit.Drawing.LvcSize.#ctor(System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.Drawing.LvcSize"/> struct.
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="P:ChartKit.Drawing.LvcSize.Width">
            <summary>
            Gets or sets the width.
            </summary>
        </member>
        <member name="P:ChartKit.Drawing.LvcSize.Height">
            <summary>
            Gets or sets the height.
            </summary>
        </member>
        <member name="M:ChartKit.Drawing.LvcSize.Equals(System.Object)">
            <summary>
            Determines whether the instance is equals to the given instance.
            </summary>
            <param name="obj">The instance to compare to.</param>
            <returns>The comparision result.</returns>
        </member>
        <member name="M:ChartKit.Drawing.LvcSize.GetHashCode">
            <summary>
            Gets the object hash code.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Drawing.LvcSize.op_Equality(ChartKit.Drawing.LvcSize,ChartKit.Drawing.LvcSize)">
            <summary>
            Compares two <see cref="T:ChartKit.Drawing.LvcSize"/> instances.
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Drawing.LvcSize.op_Inequality(ChartKit.Drawing.LvcSize,ChartKit.Drawing.LvcSize)">
            <summary>
            Compares two <see cref="T:ChartKit.Drawing.LvcSize"/> instances.
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="T:ChartKit.Drawing.Padding">
            <summary>
            Defines the padding measure helped class,.
            </summary>
        </member>
        <member name="M:ChartKit.Drawing.Padding.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.Drawing.Padding"/> class.
            </summary>
        </member>
        <member name="M:ChartKit.Drawing.Padding.#ctor(System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.Drawing.Padding"/> class.
            </summary>
            <param name="padding">The padding.</param>
        </member>
        <member name="M:ChartKit.Drawing.Padding.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.Drawing.Padding"/> class.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
        </member>
        <member name="M:ChartKit.Drawing.Padding.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.Drawing.Padding"/> class.
            </summary>
            <param name="left">The left.</param>
            <param name="top">The top.</param>
            <param name="right">The right.</param>
            <param name="bottom">The bottom.</param>
        </member>
        <member name="P:ChartKit.Drawing.Padding.Left">
            <summary>
            Gets or sets the left.
            </summary>
            <value>
            The left.
            </value>
        </member>
        <member name="P:ChartKit.Drawing.Padding.Right">
            <summary>
            Gets or sets the right.
            </summary>
            <value>
            The right.
            </value>
        </member>
        <member name="P:ChartKit.Drawing.Padding.Top">
            <summary>
            Gets or sets the top.
            </summary>
            <value>
            The top.
            </value>
        </member>
        <member name="P:ChartKit.Drawing.Padding.Bottom">
            <summary>
            Gets or sets the bottom.
            </summary>
            <value>
            The bottom.
            </value>
        </member>
        <member name="T:ChartKit.Drawing.Segments.CubicBezierSegment">
            <summary>
            Defines a cubic bezier segment.
            </summary>
        </member>
        <member name="M:ChartKit.Drawing.Segments.CubicBezierSegment.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.Drawing.Segments.CubicBezierSegment"/> class.
            </summary>
        </member>
        <member name="P:ChartKit.Drawing.Segments.CubicBezierSegment.Xi">
            <inheritdoc cref="P:ChartKit.Drawing.Segments.IConsecutivePathSegment.Xi"/>
        </member>
        <member name="P:ChartKit.Drawing.Segments.CubicBezierSegment.Yi">
            <inheritdoc cref="P:ChartKit.Drawing.Segments.IConsecutivePathSegment.Yi"/>
        </member>
        <member name="P:ChartKit.Drawing.Segments.CubicBezierSegment.Xm">
            <summary>
            Gets or sets the middle point in the Y axis.
            </summary>
        </member>
        <member name="P:ChartKit.Drawing.Segments.CubicBezierSegment.Ym">
            <summary>
            Gets or sets the middle point in the Y axis.
            </summary>
        </member>
        <member name="P:ChartKit.Drawing.Segments.CubicBezierSegment.Xj">
            <inheritdoc cref="P:ChartKit.Drawing.Segments.IConsecutivePathSegment.Xj"/>
        </member>
        <member name="P:ChartKit.Drawing.Segments.CubicBezierSegment.Yj">
            <inheritdoc cref="P:ChartKit.Drawing.Segments.IConsecutivePathSegment.Yj"/>
        </member>
        <member name="P:ChartKit.Drawing.Segments.CubicBezierSegment.Id">
            <inheritdoc cref="P:ChartKit.Drawing.Segments.IConsecutivePathSegment.Id"/>
        </member>
        <member name="M:ChartKit.Drawing.Segments.CubicBezierSegment.ChartKit#Drawing#Segments#IConsecutivePathSegment#Follows(ChartKit.Drawing.Segments.IConsecutivePathSegment)">
            <inheritdoc cref="M:ChartKit.Drawing.Segments.IConsecutivePathSegment.Follows(ChartKit.Drawing.Segments.IConsecutivePathSegment)"/>
        </member>
        <member name="T:ChartKit.Drawing.Segments.IConsecutivePathSegment">
            <summary>
            Defines a path segment that is part of a sequence.
            </summary>
        </member>
        <member name="P:ChartKit.Drawing.Segments.IConsecutivePathSegment.Id">
            <summary>
            Gets or sets the segment id, a unique and consecutive integer.
            </summary>
        </member>
        <member name="P:ChartKit.Drawing.Segments.IConsecutivePathSegment.Xi">
            <summary>
            Gets the start point in the X axis.
            </summary>
        </member>
        <member name="P:ChartKit.Drawing.Segments.IConsecutivePathSegment.Xj">
            <summary>
            Gets the end point in the X axis.
            </summary>
        </member>
        <member name="P:ChartKit.Drawing.Segments.IConsecutivePathSegment.Yi">
            <summary>
            Gets the start point in the Y axis.
            </summary>
        </member>
        <member name="P:ChartKit.Drawing.Segments.IConsecutivePathSegment.Yj">
            <summary>
            Gets the end point in the Y axis.
            </summary>
        </member>
        <member name="M:ChartKit.Drawing.Segments.IConsecutivePathSegment.Follows(ChartKit.Drawing.Segments.IConsecutivePathSegment)">
            <summary>
            Copies the segment to the end of the given segment.
            </summary>
            <param name="segment">The segment.</param>
        </member>
        <member name="T:ChartKit.Drawing.Segments.LineSegment">
            <summary>
            Defines a line segment.
            </summary>
        </member>
        <member name="M:ChartKit.Drawing.Segments.LineSegment.#ctor">
            <summary>
            Initializes a new insance of the <see cref="T:ChartKit.Drawing.Segments.LineSegment"/> class.
            </summary>
        </member>
        <member name="P:ChartKit.Drawing.Segments.LineSegment.Xi">
            <inheritdoc cref="P:ChartKit.Drawing.Segments.IConsecutivePathSegment.Xi"/>
        </member>
        <member name="P:ChartKit.Drawing.Segments.LineSegment.Yi">
            <inheritdoc cref="P:ChartKit.Drawing.Segments.IConsecutivePathSegment.Yi"/>
        </member>
        <member name="P:ChartKit.Drawing.Segments.LineSegment.Xj">
            <inheritdoc cref="P:ChartKit.Drawing.Segments.IConsecutivePathSegment.Xj"/>
        </member>
        <member name="P:ChartKit.Drawing.Segments.LineSegment.Yj">
            <inheritdoc cref="P:ChartKit.Drawing.Segments.IConsecutivePathSegment.Yj"/>
        </member>
        <member name="P:ChartKit.Drawing.Segments.LineSegment.Id">
            <inheritdoc cref="P:ChartKit.Drawing.Segments.IConsecutivePathSegment.Id"/>
        </member>
        <member name="M:ChartKit.Drawing.Segments.LineSegment.ChartKit#Drawing#Segments#IConsecutivePathSegment#Follows(ChartKit.Drawing.Segments.IConsecutivePathSegment)">
            <inheritdoc cref="M:ChartKit.Drawing.Segments.IConsecutivePathSegment.Follows(ChartKit.Drawing.Segments.IConsecutivePathSegment)"/>
        </member>
        <member name="T:ChartKit.Drawing.Segments.StepLineSegment">
            <summary>
            Defines a step line segment.
            </summary>
        </member>
        <member name="M:ChartKit.Drawing.Segments.StepLineSegment.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.Drawing.Segments.StepLineSegment"/> class.
            </summary>
        </member>
        <member name="P:ChartKit.Drawing.Segments.StepLineSegment.Xi">
            <inheritdoc cref="P:ChartKit.Drawing.Segments.IConsecutivePathSegment.Xi"/>
        </member>
        <member name="P:ChartKit.Drawing.Segments.StepLineSegment.Yi">
            <inheritdoc cref="P:ChartKit.Drawing.Segments.IConsecutivePathSegment.Yi"/>
        </member>
        <member name="P:ChartKit.Drawing.Segments.StepLineSegment.Xj">
            <inheritdoc cref="P:ChartKit.Drawing.Segments.IConsecutivePathSegment.Xj"/>
        </member>
        <member name="P:ChartKit.Drawing.Segments.StepLineSegment.Yj">
            <inheritdoc cref="P:ChartKit.Drawing.Segments.IConsecutivePathSegment.Yj"/>
        </member>
        <member name="P:ChartKit.Drawing.Segments.StepLineSegment.Id">
            <inheritdoc cref="P:ChartKit.Drawing.Segments.IConsecutivePathSegment.Id"/>
        </member>
        <member name="M:ChartKit.Drawing.Segments.StepLineSegment.ChartKit#Drawing#Segments#IConsecutivePathSegment#Follows(ChartKit.Drawing.Segments.IConsecutivePathSegment)">
            <inheritdoc cref="M:ChartKit.Drawing.Segments.IConsecutivePathSegment.Follows(ChartKit.Drawing.Segments.IConsecutivePathSegment)"/>
        </member>
        <member name="T:ChartKit.Drawing.StepLineVisualPoint`2">
            <summary>
            Defines a stepline visual point.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <typeparam name="TVisual">The type of the visual.</typeparam>
        </member>
        <member name="P:ChartKit.Drawing.StepLineVisualPoint`2.Geometry">
            <summary>
            Gets the geometry.
            </summary>
            <value>
            The geometry.
            </value>
        </member>
        <member name="P:ChartKit.Drawing.StepLineVisualPoint`2.StepSegment">
            <summary>
            Gets the stepline.
            </summary>
            <value>
            The stepline.
            </value>
        </member>
        <member name="P:ChartKit.Drawing.StepLineVisualPoint`2.FillPath">
            <summary>
            Gets or sets the path.
            </summary>
            <value>
            The path.
            </value>
        </member>
        <member name="P:ChartKit.Drawing.StepLineVisualPoint`2.StrokePath">
            <summary>
            Gets or sets the stroke path.
            </summary>
            <value>
            The stroke path.
            </value>
        </member>
        <member name="T:ChartKit.Drawing.SVGPoints">
            <summary>
            A collections of SVG paths.
            </summary>
        </member>
        <member name="P:ChartKit.Drawing.SVGPoints.Diamond">
            <summary>
            A diamond.
            </summary>
        </member>
        <member name="P:ChartKit.Drawing.SVGPoints.Gem">
            <summary>
            A gem.
            </summary>
        </member>
        <member name="P:ChartKit.Drawing.SVGPoints.Star">
            <summary>
            A star.
            </summary>
        </member>
        <member name="P:ChartKit.Drawing.SVGPoints.Heart">
            <summary>
            A heart.
            </summary>
        </member>
        <member name="P:ChartKit.Drawing.SVGPoints.Pin">
            <summary>
            A pin.
            </summary>
        </member>
        <member name="P:ChartKit.Drawing.SVGPoints.Square">
            <summary>
            A square.
            </summary>
        </member>
        <member name="P:ChartKit.Drawing.SVGPoints.Circle">
            <summary>
            A circle.
            </summary>
        </member>
        <member name="P:ChartKit.Drawing.SVGPoints.Pentagon">
            <summary>
            A pentagon.
            </summary>
        </member>
        <member name="P:ChartKit.Drawing.SVGPoints.Cross">
            <summary>
            A cross mark.
            </summary>
        </member>
        <member name="P:ChartKit.Drawing.SVGPoints.Check">
            <summary>
            A check mark.
            </summary>
        </member>
        <member name="T:ChartKit.Drawing.VectorClosingMethod">
            <summary>
            Defines methods to close a vector.
            </summary>
        </member>
        <member name="F:ChartKit.Drawing.VectorClosingMethod.NotClosed">
            <summary>
            Indicates that the vector is not closed.
            </summary>
        </member>
        <member name="F:ChartKit.Drawing.VectorClosingMethod.CloseToPivot">
            <summary>
            Indicates that the vector is closed to the pivot value.
            </summary>
        </member>
        <member name="F:ChartKit.Drawing.VectorClosingMethod.CloseToStart">
            <summary>
            Indicates that the vector is closed to the start point.
            </summary>
        </member>
        <member name="T:ChartKit.DrawMarginFrame`1">
            <summary>
            Defines a draw margin frame visual in a chart.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
        </member>
        <member name="P:ChartKit.DrawMarginFrame`1.Stroke">
            <summary>
            Gets or sets the stroke.
            </summary>
            <value>
            The stroke.
            </value>
        </member>
        <member name="P:ChartKit.DrawMarginFrame`1.Fill">
            <summary>
            Gets or sets the fill.
            </summary>
            <value>
            The fill.
            </value>
        </member>
        <member name="M:ChartKit.DrawMarginFrame`1.GetPaintTasks">
            <summary>
            Gets the paint tasks.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ChartKit.DrawMarginFrame`1.OnPaintChanged(System.String)">
            <summary>
            Called when the fill changes.
            </summary>
            <param name="propertyName"></param>
        </member>
        <member name="T:ChartKit.DrawMarginFrame`2">
            <summary>
            Defines a draw margin frame visual in a chart.
            </summary>
            <typeparam name="TSizedGeometry">The type of the sized geometry.</typeparam>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
        </member>
        <member name="M:ChartKit.DrawMarginFrame`2.Invalidate(ChartKit.Chart{`1})">
            <summary>
            Measures the specified chart.
            </summary>
            <param name="chart">The chart.</param>
        </member>
        <member name="T:ChartKit.EasingFunctions">
            <summary>
            A set of predefined easing functions.
            </summary>
        </member>
        <member name="P:ChartKit.EasingFunctions.BackIn">
            <summary>
            Gets the back in.
            </summary>
            <value>
            The back in.
            </value>
        </member>
        <member name="P:ChartKit.EasingFunctions.BackOut">
            <summary>
            Gets the back out.
            </summary>
            <value>
            The back out.
            </value>
        </member>
        <member name="P:ChartKit.EasingFunctions.BackInOut">
            <summary>
            Gets the back in out.
            </summary>
            <value>
            The back in out.
            </value>
        </member>
        <member name="P:ChartKit.EasingFunctions.BounceIn">
            <summary>
            Gets the bounce in.
            </summary>
            <value>
            The bounce in.
            </value>
        </member>
        <member name="P:ChartKit.EasingFunctions.BounceOut">
            <summary>
            Gets the bounce out.
            </summary>
            <value>
            The bounce out.
            </value>
        </member>
        <member name="P:ChartKit.EasingFunctions.BounceInOut">
            <summary>
            Gets the bounce in out.
            </summary>
            <value>
            The bounce in out.
            </value>
        </member>
        <member name="P:ChartKit.EasingFunctions.CircleIn">
            <summary>
            Gets the circle in.
            </summary>
            <value>
            The circle in.
            </value>
        </member>
        <member name="P:ChartKit.EasingFunctions.CircleOut">
            <summary>
            Gets the circle out.
            </summary>
            <value>
            The circle out.
            </value>
        </member>
        <member name="P:ChartKit.EasingFunctions.CircleInOut">
            <summary>
            Gets the circle in out.
            </summary>
            <value>
            The circle in out.
            </value>
        </member>
        <member name="P:ChartKit.EasingFunctions.CubicIn">
            <summary>
            Gets the cubic in.
            </summary>
            <value>
            The cubic in.
            </value>
        </member>
        <member name="P:ChartKit.EasingFunctions.CubicOut">
            <summary>
            Gets the cubic out.
            </summary>
            <value>
            The cubic out.
            </value>
        </member>
        <member name="P:ChartKit.EasingFunctions.CubicInOut">
            <summary>
            Gets the cubic in out.
            </summary>
            <value>
            The cubic in out.
            </value>
        </member>
        <member name="P:ChartKit.EasingFunctions.Ease">
            <summary>
            Gets the ease.
            </summary>
            <value>
            The ease.
            </value>
        </member>
        <member name="P:ChartKit.EasingFunctions.EaseIn">
            <summary>
            Gets the ease in.
            </summary>
            <value>
            The ease in.
            </value>
        </member>
        <member name="P:ChartKit.EasingFunctions.EaseOut">
            <summary>
            Gets the ease out.
            </summary>
            <value>
            The ease out.
            </value>
        </member>
        <member name="P:ChartKit.EasingFunctions.EaseInOut">
            <summary>
            Gets the ease in out.
            </summary>
            <value>
            The ease in out.
            </value>
        </member>
        <member name="P:ChartKit.EasingFunctions.ElasticIn">
            <summary>
            Gets the elastic in.
            </summary>
            <value>
            The elastic in.
            </value>
        </member>
        <member name="P:ChartKit.EasingFunctions.ElasticOut">
            <summary>
            Gets the elastic out.
            </summary>
            <value>
            The elastic out.
            </value>
        </member>
        <member name="P:ChartKit.EasingFunctions.ElasticInOut">
            <summary>
            Gets the elastic in out.
            </summary>
            <value>
            The elastic in out.
            </value>
        </member>
        <member name="P:ChartKit.EasingFunctions.ExponentialIn">
            <summary>
            Gets the exponential in.
            </summary>
            <value>
            The exponential in.
            </value>
        </member>
        <member name="P:ChartKit.EasingFunctions.ExponentialOut">
            <summary>
            Gets the exponential out.
            </summary>
            <value>
            The exponential out.
            </value>
        </member>
        <member name="P:ChartKit.EasingFunctions.ExponentialInOut">
            <summary>
            Gets the exponential in out.
            </summary>
            <value>
            The exponential in out.
            </value>
        </member>
        <member name="P:ChartKit.EasingFunctions.Lineal">
            <summary>
            Gets the lineal.
            </summary>
            <value>
            The lineal.
            </value>
        </member>
        <member name="P:ChartKit.EasingFunctions.PolinominalIn">
            <summary>
            Gets the polinominal in.
            </summary>
            <value>
            The polinominal in.
            </value>
        </member>
        <member name="P:ChartKit.EasingFunctions.PolinominalOut">
            <summary>
            Gets the polinominal out.
            </summary>
            <value>
            The polinominal out.
            </value>
        </member>
        <member name="P:ChartKit.EasingFunctions.PolinominalInOut">
            <summary>
            Gets the polinominal in out.
            </summary>
            <value>
            The polinominal in out.
            </value>
        </member>
        <member name="P:ChartKit.EasingFunctions.QuadraticIn">
            <summary>
            Gets the quadratic in.
            </summary>
            <value>
            The quadratic in.
            </value>
        </member>
        <member name="P:ChartKit.EasingFunctions.QuadraticOut">
            <summary>
            Gets the quadratic out.
            </summary>
            <value>
            The quadratic out.
            </value>
        </member>
        <member name="P:ChartKit.EasingFunctions.QuadraticInOut">
            <summary>
            Gets the quadratic in out.
            </summary>
            <value>
            The quadratic in out.
            </value>
        </member>
        <member name="P:ChartKit.EasingFunctions.SinIn">
            <summary>
            Gets the sin in.
            </summary>
            <value>
            The sin in.
            </value>
        </member>
        <member name="P:ChartKit.EasingFunctions.SinOut">
            <summary>
            Gets the sin out.
            </summary>
            <value>
            The sin out.
            </value>
        </member>
        <member name="P:ChartKit.EasingFunctions.SinInOut">
            <summary>
            Gets the sin in out.
            </summary>
            <value>
            The sin in out.
            </value>
        </member>
        <member name="P:ChartKit.EasingFunctions.BuildFunctionUsingKeyFrames">
            <summary>
            Gets a fuction based on the given <see cref="T:ChartKit.Drawing.KeyFrame"/> collection.
            </summary>
        </member>
        <member name="P:ChartKit.EasingFunctions.BuildCustomBackIn">
            <summary>
            Gets the build custom back in.
            </summary>
            <value>
            The build custom back in.
            </value>
        </member>
        <member name="P:ChartKit.EasingFunctions.BuildCustomBackOut">
            <summary>
            Gets the build custom back out.
            </summary>
            <value>
            The build custom back out.
            </value>
        </member>
        <member name="P:ChartKit.EasingFunctions.BuildCustomBackInOut">
            <summary>
            Gets the build custom back in out.
            </summary>
            <value>
            The build custom back in out.
            </value>
        </member>
        <member name="P:ChartKit.EasingFunctions.BuildCustomElasticIn">
            <summary>
            Gets the build custom elastic in.
            </summary>
            <value>
            The build custom elastic in.
            </value>
        </member>
        <member name="P:ChartKit.EasingFunctions.BuildCustomElasticOut">
            <summary>
            Gets the build custom elastic out.
            </summary>
            <value>
            The build custom elastic out.
            </value>
        </member>
        <member name="P:ChartKit.EasingFunctions.BuildCustomElasticInOut">
            <summary>
            Gets the build custom elastic in out.
            </summary>
            <value>
            The build custom elastic in out.
            </value>
        </member>
        <member name="P:ChartKit.EasingFunctions.BuildCustomPolinominalIn">
            <summary>
            Gets the build custom polinominal in.
            </summary>
            <value>
            The build custom polinominal in.
            </value>
        </member>
        <member name="P:ChartKit.EasingFunctions.BuildCustomPolinominalOut">
            <summary>
            Gets the build custom polinominal out.
            </summary>
            <value>
            The build custom polinominal out.
            </value>
        </member>
        <member name="P:ChartKit.EasingFunctions.BuildCustomPolinominalInOut">
            <summary>
            Gets the build custom polinominal in out.
            </summary>
            <value>
            The build custom polinominal in out.
            </value>
        </member>
        <member name="P:ChartKit.EasingFunctions.BuildCubicBezier">
            <summary>
            Gets the build cubic bezier.
            </summary>
            <value>
            The build cubic bezier.
            </value>
        </member>
        <member name="T:ChartKit.Easing.BackEasingFunction">
            <summary>
            Defines the BackEasingFunction
            </summary>
        </member>
        <member name="M:ChartKit.Easing.BackEasingFunction.In(System.Single,System.Single)">
            <summary>
            The in easing
            </summary>
            <param name="t">The t.</param>
            <param name="s">The s.</param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Easing.BackEasingFunction.Out(System.Single,System.Single)">
            <summary>
            the out easing
            </summary>
            <param name="t">The t.</param>
            <param name="s">The s.</param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Easing.BackEasingFunction.InOut(System.Single,System.Single)">
            <summary>
            the in out easing
            </summary>
            <param name="t">The t.</param>
            <param name="s">The s.</param>
            <returns></returns>
        </member>
        <member name="T:ChartKit.Easing.BounceEasingFunction">
            <summary>
            Defines the BounceEasingFunction
            </summary>
        </member>
        <member name="M:ChartKit.Easing.BounceEasingFunction.In(System.Single)">
            <summary>
            the in easing.
            </summary>
            <param name="t">The t.</param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Easing.BounceEasingFunction.Out(System.Single)">
            <summary>
            the out easing.
            </summary>
            <param name="t">The t.</param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Easing.BounceEasingFunction.InOut(System.Single)">
            <summary>
            the in out easing.
            </summary>
            <param name="t">The t.</param>
            <returns></returns>
        </member>
        <member name="T:ChartKit.Easing.CircleEasingFunction">
            <summary>
            Defines the CircleEasingFunction
            </summary>
        </member>
        <member name="M:ChartKit.Easing.CircleEasingFunction.In(System.Single)">
            <summary>
            the ease in.
            </summary>
            <param name="t">The t.</param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Easing.CircleEasingFunction.Out(System.Single)">
            <summary>
            the ease out.
            </summary>
            <param name="t">The t.</param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Easing.CircleEasingFunction.InOut(System.Single)">
            <summary>
            the ease in out
            </summary>
            <param name="t">The t.</param>
            <returns></returns>
        </member>
        <member name="T:ChartKit.Easing.CubicBezierEasingFunction">
            <summary>
            Defines the CubicBezierEasingFunction.
            </summary>
        </member>
        <member name="M:ChartKit.Easing.CubicBezierEasingFunction.BuildBezierEasingFunction(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Builds a bezier easing function.
            </summary>
            <param name="mX1">The m x1.</param>
            <param name="mY1">The m y1.</param>
            <param name="mX2">The m x2.</param>
            <param name="mY2">The m y2.</param>
            <returns></returns>
            <exception cref="T:System.Exception">Bezier x values must be in [0, 1] range</exception>
        </member>
        <member name="T:ChartKit.Easing.CubicEasingFunction">
            <summary>
            Defines the CubicEasingFunction
            </summary>
        </member>
        <member name="M:ChartKit.Easing.CubicEasingFunction.In(System.Single)">
            <summary>
            The ease in.
            </summary>
            <param name="t">The t.</param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Easing.CubicEasingFunction.Out(System.Single)">
            <summary>
            The ease out.
            </summary>
            <param name="t">The t.</param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Easing.CubicEasingFunction.InOut(System.Single)">
            <summary>
            The ease in out.
            </summary>
            <param name="t">The t.</param>
            <returns></returns>
        </member>
        <member name="T:ChartKit.Easing.ElasticEasingFunction">
            <summary>
            Defines the ElasticEasingFunction.
            </summary>
        </member>
        <member name="M:ChartKit.Easing.ElasticEasingFunction.In(System.Single,System.Single,System.Single)">
            <summary>
            The ease in.
            </summary>
            <param name="t">The t.</param>
            <param name="a">a.</param>
            <param name="p">The p.</param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Easing.ElasticEasingFunction.Out(System.Single,System.Single,System.Single)">
            <summary>
            The ease out.
            </summary>
            <param name="t">The t.</param>
            <param name="a">a.</param>
            <param name="p">The p.</param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Easing.ElasticEasingFunction.InOut(System.Single,System.Single,System.Single)">
            <summary>
            The ease in out.
            </summary>
            <param name="t">The t.</param>
            <param name="a">a.</param>
            <param name="p">The p.</param>
            <returns></returns>
        </member>
        <member name="T:ChartKit.Easing.ExponentialEasingFunction">
            <summary>
            Defines the ExponentialEasingFunction.
            </summary>
        </member>
        <member name="M:ChartKit.Easing.ExponentialEasingFunction.In(System.Single)">
            <summary>
            The ease in.
            </summary>
            <param name="t">The t.</param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Easing.ExponentialEasingFunction.Out(System.Single)">
            <summary>
            The ease out.
            </summary>
            <param name="t">The t.</param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Easing.ExponentialEasingFunction.InOut(System.Single)">
            <summary>
            The ease in out.
            </summary>
            <param name="t">The t.</param>
            <returns></returns>
        </member>
        <member name="T:ChartKit.Easing.PolinominalEasingFunction">
            <summary>
            Defines the PolinominalEasingFunction.
            </summary>
        </member>
        <member name="M:ChartKit.Easing.PolinominalEasingFunction.In(System.Single,System.Single)">
            <summary>
            The ease in.
            </summary>
            <param name="t">The t.</param>
            <param name="e">The e.</param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Easing.PolinominalEasingFunction.Out(System.Single,System.Single)">
            <summary>
            The ease out.
            </summary>
            <param name="t">The t.</param>
            <param name="e">The e.</param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Easing.PolinominalEasingFunction.InOut(System.Single,System.Single)">
            <summary>
            The ease in out.
            </summary>
            <param name="t">The t.</param>
            <param name="e">The e.</param>
            <returns></returns>
        </member>
        <member name="T:ChartKit.FinancialSeries`5">
            <summary>
            Defines a candle sticks series.
            </summary>
            <typeparam name="TModel">The type of the model.</typeparam>
            <typeparam name="TVisual">The type of the visual.</typeparam>
            <typeparam name="TLabel">The type of the label.</typeparam>
            <typeparam name="TMiniatureGeometry">The type of the miniature geometry, used in tool tips and legends.</typeparam> 
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <seealso cref="T:ChartKit.CartesianSeries`4" />
            <seealso cref="T:ChartKit.Kernel.Sketches.ICartesianSeries`1" />
            <seealso cref="T:ChartKit.Kernel.Sketches.IHeatSeries`1" />
        </member>
        <member name="M:ChartKit.FinancialSeries`5.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.FinancialSeries`5"/> class.
            </summary>
        </member>
        <member name="P:ChartKit.FinancialSeries`5.MaxBarWidth">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.IFinancialSeries`1.MaxBarWidth"/>
        </member>
        <member name="P:ChartKit.FinancialSeries`5.UpStroke">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.IFinancialSeries`1.UpStroke"/>
        </member>
        <member name="P:ChartKit.FinancialSeries`5.UpFill">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.IFinancialSeries`1.UpFill"/>
        </member>
        <member name="P:ChartKit.FinancialSeries`5.DownStroke">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.IFinancialSeries`1.DownStroke"/>
        </member>
        <member name="P:ChartKit.FinancialSeries`5.DownFill">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.IFinancialSeries`1.DownFill"/>
        </member>
        <member name="M:ChartKit.FinancialSeries`5.Invalidate(ChartKit.Chart{`4})">
            <inheritdoc cref="M:ChartKit.Kernel.ChartElement`1.Invalidate(ChartKit.Chart{`0})"/>
        </member>
        <member name="M:ChartKit.FinancialSeries`5.GetBounds(ChartKit.CartesianChart{`4},ChartKit.Kernel.Sketches.ICartesianAxis,ChartKit.Kernel.Sketches.ICartesianAxis)">
            <inheritdoc cref="M:ChartKit.Kernel.Sketches.ICartesianSeries`1.GetBounds(ChartKit.CartesianChart{`0},ChartKit.Kernel.Sketches.ICartesianAxis,ChartKit.Kernel.Sketches.ICartesianAxis)"/>
        </member>
        <member name="M:ChartKit.FinancialSeries`5.GetRequestedSecondaryOffset">
            <inheritdoc cref="M:ChartKit.CartesianSeries`4.GetRequestedSecondaryOffset"/>
        </member>
        <member name="M:ChartKit.FinancialSeries`5.SetDefaultPointTransitions(ChartKit.Kernel.ChartPoint)">
            <inheritdoc cref="M:ChartKit.Series`4.SetDefaultPointTransitions(ChartKit.Kernel.ChartPoint)"/>
        </member>
        <member name="M:ChartKit.FinancialSeries`5.SoftDeleteOrDisposePoint(ChartKit.Kernel.ChartPoint,ChartKit.Measure.Scaler,ChartKit.Measure.Scaler)">
            <inheritdoc cref="M:ChartKit.CartesianSeries`4.SoftDeleteOrDisposePoint(ChartKit.Kernel.ChartPoint,ChartKit.Measure.Scaler,ChartKit.Measure.Scaler)"/>
        </member>
        <member name="M:ChartKit.FinancialSeries`5.GetPaintTasks">
            <summary>
            Gets the paint tasks.
            </summary>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:ChartKit.FinancialSeries`5.OnPointerEnter(ChartKit.Kernel.ChartPoint)">
            <inheritdoc cref="M:ChartKit.Series`4.OnPointerEnter(ChartKit.Kernel.ChartPoint)"/>
        </member>
        <member name="M:ChartKit.FinancialSeries`5.OnPointerLeft(ChartKit.Kernel.ChartPoint)">
            <inheritdoc cref="M:ChartKit.Series`4.OnPointerLeft(ChartKit.Kernel.ChartPoint)"/>
        </member>
        <member name="M:ChartKit.FinancialSeries`5.OnPaintChanged(System.String)">
            <summary>
            Called when [paint changed].
            </summary>
            <param name="propertyName">Name of the property.</param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.FinancialSeries`5.GetMiniaturesSketch">
            <inheritdoc cref="M:ChartKit.Series`4.GetMiniaturesSketch"/>
        </member>
        <member name="T:ChartKit.GeoMap`1">
            <summary>
            Defines a geo map chart.
            </summary>
            <typeparam name="TDrawingContext"></typeparam>
        </member>
        <member name="M:ChartKit.GeoMap`1.#ctor(ChartKit.Geo.IGeoMapView{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.GeoMap`1"/> class.
            </summary>
            <param name="mapView"></param>
        </member>
        <member name="P:ChartKit.GeoMap`1.View">
            <summary>
            Gets the chart view.
            </summary>
        </member>
        <member name="M:ChartKit.GeoMap`1.ViewTo(System.Object)">
            <inheritdoc cref="M:ChartKit.Geo.IMapFactory`1.ViewTo(ChartKit.GeoMap{`0},System.Object)"/>
        </member>
        <member name="M:ChartKit.GeoMap`1.Pan(ChartKit.Drawing.LvcPoint)">
            <inheritdoc cref="M:ChartKit.Geo.IMapFactory`1.Pan(ChartKit.GeoMap{`0},ChartKit.Drawing.LvcPoint)"/>
        </member>
        <member name="M:ChartKit.GeoMap`1.Update(ChartKit.Kernel.ChartUpdateParams)">
            <summary>
            Queues a measure request to update the chart.
            </summary>
            <param name="chartUpdateParams"></param>
        </member>
        <member name="M:ChartKit.GeoMap`1.Unload">
            <summary>
            Unload the map resources.
            </summary>
        </member>
        <member name="M:ChartKit.GeoMap`1.UpdateThrottlerUnlocked">
            <summary>
            Called to measure the chart.
            </summary>
            <returns>The update task.</returns>
        </member>
        <member name="M:ChartKit.GeoMap`1.Measure">
            <summary>
            Measures the chart.
            </summary>
        </member>
        <member name="T:ChartKit.Geo.ControlCoordinatesProjector">
            <summary>
            Projects latitude and longitude coordinates in a control coordinates.
            </summary>
            <seealso cref="T:ChartKit.Geo.MapProjector" />
        </member>
        <member name="M:ChartKit.Geo.ControlCoordinatesProjector.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.Geo.ControlCoordinatesProjector"/> class.
            </summary>
            <param name="mapWidth">Width of the map.</param>
            <param name="mapHeight">Height of the map.</param>
            <param name="offsetX">The offset x.</param>
            <param name="offsetY">The offset y.</param>
        </member>
        <member name="P:ChartKit.Geo.ControlCoordinatesProjector.PreferredRatio">
            <summary>
            Gets the preferred ratio.
            </summary>
            <value>
            The preferred ratio.
            </value>
        </member>
        <member name="M:ChartKit.Geo.ControlCoordinatesProjector.ToMap(System.Double[])">
            <inheritdoc cref="M:ChartKit.Geo.MapProjector.ToMap(System.Double[])"/>
        </member>
        <member name="T:ChartKit.Geo.CoreMap`1">
            <summary>
            Defines a geographic map for LiveCharts controls.
            </summary>
        </member>
        <member name="M:ChartKit.Geo.CoreMap`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.Geo.CoreMap`1"/> class.
            </summary>
        </member>
        <member name="M:ChartKit.Geo.CoreMap`1.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.Geo.CoreMap`1"/> class, with the given layer.
            </summary>
            <param name="path">The path to the GeoJson file for the layer.</param>
            <param name="layerName">The layer name.</param>
        </member>
        <member name="M:ChartKit.Geo.CoreMap`1.#ctor(System.IO.StreamReader,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.Geo.CoreMap`1"/> class, with the given layer.
            </summary>
            <param name="streamReader">The stream reader instance of the GeoJson file for the layer.</param>
            <param name="layerName">The layer name.</param>
        </member>
        <member name="P:ChartKit.Geo.CoreMap`1.Layers">
            <summary>
            Gets the map layers dictionary.
            </summary>
        </member>
        <member name="M:ChartKit.Geo.CoreMap`1.FindLand(System.String,System.String)">
            <summary>
            Finds a land by short name.
            </summary>
            <param name="shortName">The short name.</param>
            <param name="layerName">The layer name.</param>
            <returns>The land, null if not found.</returns>
        </member>
        <member name="M:ChartKit.Geo.CoreMap`1.AddLayerFromDirectory(System.String,ChartKit.Drawing.IPaint{`0},ChartKit.Drawing.IPaint{`0},System.String)">
            <summary>
            Adds a layer to the map from a directory.
            </summary>
            <param name="path">The path to the GeoJson file for the layer.</param>
            <param name="layerName">The layer name.</param>
            <param name="stroke">The stroke.</param>
            <param name="fill">The fill.</param>
            <returns>The added layer.</returns>
        </member>
        <member name="M:ChartKit.Geo.CoreMap`1.AddLayerFromDirectory(System.String,System.String)">
            <summary>
            Adds a layer to the map from a directory.
            </summary>
            <param name="path">The path to the GeoJson file for the layer.</param>
            <param name="layerName">The layer name.</param>
            <returns>The added layer.</returns>
        </member>
        <member name="M:ChartKit.Geo.CoreMap`1.AddLayerFromStreamReader(System.IO.StreamReader,ChartKit.Drawing.IPaint{`0},ChartKit.Drawing.IPaint{`0},System.String)">
            <summary>
            Adds a layer to the map from a stream reader.
            </summary>
            <param name="streamReader">The path to the stream reader.</param>
            <param name="layerName">The layer name.</param>
            <param name="stroke">The stroke.</param>
            <param name="fill">The fill.</param>
            <returns>The added layer.</returns>
        </member>
        <member name="M:ChartKit.Geo.CoreMap`1.AddLayerFromStreamReader(System.IO.StreamReader,System.String)">
            <summary>
            Adds a layer to the map from a stream reader.
            </summary>
            <param name="streamReader">The path to the stream reader.</param>
            <param name="layerName">The layer name.</param>
            <returns>The added layer.</returns>
        </member>
        <member name="M:ChartKit.Geo.CoreMap`1.AddLayerFromDirectoryAsync(System.String,ChartKit.Drawing.IPaint{`0},ChartKit.Drawing.IPaint{`0},System.String)">
            <summary>
            Adds a layer to the map from a directory asynchronously.
            </summary>
            <param name="path">The path to the GeoJson file for the layer.</param>
            <param name="layerName">The layer name.</param>
            <param name="stroke">The stroke.</param>
            <param name="fill">The fill.</param>
            <returns>The added layer as await-able task.</returns>
        </member>
        <member name="M:ChartKit.Geo.CoreMap`1.AddLayerFromDirectoryAsync(System.String,System.String)">
            <summary>
            Adds a layer to the map from a directory asynchronously.
            </summary>
            <param name="path">The path to the GeoJson file for the layer.</param>
            <param name="layerName">The layer name.</param>
            <returns>The added layer as await-able task.</returns>
        </member>
        <member name="M:ChartKit.Geo.CoreMap`1.AddLayerFromStreamReaderAsync(System.IO.StreamReader,ChartKit.Drawing.IPaint{`0},ChartKit.Drawing.IPaint{`0},System.String)">
            <summary>
            Adds a layer to the map from a stream reader asynchronously.
            </summary>
            <param name="streamReader">The path to the stream reader.</param>
            <param name="layerName">The layer name.</param>
            <param name="stroke">The stroke.</param>
            <param name="fill">The fill.</param>
            <returns>The added layer as await-able task.</returns>
        </member>
        <member name="M:ChartKit.Geo.CoreMap`1.AddLayerFromStreamReaderAsync(System.IO.StreamReader,System.String)">
            <summary>
            Adds a layer to the map from a stream reader asynchronously.
            </summary>
            <param name="streamReader">The path to the stream reader.</param>
            <param name="layerName">The layer name.</param>
            <returns>The added layer as await-able task.</returns>
        </member>
        <member name="M:ChartKit.Geo.CoreMap`1.Dispose">
            <summary>
            Disposes the map.
            </summary>
        </member>
        <member name="T:ChartKit.Geo.GeoJsonFeature">
            <summary>
            Defines geo json features
            </summary>
        </member>
        <member name="P:ChartKit.Geo.GeoJsonFeature.Type">
            <summary>
            Gets or sets the type.
            </summary>
            <value>
            The type.
            </value>
        </member>
        <member name="P:ChartKit.Geo.GeoJsonFeature.Properties">
            <summary>
            Gets or sets the properties.
            </summary>
            <value>
            The properties.
            </value>
        </member>
        <member name="P:ChartKit.Geo.GeoJsonFeature.Geometry">
            <summary>
            Gets or sets the geometry.
            </summary>
            <value>
            The geometry.
            </value>
        </member>
        <member name="T:ChartKit.Geo.GeoJsonFile">
            <summary>
            Defines a map using the GeoJson format.
            </summary>
        </member>
        <member name="P:ChartKit.Geo.GeoJsonFile.Type">
            <summary>
            Gets or sets the type.
            </summary>
            <value>
            The type.
            </value>
        </member>
        <member name="P:ChartKit.Geo.GeoJsonFile.Features">
            <summary>
            Gets or sets the features.
            </summary>
            <value>
            The features.
            </value>
        </member>
        <member name="T:ChartKit.Geo.IGeoMapView`1">
            <summary>
            Defines a geographic map.
            </summary>
        </member>
        <member name="P:ChartKit.Geo.IGeoMapView`1.ActiveMap">
            <summary>
            Gets or sets the active map.
            </summary>
        </member>
        <member name="P:ChartKit.Geo.IGeoMapView`1.Canvas">
            <summary>
            Gets the motion canvas.
            </summary>
        </member>
        <member name="P:ChartKit.Geo.IGeoMapView`1.Width">
            <summary>
            Gets the control width.
            </summary>
        </member>
        <member name="P:ChartKit.Geo.IGeoMapView`1.Height">
            <summary>
            Gets the control height.
            </summary>
        </member>
        <member name="P:ChartKit.Geo.IGeoMapView`1.Stroke">
            <summary>
            Gets or sets the stroke.
            </summary>
        </member>
        <member name="P:ChartKit.Geo.IGeoMapView`1.Fill">
            <summary>
            Gets or sets the fill.
            </summary>
        </member>
        <member name="P:ChartKit.Geo.IGeoMapView`1.AutoUpdateEnabled">
            <summary>
            Gets or sets whether the chart auto-updates are enabled.
            </summary>
        </member>
        <member name="P:ChartKit.Geo.IGeoMapView`1.MapProjection">
            <summary>
            Gets or sets the projection.
            </summary>
        </member>
        <member name="P:ChartKit.Geo.IGeoMapView`1.DesignerMode">
            <summary>
            Gets whether the control is in designer mode.
            </summary>
        </member>
        <member name="P:ChartKit.Geo.IGeoMapView`1.SyncContext">
            <summary>
            Gets or sets the Synchronization Context, use this property to
            use an external object to handle multi threading synchronization.
            </summary>
        </member>
        <member name="P:ChartKit.Geo.IGeoMapView`1.ViewCommand">
            <summary>
            Gets or sets the view command.
            </summary>
        </member>
        <member name="M:ChartKit.Geo.IGeoMapView`1.InvokeOnUIThread(System.Action)">
            <summary>
            Invokes an action in the UI thread.
            </summary>
            <param name="action"></param>
        </member>
        <member name="P:ChartKit.Geo.IGeoMapView`1.Series">
            <summary>
            Gets or sets the series.
            </summary>
        </member>
        <member name="T:ChartKit.Geo.IGeoSeries">
            <summary>
            Defines a geographical data series.
            </summary>
        </member>
        <member name="P:ChartKit.Geo.IGeoSeries.IsVisible">
            <summary>
            Gets or sets a value to indecate whether the series is visible.
            </summary>
        </member>
        <member name="T:ChartKit.Geo.IGeoSeries`1">
            <summary>
            Defines a geographical data series.
            </summary>
        </member>
        <member name="M:ChartKit.Geo.IGeoSeries`1.Measure(ChartKit.Geo.MapContext{`0})">
            <summary>
            Draw the series.
            </summary>
            <param name="context">The map context.</param>
        </member>
        <member name="M:ChartKit.Geo.IGeoSeries`1.Delete(ChartKit.Geo.MapContext{`0})">
            <summary>
            Deltes the series.
            </summary>
            <param name="context">The map context.</param>
        </member>
        <member name="T:ChartKit.Geo.IHeatPathShape">
            <summary>
            Defines a heat land shape.
            </summary>
        </member>
        <member name="P:ChartKit.Geo.IHeatPathShape.FillColor">
            <summary>
            Gets or sets the color of the fill.
            </summary>
            <value>
            The color of the fill.
            </value>
        </member>
        <member name="T:ChartKit.Geo.IMapFactory`1">
            <summary>
            Defines a map factory.
            </summary>
        </member>
        <member name="M:ChartKit.Geo.IMapFactory`1.GenerateLands(ChartKit.Geo.MapContext{`0})">
            <summary>
            Updates the lands.
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:ChartKit.Geo.IMapFactory`1.ViewTo(ChartKit.GeoMap{`0},System.Object)">
            <summary>
            Move the map to the specified view.
            </summary>
            <param name="sender">The sender.</param>
            <param name="command">The command.</param>
        </member>
        <member name="M:ChartKit.Geo.IMapFactory`1.Pan(ChartKit.GeoMap{`0},ChartKit.Drawing.LvcPoint)">
            <summary>
            Pans the map.
            </summary>
            <param name="sender">The sender.</param>
            <param name="delta">The delta.</param>
        </member>
        <member name="T:ChartKit.Geo.IWeigthedMapLand">
            <summary>
            Defines a weighted map shape.
            </summary>
        </member>
        <member name="P:ChartKit.Geo.IWeigthedMapLand.Name">
            <summary>
            Gets or sets the name of the land.
            </summary>
        </member>
        <member name="P:ChartKit.Geo.IWeigthedMapLand.Value">
            <summary>
            Gets or sets the value.
            </summary>
        </member>
        <member name="T:ChartKit.Geo.LandData">
            <summary>
            Defines the land data class.
            </summary>
        </member>
        <member name="M:ChartKit.Geo.LandData.#ctor(System.Double[][])">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.Geo.LandData"/> class.
            </summary>
        </member>
        <member name="P:ChartKit.Geo.LandData.MaxBounds">
            <summary>
            Gets or sets the maximum bounds.
            </summary>
            <value>
            The maximum bounds.
            </value>
        </member>
        <member name="P:ChartKit.Geo.LandData.MinBounds">
            <summary>
            Gets or sets the minimum bounds.
            </summary>
            <value>
            The minimum bounds.
            </value>
        </member>
        <member name="P:ChartKit.Geo.LandData.BoundsHypotenuse">
            <summary>
            Gets the bounds hypotenuse.
            </summary>
        </member>
        <member name="P:ChartKit.Geo.LandData.Coordinates">
            <summary>
            Gets or sets the land data.
            </summary>
        </member>
        <member name="P:ChartKit.Geo.LandData.Shape">
            <summary>
            Gets or sets the shape.
            </summary>
        </member>
        <member name="T:ChartKit.Geo.LandDefinition">
            <summary>
            Defines the data of a lane in a map.
            </summary>
        </member>
        <member name="M:ChartKit.Geo.LandDefinition.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.Geo.LandDefinition"/> class.
            </summary>
            <param name="shortName">The short name.</param>
            <param name="name">The name.</param>
            <param name="setOf">The set of.</param>
        </member>
        <member name="P:ChartKit.Geo.LandDefinition.ShortName">
            <summary>
            Gets the short name.
            </summary>
        </member>
        <member name="P:ChartKit.Geo.LandDefinition.Name">
            <summary>
            Gets the name.
            </summary>
        </member>
        <member name="P:ChartKit.Geo.LandDefinition.SetOf">
            <summary>
            Gets or sets the set of reference.
            </summary>
        </member>
        <member name="P:ChartKit.Geo.LandDefinition.HSize">
            <summary>
            Gets the HSize.
            </summary>
        </member>
        <member name="P:ChartKit.Geo.LandDefinition.HCenter">
            <summary>
            Gets the HCenter.
            </summary>
        </member>
        <member name="P:ChartKit.Geo.LandDefinition.MaxBounds">
            <summary>
            Gets or sets the maximum bounds.
            </summary>
            <value>
            The maximum bounds.
            </value>
        </member>
        <member name="P:ChartKit.Geo.LandDefinition.MinBounds">
            <summary>
            Gets or sets the minimum bounds.
            </summary>
            <value>
            The minimum bounds.
            </value>
        </member>
        <member name="P:ChartKit.Geo.LandDefinition.Data">
            <summary>
            Gets or sets the data.
            </summary>
        </member>
        <member name="T:ChartKit.Geo.MapContext`1">
            <summary>
            Defines a map context.
            </summary>
            <typeparam name="TDrawingContext"></typeparam>
        </member>
        <member name="M:ChartKit.Geo.MapContext`1.#ctor(ChartKit.GeoMap{`0},ChartKit.Geo.IGeoMapView{`0},ChartKit.Geo.CoreMap{`0},ChartKit.Geo.MapProjector)">
            <summary>
            Initializes a new instance of <see cref="T:ChartKit.Geo.MapContext`1"/> class.
            </summary>
        </member>
        <member name="P:ChartKit.Geo.MapContext`1.CoreMap">
            <summary>
            Gets the core map.
            </summary>
        </member>
        <member name="P:ChartKit.Geo.MapContext`1.MapFile">
            <summary>
            Gets the map file.
            </summary>
        </member>
        <member name="P:ChartKit.Geo.MapContext`1.Projector">
            <summary>
            Gets the map projector.
            </summary>
        </member>
        <member name="P:ChartKit.Geo.MapContext`1.View">
            <summary>
            Gets the map view.
            </summary>
        </member>
        <member name="T:ChartKit.Geo.MapLayer`1">
            <summary>
            Defines a map layer.
            </summary>
        </member>
        <member name="M:ChartKit.Geo.MapLayer`1.#ctor(System.String,ChartKit.Drawing.IPaint{`0},ChartKit.Drawing.IPaint{`0})">
            <summary>
            Initializes a new <see cref="T:ChartKit.Geo.MapLayer`1"/> from the given <see cref="T:ChartKit.Geo.GeoJsonFile"/>.
            </summary>
            <param name="layerName">The layer name.</param>
            <param name="stroke">The stroke.</param>
            <param name="fill">The fill.</param>
        </member>
        <member name="P:ChartKit.Geo.MapLayer`1.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:ChartKit.Geo.MapLayer`1.ProcessIndex">
            <summary>
            Gets or sets the layer process index.
            </summary>
        </member>
        <member name="P:ChartKit.Geo.MapLayer`1.IsVisible">
            <summary>
            Gets or sets a value indicating whether this layer is visible.
            </summary>
        </member>
        <member name="P:ChartKit.Geo.MapLayer`1.Stroke">
            <summary>
            Gets or sets the stroke.
            </summary>
        </member>
        <member name="P:ChartKit.Geo.MapLayer`1.Fill">
            <summary>
            Gets or sets the fill.
            </summary>
        </member>
        <member name="P:ChartKit.Geo.MapLayer`1.Max">
            <summary>
            Gets or sets the X bounds.
            </summary>
        </member>
        <member name="P:ChartKit.Geo.MapLayer`1.Min">
            <summary>
            Gets or sets the Y bounds.
            </summary>
        </member>
        <member name="P:ChartKit.Geo.MapLayer`1.Lands">
            <summary>
            Gets the lands.
            </summary>
        </member>
        <member name="P:ChartKit.Geo.MapLayer`1.AddLandWhen">
            <summary>
            Gets or sets the land condition, it must return true if the land is required.
            </summary>
        </member>
        <member name="M:ChartKit.Geo.MapLayer`1.AddFile(ChartKit.Geo.GeoJsonFile)">
            <summary>
            Adds a GeoJson file to the layer.
            </summary>
            <param name="file"></param>
        </member>
        <member name="T:ChartKit.Geo.MapProjection">
            <summary>
            Map projections.
            </summary>
        </member>
        <member name="F:ChartKit.Geo.MapProjection.Default">
            <summary>
            The default projection, it only translates longitude and latitude coordinates to
            UI coordinates starting at 0, 0 (up-left corner)
            </summary>
        </member>
        <member name="F:ChartKit.Geo.MapProjection.Mercator">
            <summary>
            The Mercator projections, it is a popular projection used by many map engines like
            Google maps or Bing maps.
            </summary>
        </member>
        <member name="T:ChartKit.Geo.MapProjector">
            <summary>
            The map projector class.
            </summary>
        </member>
        <member name="P:ChartKit.Geo.MapProjector.MapWidth">
            <summary>
            Gets the map width.
            </summary>
        </member>
        <member name="P:ChartKit.Geo.MapProjector.MapHeight">
            <summary>
            Gets the map height.
            </summary>
        </member>
        <member name="P:ChartKit.Geo.MapProjector.XOffset">
            <summary>
            Gets the x offset width.
            </summary>
        </member>
        <member name="P:ChartKit.Geo.MapProjector.YOffset">
            <summary>
            Gets the y offset.
            </summary>
        </member>
        <member name="M:ChartKit.Geo.MapProjector.ToMap(System.Double[])">
            <summary>
            Projects the given point.
            </summary>
            <param name="point">The point.</param>
            <returns></returns>
        </member>
        <member name="T:ChartKit.Geo.Maps">
            <summary>
            Defines the maps
            </summary>
        </member>
        <member name="M:ChartKit.Geo.Maps.GetWorldMap``1">
            <summary>
            Gets the world map.
            </summary>
            <returns>The map.</returns>
            <exception cref="T:System.Exception">Map not found</exception>
        </member>
        <member name="M:ChartKit.Geo.Maps.GetMapFromDirectory``1(System.String)">
            <summary>
            Gets a map from a specified path.
            </summary>
            <param name="path">The path.</param>
            <returns>The map.</returns>
        </member>
        <member name="M:ChartKit.Geo.Maps.GetMapFromStreamReader``1(System.IO.StreamReader)">
            <summary>
            Gets a map from a specified stream.
            </summary>
            <param name="stream">The stream.</param>
            <returns>The map.</returns>
        </member>
        <member name="M:ChartKit.Geo.Maps.BuildProjector(ChartKit.Geo.MapProjection,System.Single[])">
            <summary>
            Builds a projector with the given parameters.
            </summary>
            <param name="projection">The projection.</param>
            <param name="mapSize">Size of the map.</param>
            <returns></returns>
        </member>
        <member name="T:ChartKit.Geo.MapShapeContext`1">
            <summary>
            Defines the map shape context class.
            </summary>
        </member>
        <member name="M:ChartKit.Geo.MapShapeContext`1.#ctor(ChartKit.Geo.IGeoMapView{`0},ChartKit.Drawing.IPaint{`0},System.Collections.Generic.List{System.Tuple{System.Double,ChartKit.Drawing.LvcColor}},ChartKit.Measure.Bounds)">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.Geo.MapShapeContext`1"/> class.
            </summary>
            <param name="chart">The chart.</param>
            <param name="heatPaint">The heat paint.</param>
            <param name="heatStops">The heat stops.</param>
            <param name="bounds">The bounds.</param>
        </member>
        <member name="P:ChartKit.Geo.MapShapeContext`1.Chart">
            <summary>
            Gets the chart.
            </summary>
        </member>
        <member name="P:ChartKit.Geo.MapShapeContext`1.HeatPaint">
            <summary>
            Gets the heat paint.
            </summary>
        </member>
        <member name="P:ChartKit.Geo.MapShapeContext`1.HeatStops">
            <summary>
            Gets the heat stops.
            </summary>
        </member>
        <member name="P:ChartKit.Geo.MapShapeContext`1.Bounds">
            <summary>
            Gets the bounds dictionary.
            </summary>
        </member>
        <member name="T:ChartKit.Geo.MercatorProjector">
            <summary>
            Projects latitude and longitude coordinates using the Mercator projection.
            </summary>
            <seealso cref="T:ChartKit.Geo.MapProjector" />
        </member>
        <member name="M:ChartKit.Geo.MercatorProjector.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.Geo.MercatorProjector"/> class.
            </summary>
            <param name="mapWidth">Width of the map.</param>
            <param name="mapHeight">Height of the map.</param>
            <param name="offsetX">The offset x.</param>
            <param name="offsetY">The offset y.</param>
        </member>
        <member name="P:ChartKit.Geo.MercatorProjector.PreferredRatio">
            <summary>
            Gets the preferred ratio.
            </summary>
            <value>
            The preferred ratio.
            </value>
        </member>
        <member name="M:ChartKit.Geo.MercatorProjector.ToMap(System.Double[])">
            <inheritdoc cref="M:ChartKit.Geo.MapProjector.ToMap(System.Double[])"/>
        </member>
        <member name="T:ChartKit.Geo.MultiPoligonGeometry">
            <summary>
            The multi-polygon feature class.
            </summary>
        </member>
        <member name="P:ChartKit.Geo.MultiPoligonGeometry.Type">
            <summary>
            Gets or sets the type.
            </summary>
            <value>
            The type.
            </value>
        </member>
        <member name="P:ChartKit.Geo.MultiPoligonGeometry.Coordinates">
            <summary>
            Gets or sets the coordinates.
            </summary>
            <value>
            The coordinates.
            </value>
        </member>
        <member name="T:ChartKit.Geo.ZoomOnPointerView">
            <summary>
            Defines the 
            </summary>
        </member>
        <member name="M:ChartKit.Geo.ZoomOnPointerView.#ctor(ChartKit.Drawing.LvcPoint,ChartKit.Measure.ZoomDirection)">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.Geo.ZoomOnPointerView"/> command.
            </summary>
            <param name="pivot">The pivot.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="P:ChartKit.Geo.ZoomOnPointerView.Pivot">
            <summary>
            Gets the pivot.
            </summary>
        </member>
        <member name="P:ChartKit.Geo.ZoomOnPointerView.Direction">
            <summary>
            Gets the direction.
            </summary>
        </member>
        <member name="T:ChartKit.HeatFunctions">
            <summary>
            Defines common heat functions.
            </summary>
        </member>
        <member name="M:ChartKit.HeatFunctions.BuildColorStops(ChartKit.Drawing.LvcColor[],System.Double[])">
            <summary>
            Builds the color stops.
            </summary>
            <param name="heatMap">The heat map.</param>
            <param name="colorStops">The color stops.</param>
            <returns></returns>
            <exception cref="T:System.Exception">
            At least 2 colors are required in a heat map.
            or
            At least 2 colors are required in a heat map.
            </exception>
        </member>
        <member name="M:ChartKit.HeatFunctions.InterpolateColor(System.Single,ChartKit.Measure.Bounds,ChartKit.Drawing.LvcColor[],System.Collections.Generic.List{System.Tuple{System.Double,ChartKit.Drawing.LvcColor}})">
            <summary>
            Interpolates the color.
            </summary>
            <param name="weight">The weight.</param>
            <param name="weightBounds">The weight bounds.</param>
            <param name="heatMap">The heat map.</param>
            <param name="heatStops">The heat stops.</param>
            <returns></returns>
        </member>
        <member name="T:ChartKit.HeatLandSeries`1">
            <summary>
            Defines the heat land series class.
            </summary>
            <typeparam name="TDrawingContext"></typeparam>
        </member>
        <member name="M:ChartKit.HeatLandSeries`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.HeatLandSeries`1"/> class.
            </summary>
        </member>
        <member name="E:ChartKit.HeatLandSeries`1.PropertyChanged">
            <summary>
            Called when a property changes.
            </summary>
        </member>
        <member name="P:ChartKit.HeatLandSeries`1.Name">
            <summary>
            Gets or sets the name.
            </summary>
        </member>
        <member name="P:ChartKit.HeatLandSeries`1.HeatMap">
            <summary>
            Gets or sets the heat map.
            </summary>
        </member>
        <member name="P:ChartKit.HeatLandSeries`1.ColorStops">
            <summary>
            Gets or sets the color stops.
            </summary>
        </member>
        <member name="P:ChartKit.HeatLandSeries`1.Lands">
            <summary>
            Gets or sets the lands.
            </summary>
        </member>
        <member name="P:ChartKit.HeatLandSeries`1.IsVisible">
            <inheritdoc cref="P:ChartKit.Geo.IGeoSeries.IsVisible"/>
        </member>
        <member name="M:ChartKit.HeatLandSeries`1.Measure(ChartKit.Geo.MapContext{`0})">
            <inheritdoc cref="M:ChartKit.Geo.IGeoSeries`1.Measure(ChartKit.Geo.MapContext{`0})"/>
        </member>
        <member name="M:ChartKit.HeatLandSeries`1.Delete(ChartKit.Geo.MapContext{`0})">
            <inheritdoc cref="M:ChartKit.Geo.IGeoSeries`1.Delete(ChartKit.Geo.MapContext{`0})"/>
        </member>
        <member name="M:ChartKit.HeatLandSeries`1.IntitializeSeries(ChartKit.Drawing.IPaint{`0})">
            <summary>
            Initializes the series.
            </summary>
        </member>
        <member name="M:ChartKit.HeatLandSeries`1.OnPropertyChanged(System.String)">
            <summary>
            Called to invoke the property changed event.
            </summary>
        </member>
        <member name="T:ChartKit.HeatSeries`4">
            <summary>
            Defines a column series.
            </summary>
            <typeparam name="TModel">The type of the model.</typeparam>
            <typeparam name="TVisual">The type of the visual.</typeparam>
            <typeparam name="TLabel">The type of the label.</typeparam>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
        </member>
        <member name="M:ChartKit.HeatSeries`4.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.HeatSeries`4"/> class.
            </summary>
        </member>
        <member name="P:ChartKit.HeatSeries`4.HeatMap">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.IHeatSeries`1.HeatMap"/>
        </member>
        <member name="P:ChartKit.HeatSeries`4.ColorStops">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.IHeatSeries`1.ColorStops"/>
        </member>
        <member name="P:ChartKit.HeatSeries`4.PointPadding">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.IHeatSeries`1.PointPadding"/>
        </member>
        <member name="M:ChartKit.HeatSeries`4.Invalidate(ChartKit.Chart{`3})">
            <inheritdoc cref="M:ChartKit.Kernel.ChartElement`1.Invalidate(ChartKit.Chart{`0})"/>
        </member>
        <member name="M:ChartKit.HeatSeries`4.GetBounds(ChartKit.CartesianChart{`3},ChartKit.Kernel.Sketches.ICartesianAxis,ChartKit.Kernel.Sketches.ICartesianAxis)">
            <inheritdoc cref="M:ChartKit.Kernel.ChartElement`1.Invalidate(ChartKit.Chart{`0})"/>
        </member>
        <member name="M:ChartKit.HeatSeries`4.GetRequestedSecondaryOffset">
            <inheritdoc cref="M:ChartKit.CartesianSeries`4.GetRequestedSecondaryOffset"/>
        </member>
        <member name="M:ChartKit.HeatSeries`4.GetRequestedPrimaryOffset">
            <inheritdoc cref="M:ChartKit.CartesianSeries`4.GetRequestedPrimaryOffset"/>
        </member>
        <member name="M:ChartKit.HeatSeries`4.SetDefaultPointTransitions(ChartKit.Kernel.ChartPoint)">
            <inheritdoc cref="M:ChartKit.Series`4.SetDefaultPointTransitions(ChartKit.Kernel.ChartPoint)"/>
        </member>
        <member name="M:ChartKit.HeatSeries`4.SoftDeleteOrDisposePoint(ChartKit.Kernel.ChartPoint,ChartKit.Measure.Scaler,ChartKit.Measure.Scaler)">
            <inheritdoc cref="M:ChartKit.CartesianSeries`4.SoftDeleteOrDisposePoint(ChartKit.Kernel.ChartPoint,ChartKit.Measure.Scaler,ChartKit.Measure.Scaler)"/>
        </member>
        <member name="M:ChartKit.HeatSeries`4.GetMiniaturesSketch">
            <inheritdoc cref="M:ChartKit.Series`4.GetMiniaturesSketch"/>
        </member>
        <member name="M:ChartKit.HeatSeries`4.GetPaintTasks">
            <inheritdoc cref="M:ChartKit.Kernel.ChartElement`1.GetPaintTasks"/>
        </member>
        <member name="T:ChartKit.IInternalSeries">
            <summary>
            Defines the internal series interface.
            </summary>
        </member>
        <member name="P:ChartKit.IInternalSeries.SeriesProperties">
            <summary>
            Gets the properties of the series.
            </summary>
        </member>
        <member name="T:ChartKit.ISeries">
            <summary>
            Defines a chart series.
            </summary>
        </member>
        <member name="P:ChartKit.ISeries.SeriesId">
            <summary>
            Gets or sets a series unique identifier, the library handles this id automatically.
            </summary>
        </member>
        <member name="P:ChartKit.ISeries.SeriesProperties">
            <summary>
            Gets the properties of the series.
            </summary>
        </member>
        <member name="P:ChartKit.ISeries.RequiresFindClosestOnPointerDown">
            <summary>
            Gets whether the series requires to find the closest point when the pointer goes down.
            </summary>
        </member>
        <member name="P:ChartKit.ISeries.Name">
            <summary>
            Gets or sets the name of the series, the name is normally used by <see cref="T:ChartKit.Kernel.Sketches.IChartTooltip`1"/> or 
            <see cref="T:ChartKit.Kernel.Sketches.IChartLegend`1"/>, the default value is set automatically by the library.
            </summary>
        </member>
        <member name="P:ChartKit.ISeries.Values">
            <summary>
            Gets or sets the values.
            </summary>
            <value>
            The values.
            </value>
        </member>
        <member name="P:ChartKit.ISeries.IsVisible">
            <summary>
            Gets or sets a value indicating whether this instance is visible.
            </summary>
            <value>
              <c>true</c> if this instance is visible; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:ChartKit.ISeries.IsHoverable">
            <summary>
            Gets or sets a value indicating whether this instance will show up in tool tips when the pointer is over a point.
            default value is <c>true</c>.
            </summary>
            <value>
              <c>true</c> if this instance is hover-able; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:ChartKit.ISeries.IsVisibleAtLegend">
            <summary>
            Gets or sets a value indicating whether this instance will show up in legends.
            default value is <c>true</c>.
            </summary>
            <value>
              <c>true</c> if this instance is visible at legends; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:ChartKit.ISeries.MiniatureShapeSize">
            <summary>
            Gets or sets the size of the legend shape.
            </summary>
            <value>
            The size of the legend shape.
            </value>
        </member>
        <member name="P:ChartKit.ISeries.DataPadding">
            <summary>
            Gets or sets the data padding, the distance from the edge of the chart to where the series is drawn,
            both coordinates (X and Y) from 0 to 1, where 0 is nothing and 1 is the axis tick (the separation between every label).
            </summary>
            <value>
            The data padding.
            </value>
        </member>
        <member name="P:ChartKit.ISeries.ZIndex">
            <summary>
            Gets or sets the z index position.
            </summary>
            <value>
            The index of the z.
            </value>
        </member>
        <member name="P:ChartKit.ISeries.Pivot">
            <summary>
            Gets or sets the value where the direction of the axis changes, by default is 0.
            </summary>
        </member>
        <member name="P:ChartKit.ISeries.GeometrySvg">
            <summary>
            Gets or sets the series geometry svg, this property requires the series visual to be
            an <see cref="T:ChartKit.Drawing.ISvgPath`1"/> instance.
            </summary>
        </member>
        <member name="P:ChartKit.ISeries.AnimationsSpeed">
            <summary>
            Gets or sets the animations speed, if this property is null, the
            <see cref="P:ChartKit.Chart`1.AnimationsSpeed"/> property will be used.
            </summary>
            <value>
            The animations speed.
            </value>
        </member>
        <member name="P:ChartKit.ISeries.EasingFunction">
            <summary>
            Gets or sets the easing function to animate the series, if this property is null, the
            <see cref="P:ChartKit.Chart`1.EasingFunction"/> property will be used.
            </summary>
            <value>
            The easing function.
            </value>
        </member>
        <member name="E:ChartKit.ISeries.VisibilityChanged">
            <summary>
            Occurs when the series <see cref="P:ChartKit.ISeries.IsVisible"/> property changes.
            </summary>
        </member>
        <member name="M:ChartKit.ISeries.GetPrimaryToolTipText(ChartKit.Kernel.ChartPoint)">
            <summary>
            Gets the tool tip text for a give chart point.
            </summary>
            <param name="point">The chart point.</param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.ISeries.GetSecondaryToolTipText(ChartKit.Kernel.ChartPoint)">
            <summary>
            Gets the tool tip text for a give chart point.
            </summary>
            <param name="point">The chart point.</param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.ISeries.GetDataLabelText(ChartKit.Kernel.ChartPoint)">
            <summary>
            Gets the data label content for a given chart point.
            </summary>
            <param name="point">The chart point.</param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.ISeries.Fetch(ChartKit.Kernel.Sketches.IChart)">
            <summary>
            Gets a <see cref="T:ChartKit.Kernel.ChartPoint"/> array with the points used to generate the plot.
            </summary>
            <param name="chart">the chart</param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.ISeries.FindHitPoints(ChartKit.Kernel.Sketches.IChart,ChartKit.Drawing.LvcPoint,ChartKit.Measure.TooltipFindingStrategy)">
            <summary>
            Gets the <see cref="T:ChartKit.Kernel.ChartPoint"/> instances which contain the <paramref name="pointerPosition"/>, according 
            to the chart's <see cref="T:ChartKit.Measure.TooltipFindingStrategy"/> property.
            </summary>
            <param name="chart">the chart.</param>
            <param name="pointerPosition">the pointer position.</param>
            <param name="strategy">the strategy.</param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.ISeries.OnPointerEnter(ChartKit.Kernel.ChartPoint)">
            <summary>
            Called when the pointer enters a chart point.
            </summary>
            <param name="point"></param>
        </member>
        <member name="M:ChartKit.ISeries.OnPointerLeft(ChartKit.Kernel.ChartPoint)">
            <summary>
            Called when the pointer leaves a chart point.
            </summary>
            <param name="point"></param>
        </member>
        <member name="M:ChartKit.ISeries.RestartAnimations">
            <summary>
            Clears the visuals in the cache and re-starts animations.
            </summary>
        </member>
        <member name="M:ChartKit.ISeries.SoftDeleteOrDispose(ChartKit.Kernel.Sketches.IChartView)">
            <summary>
            Deletes the series from the user interface.
            </summary>
        </member>
        <member name="T:ChartKit.ISeries`1">
            <summary>
            Defines a series.
            </summary>
            <typeparam name="TModel">The type of the model.</typeparam>
            <seealso cref="T:System.IDisposable" />
        </member>
        <member name="P:ChartKit.ISeries`1.Mapping">
            <summary>
            Gets or sets the mapping.
            </summary>
            <value>
            The mapping.
            </value>
        </member>
        <member name="P:ChartKit.ISeries`1.Values">
            <summary>
            Gets or sets the values.
            </summary>
            <value>
            The values.
            </value>
        </member>
        <member name="T:ChartKit.Kernel.ActionThrottler">
            <summary>
            An object that is able to throttle an action.
            </summary>
        </member>
        <member name="M:ChartKit.Kernel.ActionThrottler.#ctor(System.Func{System.Threading.Tasks.Task},System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.Kernel.ActionThrottler"/> class.
            </summary>
            <param name="targetAction">The target action to throttle.</param>
            <param name="time">The throttling time.</param>
        </member>
        <member name="P:ChartKit.Kernel.ActionThrottler.ThrottlerTimeSpan">
            <summary>
            Gets or sets the throttler time span.
            </summary>
            <value>
            The throttler time span.
            </value>
        </member>
        <member name="M:ChartKit.Kernel.ActionThrottler.Call">
            <summary>
            Schedules a call to the target action.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Kernel.ActionThrottler.ForceCall">
            <summary>
            Forces the call to the target action, this call is not throttled.
            </summary>
            <returns></returns>
        </member>
        <member name="T:ChartKit.Kernel.ChartElement`1">
            <summary>
            Defines a visual element in a chart.
            </summary>
        </member>
        <member name="E:ChartKit.Kernel.ChartElement`1.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
            <returns></returns>
        </member>
        <member name="P:ChartKit.Kernel.ChartElement`1.Tag">
            <inheritdoc cref="P:ChartKit.Kernel.IChartElement`1.Tag" />
        </member>
        <member name="M:ChartKit.Kernel.ChartElement`1.Invalidate(ChartKit.Chart{`0})">
            <inheritdoc cref="M:ChartKit.Kernel.IChartElement`1.Invalidate(ChartKit.Chart{`0})" />
        </member>
        <member name="M:ChartKit.Kernel.ChartElement`1.RemoveOldPaints(ChartKit.Kernel.Sketches.IChartView{`0})">
            <inheritdoc cref="M:ChartKit.Kernel.IChartElement`1.RemoveOldPaints(ChartKit.Kernel.Sketches.IChartView{`0})" />
        </member>
        <member name="M:ChartKit.Kernel.ChartElement`1.RemoveFromUI(ChartKit.Chart{`0})">
            <inheritdoc cref="M:ChartKit.Kernel.IChartElement`1.RemoveFromUI(ChartKit.Chart{`0})" />
        </member>
        <member name="M:ChartKit.Kernel.ChartElement`1.GetPaintTasks">
            <summary>
            Gets the paint tasks registered by the <see cref="T:ChartKit.Kernel.ChartElement`1"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Kernel.ChartElement`1.SetPaintProperty(ChartKit.Drawing.IPaint{`0}@,ChartKit.Drawing.IPaint{`0},System.Boolean,System.String)">
            <summary>
            Sets a property value and handles the paints in the canvas.
            </summary>
            <param name="reference">The referenced paint task.</param>
            <param name="value">The value</param>
            <param name="isStroke">if set to <c>true</c> [is stroke].</param>
            <param name="propertyName">Name of the property.</param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Kernel.ChartElement`1.SetProperty``1(``0@,``0,System.String)">
            <summary>
            Sets a property value.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="reference"></param>
            <param name="value"></param>
            <param name="propertyName"></param>
        </member>
        <member name="M:ChartKit.Kernel.ChartElement`1.CanSetProperty(System.String)">
            <summary>
            Determines whether the property can be set.
            1. The user always can.
            2. A style can set it only if the user did not.
            </summary>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Kernel.ChartElement`1.ScheduleDeleteFor(ChartKit.Drawing.IPaint{`0})">
            <summary>
            Schedules the delete for thew given <see cref="T:ChartKit.Drawing.IPaint`1"/> instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Kernel.ChartElement`1.OnPaintChanged(System.String)">
            <summary>
            Called when the fill changes.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Kernel.ChartElement`1.OnPropertyChanged(System.String)">
            <summary>
            Called when a property changes.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <returns></returns>
        </member>
        <member name="T:ChartKit.Kernel.ChartEntityMetaData">
            <summary>
            Represents additional data required by LiveCharts to draw a point.
            </summary>
        </member>
        <member name="M:ChartKit.Kernel.ChartEntityMetaData.#ctor(System.Action{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.Kernel.ChartEntityMetaData"/> class.
            </summary>
            <param name="onEntityIndexChanged">The callback to call when the entity index changes.</param>
        </member>
        <member name="P:ChartKit.Kernel.ChartEntityMetaData.EntityIndex">
            <summary>
            Gets the entity index, a consecutive integer based on the position of the entity in the data collection.
            </summary>
        </member>
        <member name="P:ChartKit.Kernel.ChartEntityMetaData.ChartPoints">
            <summary>
            Gets the chart points dictionary.
            </summary>
        </member>
        <member name="T:ChartKit.Kernel.ChartKitSettings">
            <summary>
            LiveCharts global settings
            </summary>
        </member>
        <member name="P:ChartKit.Kernel.ChartKitSettings.CurrentThemeId">
            <summary>
            Gets the theme identifier.
            </summary>
            <value>
            The theme identifier.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.ChartKitSettings.EasingFunction">
            <summary>
            Gets or sets the default easing function.
            </summary>
            <value>
            The default easing function.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.ChartKitSettings.AnimationsSpeed">
            <summary>
            Gets or sets the default animations speed.
            </summary>
            <value>
            The default animations speed.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.ChartKitSettings.ZoomSpeed">
            <summary>
            Gets or sets the default zoom speed.
            </summary>
            <value>
            The default zoom speed.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.ChartKitSettings.ZoomMode">
            <summary>
            Gets or sets the default zoom mode.
            </summary>
            <value>
            The default zoom mode.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.ChartKitSettings.LegendPosition">
            <summary>
            Gets or sets the default legend position.
            </summary>
            <value>
            The default legend position.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.ChartKitSettings.LegendBackgroundPaint">
            <summary>
            Gets or sets the default legend background paint.
            </summary>
        </member>
        <member name="P:ChartKit.Kernel.ChartKitSettings.LegendTextPaint">
            <summary>
            Gets or sets the default legend text paint.
            </summary>
        </member>
        <member name="P:ChartKit.Kernel.ChartKitSettings.LegendTextSize">
            <summary>
            Gets or sets the default legend text size.
            </summary>
        </member>
        <member name="P:ChartKit.Kernel.ChartKitSettings.TooltipPosition">
            <summary>
            Gets or sets the default tooltip position.
            </summary>
            <value>
            The default tooltip position.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.ChartKitSettings.TooltipBackgroundPaint">
            <summary>
            Gets or sets the default tooltip background paint.
            </summary>
        </member>
        <member name="P:ChartKit.Kernel.ChartKitSettings.TooltipTextPaint">
            <summary>
            Gets or sets the default tooltip text paint.
            </summary>
        </member>
        <member name="P:ChartKit.Kernel.ChartKitSettings.TooltipTextSize">
            <summary>
            Gets or sets the default tooltip text size.
            </summary>
        </member>
        <member name="P:ChartKit.Kernel.ChartKitSettings.MaxTooltipsAndLegendsLabelsWidth">
            <summary>
            Gets or sets the default max with for labels inside tooltips and legends.
            </summary>
        </member>
        <member name="P:ChartKit.Kernel.ChartKitSettings.TooltipFindingStrategy">
            <summary>
            Gets or sets the default tooltip finding strategy.
            </summary>
            <value>
            The default tooltip finding strategy.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.ChartKitSettings.PolarInitialRotation">
            <summary>
            Gets or sets the default polar initial rotation.
            </summary>
            <value>
            The default animations speed.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.ChartKitSettings.UpdateThrottlingTimeout">
            <summary>
            Gets or sets the default update throttling timeout
            </summary>
            <value>
            The default update throttling timeout
            </value>
        </member>
        <member name="P:ChartKit.Kernel.ChartKitSettings.IsRightToLeft">
            <summary>
            Gets or sets a value indicating whether the text is right to left.
            </summary>
        </member>
        <member name="M:ChartKit.Kernel.ChartKitSettings.HasMap``1(System.Action{``0,ChartKit.Kernel.ChartPoint})">
            <summary>
            Adds or replaces a mapping for a given type, the mapper defines how a type is mapped to a<see cref="T:ChartKit.Kernel.ChartPoint"/> instance,
            then the <see cref="T:ChartKit.Kernel.ChartPoint"/> will be drawn as a point in our chart.
            </summary>
            <typeparam name="TModel">The type of the model.</typeparam>
            <param name="mapper">The mapper.</param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Kernel.ChartKitSettings.UseRightToLeftSettings">
            <summary>
            Indicates that the library should render tooltips in a right to left mode, you also need to load
            a right to left font.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Kernel.ChartKitSettings.WithAnimationsSpeed(System.TimeSpan)">
            <summary>
            Sets the default animations speed.
            </summary>
            <param name="animationsSpeed">The animations speed.</param>
            <returns>The current settings</returns>
        </member>
        <member name="M:ChartKit.Kernel.ChartKitSettings.WithEasingFunction(System.Func{System.Single,System.Single})">
            <summary>
            Sets the default the default easing function.
            </summary>
            <param name="easingFunction">The easing function.</param>
            <returns>The current settings</returns>
        </member>
        <member name="M:ChartKit.Kernel.ChartKitSettings.WithZoomSpeed(System.Double)">
            <summary>
            Sets the default the default zoom speed.
            </summary>
            <param name="speed">The speed.</param>
            <returns>The current settings</returns>
        </member>
        <member name="M:ChartKit.Kernel.ChartKitSettings.WithZoomMode(ChartKit.Measure.ZoomAndPanMode)">
            <summary>
            Sets the default the default zoom mode.
            </summary>
            <param name="zoomMode">The zoom mode.</param>
            <returns>The current settings</returns>
        </member>
        <member name="M:ChartKit.Kernel.ChartKitSettings.WithUpdateThrottlingTimeout(System.TimeSpan)">
            <summary>
            Sets the default the default update throttling timeout
            </summary>
            <param name="timeout">The update throttling timeout.</param>
            <returns>The current settings</returns>
        </member>
        <member name="M:ChartKit.Kernel.ChartKitSettings.WithLegendBackgroundPaint``1(ChartKit.Drawing.IPaint{``0})">
            <summary>
            Sets the default legend background paint.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <param name="paint">The paint.</param>
            <returns>The current settings.</returns>
        </member>
        <member name="M:ChartKit.Kernel.ChartKitSettings.WithLegendTextPaint``1(ChartKit.Drawing.IPaint{``0})">
            <summary>
            Sets the default legend text paint.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <param name="paint">The paint.</param>
            <returns>The current settings.</returns>
        </member>
        <member name="M:ChartKit.Kernel.ChartKitSettings.WithLegendTextSize``1(System.Nullable{System.Double})">
            <summary>
            Sets the default legend text size.
            </summary>
            <param name="size">The size.</param>
            <returns>The current settings.</returns>
        </member>
        <member name="M:ChartKit.Kernel.ChartKitSettings.WithTooltipBackgroundPaint``1(ChartKit.Drawing.IPaint{``0})">
            <summary>
            Sets the default tooltip background paint.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <param name="paint">The paint.</param>
            <returns>The current settings.</returns>
        </member>
        <member name="M:ChartKit.Kernel.ChartKitSettings.WithTooltipTextPaint``1(ChartKit.Drawing.IPaint{``0})">
            <summary>
            Sets the default tooltip text paint.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <param name="paint">The paint.</param>
            <returns>The current settings.</returns>
        </member>
        <member name="M:ChartKit.Kernel.ChartKitSettings.WithTooltipTextSize``1(System.Nullable{System.Double})">
            <summary>
            Sets the default tooltip text size.
            </summary>
            <param name="size">The size.</param>
            <returns>The current settings.</returns>
        </member>
        <member name="M:ChartKit.Kernel.ChartKitSettings.RemoveMap``1">
            <summary>
            Removes a map from the settings.
            </summary>
            <typeparam name="TModel">The type of the model.</typeparam>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Kernel.ChartKitSettings.HasTheme``1(System.Action{ChartKit.Themes.Theme{``0}})">
            <summary>
            Adds the default styles.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <param name="builder">The builder.</param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Kernel.ChartKitSettings.GetTheme``1">
            <summary>
            Gets the styles builder.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <returns></returns>
            <exception cref="T:System.Exception">$"The type {nameof(TDrawingContext)} is not registered.</exception>
        </member>
        <member name="M:ChartKit.Kernel.ChartKitSettings.AddDefaultMappers">
            <summary>
            Enables LiveCharts to be able to plot short, int, long, float, double, decimal, short?, int?, long?, float?, double?, decimal?,
            <see cref="T:ChartKit.Defaults.WeightedPoint"/>, <see cref="T:ChartKit.Defaults.ObservableValue"/>, <see cref="T:ChartKit.Defaults.ObservablePoint"/>, <see cref="T:ChartKit.Defaults.DateTimePoint"/> and
            <see cref="T:ChartKit.Defaults.FinancialPoint"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="T:ChartKit.Kernel.ChartPoint">
            <summary>
            Defines a point in a chart.
            </summary>
        </member>
        <member name="M:ChartKit.Kernel.ChartPoint.#ctor(ChartKit.Kernel.Sketches.IChartView,ChartKit.ISeries,ChartKit.Kernel.IChartEntity)">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.Kernel.ChartPoint"/> class.
            </summary>
            <param name="chart">The chart.</param>
            <param name="series">The series.</param>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:ChartKit.Kernel.ChartPoint.#ctor(ChartKit.Kernel.ChartPoint)">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.Kernel.ChartPoint"/> class.
            </summary>
            <param name="point">The point.</param>
        </member>
        <member name="P:ChartKit.Kernel.ChartPoint.Empty">
            <summary>
            Gets a new instance of an empty chart point.
            </summary>
        </member>
        <member name="P:ChartKit.Kernel.ChartPoint.Index">
            <summary>
            Gets the position of the point the collection that was used when the point was drawn.
            </summary>
        </member>
        <member name="P:ChartKit.Kernel.ChartPoint.Coordinate">
            <summary>
            Gets or sets the coordinate.
            </summary>
        </member>
        <member name="P:ChartKit.Kernel.ChartPoint.IsEmpty">
            <summary>
            Gets or a value indicating whether this instance is empty, LivveCharts will ignore the point in the chart.
            </summary>
            <value>
              <c>true</c> if this instance is empty; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.ChartPoint.PrimaryValue">
            <summary>
            Gets or sets the primary value.
            </summary>
            <value>
            The primary value.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.ChartPoint.SecondaryValue">
            <summary>
            Gets or sets the secondary value.
            </summary>
            <value>
            The secondary value.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.ChartPoint.TertiaryValue">
            <summary>
            Gets or sets the tertiary value.
            </summary>
            <value>
            The tertiary value.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.ChartPoint.QuaternaryValue">
            <summary>
            Gets or sets the quaternary value.
            </summary>
            <value>
            The quaternary value.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.ChartPoint.QuinaryValue">
            <summary>
            Gets or sets the quinary value.
            </summary>
            <value>
            The quinary value.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.ChartPoint.StackedValue">
            <summary>
            Gets or sets the stacked value, if the point do not belongs to a stacked series then this property is null.
            </summary>
        </member>
        <member name="P:ChartKit.Kernel.ChartPoint.AsDataLabel">
            <summary>
            Gets the point as data label.
            </summary>
            <value>
            As tooltip string.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.ChartPoint.Context">
            <summary>
            Gets the context.
            </summary>
            <value>
            The context.
            </value>
        </member>
        <member name="M:ChartKit.Kernel.ChartPoint.DistanceTo(ChartKit.Drawing.LvcPoint)">
            <summary>
            Gets the distance to a given point.
            </summary>
            <param name="point">The point to calculate the distance to.</param>
            <returns>The distance in pixels.</returns>
        </member>
        <member name="T:ChartKit.Kernel.ChartPoint`3">
            <summary>
            Defines a point in a chart with known visual and label types.
            </summary>
            <typeparam name="TModel">The type of the model.</typeparam>
            <typeparam name="TVisual">The type of the visual.</typeparam>
            <typeparam name="TLabel">The type of the label.</typeparam>
        </member>
        <member name="M:ChartKit.Kernel.ChartPoint`3.#ctor(ChartKit.Kernel.ChartPoint)">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.Kernel.ChartPoint`3"/> class.
            </summary>
            <param name="point">The point.</param>
        </member>
        <member name="P:ChartKit.Kernel.ChartPoint`3.Model">
            <summary>
            Gets the model, this is the actual object that represents the point in the chart.
            </summary>
            <value>
            The model.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.ChartPoint`3.Visual">
            <summary>
            Gets the visual.
            </summary>
            <value>
            The visual.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.ChartPoint`3.Label">
            <summary>
            Gets the label.
            </summary>
            <value>
            The label.
            </value>
        </member>
        <member name="T:ChartKit.Kernel.ChartPointContext">
            <summary>
            Defines the environment of a point in a chart.
            </summary>
        </member>
        <member name="M:ChartKit.Kernel.ChartPointContext.#ctor(ChartKit.Kernel.Sketches.IChartView,ChartKit.ISeries,ChartKit.Kernel.IChartEntity)">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.Kernel.ChartPointContext"/> class.
            </summary>
            <param name="chart">The chart.</param>
            <param name="series">The series.</param>
            <param name="entity">The entity.</param>
        </member>
        <member name="P:ChartKit.Kernel.ChartPointContext.Chart">
            <summary>
            Gets the chart.
            </summary>
            <value>
            The chart.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.ChartPointContext.Series">
            <summary>
            Gets the series.
            </summary>
            <value>
            The series.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.ChartPointContext.Entity">
            <summary>
            Gets the <see cref="T:ChartKit.Kernel.IChartEntity"/>.
            </summary>
        </member>
        <member name="P:ChartKit.Kernel.ChartPointContext.DataSource">
            <summary>
            Gets the DataSource.
            </summary>
        </member>
        <member name="P:ChartKit.Kernel.ChartPointContext.Index">
            <summary>
            Gets the position of the point the collection that was used when the point was drawn.
            </summary>
        </member>
        <member name="P:ChartKit.Kernel.ChartPointContext.Visual">
            <summary>
            Gets the visual.
            </summary>
            <value>
            The visual.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.ChartPointContext.AdditionalVisuals">
            <summary>
            Gets the additional visuals, some series might have more than one visual, here you can find the rest of them.
            </summary>
        </member>
        <member name="P:ChartKit.Kernel.ChartPointContext.Label">
            <summary>
            Gets the label.
            </summary>
            <value>
            The label.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.ChartPointContext.HoverArea">
            <summary>
            Gets or sets the area that triggers the ToolTip.
            </summary>
        </member>
        <member name="T:ChartKit.Kernel.ChartUpdateParams">
            <summary>
            Defines the chart update parameter.
            </summary>
        </member>
        <member name="P:ChartKit.Kernel.ChartUpdateParams.IsAutomaticUpdate">
            <summary>
            Gets or sets a value indicating whether this instance is automatic update.
            </summary>
            <value>
              <c>true</c> if this instance is automatic update; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.ChartUpdateParams.Throttling">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:ChartKit.Kernel.ChartUpdateParams"/> is throttling.
            </summary>
            <value>
              <c>true</c> if throttling; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:ChartKit.Kernel.CollectionDeepObserver`1">
            <summary>
            A helper class that tracks both, <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged"/> and 
            <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged"/> events.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:ChartKit.Kernel.CollectionDeepObserver`1.checkINotifyPropertyChanged">
            <summary>
            The check i notify property changed
            </summary>
        </member>
        <member name="M:ChartKit.Kernel.CollectionDeepObserver`1.#ctor(System.Collections.Specialized.NotifyCollectionChangedEventHandler,System.ComponentModel.PropertyChangedEventHandler,System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.Kernel.CollectionDeepObserver`1"/> class.
            </summary>
            <param name="onCollectionChanged">The on collection changed handler.</param>
            <param name="onItemPropertyChanged">The on item property changed handler.</param>
            <param name="checkINotifyPropertyChanged">if true, it will force the check to verify if the type {T} implements INotifyPropertyChanged.</param>
        </member>
        <member name="M:ChartKit.Kernel.CollectionDeepObserver`1.Initialize(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Initializes the listeners.
            </summary>
            <param name="instance">The instance.</param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Kernel.CollectionDeepObserver`1.Dispose(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Disposes the listeners.
            </summary>
            <param name="instance">The instance.</param>
            <returns></returns>
        </member>
        <member name="T:ChartKit.Kernel.Coordinate">
            <summary>
            Defines a coordinate.
            </summary>
        </member>
        <member name="M:ChartKit.Kernel.Coordinate.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,ChartKit.Kernel.Error)">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.Kernel.Coordinate"/> struct.
            </summary>
        </member>
        <member name="M:ChartKit.Kernel.Coordinate.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.Kernel.Coordinate"/> struct.
            </summary>
            <param name="x">The x value.</param>
            <param name="maximum">The maximum value.</param>
            <param name="thirdQuartile">The third quiartile value.</param>
            <param name="firstQuartile">The first quartile value.</param>
            <param name="minimum">The minimum value.</param>
            <param name="median">The median value.</param>
        </member>
        <member name="M:ChartKit.Kernel.Coordinate.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.Kernel.Coordinate"/> struct.
            </summary>
            <param name="x">The x value.</param>
            <param name="high">The high value.</param>
            <param name="open">The open value.</param>
            <param name="close">The quaternary value.</param>
            <param name="low">The quinary value.</param>
        </member>
        <member name="M:ChartKit.Kernel.Coordinate.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.Kernel.Coordinate"/> struct.
            </summary>
            <param name="x">The X coordinate.</param>
            <param name="y">The Y coordinate.</param>
        </member>
        <member name="M:ChartKit.Kernel.Coordinate.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.Kernel.Coordinate"/> struct.
            </summary>
            <param name="x">The X coordinate.</param>
            <param name="y">The Y coordinate.</param>
            <param name="weight">The weight of the pint.</param>
        </member>
        <member name="P:ChartKit.Kernel.Coordinate.Empty">
            <summary>
            Gets an empty coordinate instance.
            </summary>
        </member>
        <member name="P:ChartKit.Kernel.Coordinate.IsEmpty">
            <summary>
            Evaluates whether the instance is empty.
            </summary>
        </member>
        <member name="P:ChartKit.Kernel.Coordinate.PrimaryValue">
            <summary>
            Gets or sets the primary value, normally the Y coordinate or the value in a gauge.
            </summary>
            <value>
            The primary value.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Coordinate.SecondaryValue">
            <summary>
            Gets or sets the secondary value, normally the X coordinate.
            </summary>
            <value>
            The secondary value.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Coordinate.TertiaryValue">
            <summary>
            Gets or sets the tertiary value, normally used on weighted, financial or box series.
            </summary>
            <value>
            The tertiary value.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Coordinate.QuaternaryValue">
            <summary>
            Gets or sets the quaternary value, normally used on financial or box series.
            </summary>
            <value>
            The quaternary value.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Coordinate.QuinaryValue">
            <summary>
            Gets or sets the quinary value, normally used on financial or box series.
            </summary>
            <value>
            The quinary value.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Coordinate.SenaryValue">
            <summary>
            Gets or sets the senary value, normally used on financial or box series.
            </summary>
            <value>
            The senary value.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Coordinate.PointError">
            <summary>
            Gets or sets the coordinate error.
            </summary>
        </member>
        <member name="T:ChartKit.Kernel.DesignerKind">
            <summary>
            Designer series kind.
            </summary>
        </member>
        <member name="F:ChartKit.Kernel.DesignerKind.Cartesian">
            <summary>
            The Cartesian kind.
            </summary>
        </member>
        <member name="F:ChartKit.Kernel.DesignerKind.Pie">
            <summary>
            The pie kind.
            </summary>
        </member>
        <member name="T:ChartKit.Kernel.Drawing.BezierData">
            <summary>
            Defines the bezier data class.
            </summary>
        </member>
        <member name="M:ChartKit.Kernel.Drawing.BezierData.#ctor(ChartKit.Kernel.ChartPoint)">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.Kernel.Drawing.BezierData"/> class.
            </summary>
            <param name="chartPoint">The chart point.</param>
        </member>
        <member name="P:ChartKit.Kernel.Drawing.BezierData.TargetPoint">
            <summary>
            Gets or sets the target point.
            </summary>
            <value>
            The target point.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Drawing.BezierData.X0">
            <summary>
            Gets or sets the x0.
            </summary>
            <value>
            The x0.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Drawing.BezierData.Y0">
            <summary>
            Gets or sets the y0.
            </summary>
            <value>
            The y0.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Drawing.BezierData.X1">
            <summary>
            Gets or sets the x1.
            </summary>
            <value>
            The x1.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Drawing.BezierData.Y1">
            <summary>
            Gets or sets the y1.
            </summary>
            <value>
            The y1.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Drawing.BezierData.X2">
            <summary>
            Gets or sets the x2.
            </summary>
            <value>
            The x2.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Drawing.BezierData.Y2">
            <summary>
            Gets or sets the y2.
            </summary>
            <value>
            The y2.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Drawing.BezierData.IsNextEmpty">
            <summary>
            Gets or sets a value indicating whether the next point is empty.
            </summary>
        </member>
        <member name="T:ChartKit.Kernel.Drawing.HoverArea">
            <summary>
            Defines a hover area.
            </summary>
        </member>
        <member name="M:ChartKit.Kernel.Drawing.HoverArea.DistanceTo(ChartKit.Drawing.LvcPoint)">
            <summary>
            Gets the distance to a given point.
            </summary>
            <param name="point">The point to calculate the distance to.</param>
            <returns>The distance in pixels.</returns>
        </member>
        <member name="M:ChartKit.Kernel.Drawing.HoverArea.IsPointerOver(ChartKit.Drawing.LvcPoint,ChartKit.Measure.TooltipFindingStrategy)">
            <summary>
            Determines whether the pointer is over the area.
            </summary>
            <param name="pointerLocation">The pointer location.</param>
            <param name="strategy">The strategy.</param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Kernel.Drawing.HoverArea.SuggestTooltipPlacement(ChartKit.Kernel.TooltipPlacementContext,ChartKit.Drawing.LvcSize)">
            <summary>
            Suggests the tooltip placement.
            </summary>
            <param name="context">The context.</param>
            <param name="tooltipSize">Size of the tooltip.</param>
        </member>
        <member name="T:ChartKit.Kernel.Drawing.RectangleHoverArea">
            <summary>
            Defines a rectangle hover area.
            </summary>
            <seealso cref="T:ChartKit.Kernel.Drawing.HoverArea" />
        </member>
        <member name="M:ChartKit.Kernel.Drawing.RectangleHoverArea.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.Kernel.Drawing.RectangleHoverArea"/> class.
            </summary>
        </member>
        <member name="M:ChartKit.Kernel.Drawing.RectangleHoverArea.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.Kernel.Drawing.RectangleHoverArea"/> class.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="P:ChartKit.Kernel.Drawing.RectangleHoverArea.X">
            <summary>
            Gets or sets the x location.
            </summary>
            <value>
            The x.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Drawing.RectangleHoverArea.Y">
            <summary>
            Gets or sets the y location.
            </summary>
            <value>
            The y.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Drawing.RectangleHoverArea.Width">
            <summary>
            Gets or sets the width.
            </summary>
            <value>
            The width.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Drawing.RectangleHoverArea.Height">
            <summary>
            Gets or sets the height.
            </summary>
            <value>
            The height.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Drawing.RectangleHoverArea.SuggestedTooltipLocation">
            <summary>
            Gets or sets the suggested tool tip location
            </summary>
        </member>
        <member name="P:ChartKit.Kernel.Drawing.RectangleHoverArea.LessThanPivot">
            <summary>
            Gets or sets a value indicating whether the primary value is less than pivot.
            </summary>
        </member>
        <member name="M:ChartKit.Kernel.Drawing.RectangleHoverArea.SetDimensions(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Sets the area dimensions.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <returns>The current instance.</returns>
        </member>
        <member name="M:ChartKit.Kernel.Drawing.RectangleHoverArea.CenterXToolTip">
            <summary>
            Sets the <see cref="P:ChartKit.Kernel.Drawing.RectangleHoverArea.SuggestedTooltipLocation"/> to the center of the <see cref="T:ChartKit.Kernel.Drawing.RectangleHoverArea"/> in the X axis.
            </summary>
            <returns>The current instance.</returns>
        </member>
        <member name="M:ChartKit.Kernel.Drawing.RectangleHoverArea.StartXToolTip">
            <summary>
            Sets the <see cref="P:ChartKit.Kernel.Drawing.RectangleHoverArea.SuggestedTooltipLocation"/> to the start of the <see cref="T:ChartKit.Kernel.Drawing.RectangleHoverArea"/> in the X axis.
            </summary>
            <returns>The current instance.</returns>
        </member>
        <member name="M:ChartKit.Kernel.Drawing.RectangleHoverArea.EndXToolTip">
            <summary>
            Sets the <see cref="P:ChartKit.Kernel.Drawing.RectangleHoverArea.SuggestedTooltipLocation"/> to the center of the <see cref="T:ChartKit.Kernel.Drawing.RectangleHoverArea"/> in the X axis.
            </summary>
            <returns>The current instance.</returns>
        </member>
        <member name="M:ChartKit.Kernel.Drawing.RectangleHoverArea.CenterYToolTip">
            <summary>
            Sets the <see cref="P:ChartKit.Kernel.Drawing.RectangleHoverArea.SuggestedTooltipLocation"/> to the center of the <see cref="T:ChartKit.Kernel.Drawing.RectangleHoverArea"/> in the Y axis.
            </summary>
            <returns>The current instance.</returns>
        </member>
        <member name="M:ChartKit.Kernel.Drawing.RectangleHoverArea.StartYToolTip">
            <summary>
            Sets the <see cref="P:ChartKit.Kernel.Drawing.RectangleHoverArea.SuggestedTooltipLocation"/> to the start of the <see cref="T:ChartKit.Kernel.Drawing.RectangleHoverArea"/> in the Y axis.
            </summary>
            <returns>The current instance.</returns>
        </member>
        <member name="M:ChartKit.Kernel.Drawing.RectangleHoverArea.EndYToolTip">
            <summary>
            Sets the <see cref="P:ChartKit.Kernel.Drawing.RectangleHoverArea.SuggestedTooltipLocation"/> to the center of the <see cref="T:ChartKit.Kernel.Drawing.RectangleHoverArea"/> in the Y axis.
            </summary>
            <returns>The current instance.</returns>
        </member>
        <member name="M:ChartKit.Kernel.Drawing.RectangleHoverArea.IsLessThanPivot">
            <summary>
            Gets or sets a value indicating whether the primary value is less than pivot.
            </summary>
            <returns>The current instance.</returns>
        </member>
        <member name="M:ChartKit.Kernel.Drawing.RectangleHoverArea.DistanceTo(ChartKit.Drawing.LvcPoint)">
            <inheritdoc cref="M:ChartKit.Kernel.Drawing.HoverArea.DistanceTo(ChartKit.Drawing.LvcPoint)"/>
        </member>
        <member name="M:ChartKit.Kernel.Drawing.RectangleHoverArea.IsPointerOver(ChartKit.Drawing.LvcPoint,ChartKit.Measure.TooltipFindingStrategy)">
            <inheritdoc cref="M:ChartKit.Kernel.Drawing.HoverArea.IsPointerOver(ChartKit.Drawing.LvcPoint,ChartKit.Measure.TooltipFindingStrategy)"/>
        </member>
        <member name="M:ChartKit.Kernel.Drawing.RectangleHoverArea.SuggestTooltipPlacement(ChartKit.Kernel.TooltipPlacementContext,ChartKit.Drawing.LvcSize)">
            <inheritdoc cref="M:ChartKit.Kernel.Drawing.HoverArea.SuggestTooltipPlacement(ChartKit.Kernel.TooltipPlacementContext,ChartKit.Drawing.LvcSize)"/>
        </member>
        <member name="T:ChartKit.Kernel.Drawing.SemicircleHoverArea">
            <summary>
            Defines a semicircle hover area.
            </summary>
            <seealso cref="T:ChartKit.Kernel.Drawing.HoverArea" />
        </member>
        <member name="P:ChartKit.Kernel.Drawing.SemicircleHoverArea.CenterX">
            <summary>
            Gets or sets the center x.
            </summary>
            <value>
            The center x coordinate.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Drawing.SemicircleHoverArea.CenterY">
            <summary>
            Gets or sets the center y.
            </summary>
            <value>
            The center y coordinate.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Drawing.SemicircleHoverArea.StartAngle">
            <summary>
            Gets or sets the start angle in degrees.
            </summary>
        </member>
        <member name="P:ChartKit.Kernel.Drawing.SemicircleHoverArea.EndAngle">
            <summary>
            Gets or sets the and angle in degrees.
            </summary>
        </member>
        <member name="P:ChartKit.Kernel.Drawing.SemicircleHoverArea.InnerRadius">
            <summary>
            Gets or sets the inner radius.
            </summary>
        </member>
        <member name="P:ChartKit.Kernel.Drawing.SemicircleHoverArea.Radius">
            <summary>
            Gets or sets the radius.
            </summary>
        </member>
        <member name="M:ChartKit.Kernel.Drawing.SemicircleHoverArea.SetDimensions(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Sets the area dimensions.
            </summary>
            <param name="centerX">The center x.</param>
            <param name="centerY">The center y.</param>
            <param name="startAngle">The start angle.</param>
            <param name="endAngle">The end angle.</param>
            <param name="innerRadius">The inner radius.</param>
            <param name="radius">The radius.</param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Kernel.Drawing.SemicircleHoverArea.DistanceTo(ChartKit.Drawing.LvcPoint)">
            <inheritdoc cref="M:ChartKit.Kernel.Drawing.HoverArea.DistanceTo(ChartKit.Drawing.LvcPoint)"/>
        </member>
        <member name="M:ChartKit.Kernel.Drawing.SemicircleHoverArea.IsPointerOver(ChartKit.Drawing.LvcPoint,ChartKit.Measure.TooltipFindingStrategy)">
            <inheritdoc cref="M:ChartKit.Kernel.Drawing.HoverArea.IsPointerOver(ChartKit.Drawing.LvcPoint,ChartKit.Measure.TooltipFindingStrategy)"/>
        </member>
        <member name="M:ChartKit.Kernel.Drawing.SemicircleHoverArea.SuggestTooltipPlacement(ChartKit.Kernel.TooltipPlacementContext,ChartKit.Drawing.LvcSize)">
            <inheritdoc cref="M:ChartKit.Kernel.Drawing.HoverArea.SuggestTooltipPlacement(ChartKit.Kernel.TooltipPlacementContext,ChartKit.Drawing.LvcSize)"/>
        </member>
        <member name="T:ChartKit.Kernel.Drawing.Sketch`1">
            <summary>
            Defines the paint context.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
        </member>
        <member name="M:ChartKit.Kernel.Drawing.Sketch`1.#ctor(System.Double,System.Double,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.Kernel.Drawing.Sketch`1"/> class.
            </summary>
            <param name="width">The widht.</param>
            <param name="height">The height.</param>
            <param name="svg">The svg path.</param>
        </member>
        <member name="P:ChartKit.Kernel.Drawing.Sketch`1.Width">
            <summary>
            Gets or sets the width.
            </summary>
            <value>
            The width.
            </value>kjio9
        </member>
        <member name="P:ChartKit.Kernel.Drawing.Sketch`1.Height">
            <summary>
            Gets or sets the height.
            </summary>
            <value>
            The height.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Drawing.Sketch`1.Svg">
            <summary>
            Gets or sets the Svg.
            </summary>/
        </member>
        <member name="P:ChartKit.Kernel.Drawing.Sketch`1.PaintSchedules">
            <summary>
            Gets or sets the paint schedules.
            </summary>
            <value>
            The paint tasks schedule.
            </value>
        </member>
        <member name="T:ChartKit.Kernel.Error">
            <summary>
            Defines an error point.
            </summary>
        </member>
        <member name="M:ChartKit.Kernel.Error.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initalizes a new instance of the <see cref="T:ChartKit.Kernel.Error"/> struct.
            </summary>
            <param name="xi">The left error in the x axis.</param>
            <param name="xj">The right error in the x axis.</param>
            <param name="yi">The top error in the Y axis.</param>
            <param name="yj">The bottom error in the Y axis.</param>
        </member>
        <member name="M:ChartKit.Kernel.Error.#ctor(System.Double,System.Double)">
            <summary>
            Initalizes a new instance of the <see cref="T:ChartKit.Kernel.Error"/> struct.
            </summary>
            <param name="x">The error in x.</param>
            <param name="y">The error in y.</param>
        </member>
        <member name="P:ChartKit.Kernel.Error.Xi">
            <summary>
            Gets the error to the left of the X axis.
            </summary>
        </member>
        <member name="P:ChartKit.Kernel.Error.Xj">
            <summary>
            Gets the error to the right of the X axis.
            </summary>
        </member>
        <member name="P:ChartKit.Kernel.Error.Yi">
            <summary>
            Gets the error to the top of the Y axis.
            </summary>
        </member>
        <member name="P:ChartKit.Kernel.Error.Yj">
            <summary>
            Gets the error to the bottom of Y axis.
            </summary>
        </member>
        <member name="P:ChartKit.Kernel.Error.IsEmpty">
            <summary>
            Gets whether the error is empty.
            </summary>
        </member>
        <member name="P:ChartKit.Kernel.Error.Empty">
            <summary>
            Gets an empty instance of the error class.
            </summary>
        </member>
        <member name="T:ChartKit.Kernel.Events.ChartCommandArgs">
            <summary>
            Command arguments that describe when a chart event occurs.
            </summary>
        </member>
        <member name="M:ChartKit.Kernel.Events.ChartCommandArgs.#ctor(ChartKit.Kernel.Sketches.IChartView)">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.Kernel.Events.PointerCommandArgs"/> class.
            </summary>
            <param name="chart">The chart that fired the event.</param>
        </member>
        <member name="P:ChartKit.Kernel.Events.ChartCommandArgs.Chart">
            <summary> 
            Gets the sender chart.
            </summary>
        </member>
        <member name="T:ChartKit.Kernel.Events.ChartEventHandler`1">
            <summary>
            Defines a method that will handle an event in a chart.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <param name="chart">The chart.</param>
        </member>
        <member name="T:ChartKit.Kernel.Events.ChartPointHandler">
            <summary>
            Defines a method to handle chart point events.
            </summary>
            <param name="chart">The sender chart.</param>
            <param name="point">The found points.</param>
        </member>
        <member name="T:ChartKit.Kernel.Events.ChartPointHandler`3">
            <summary>
            Defines a method to handle chart point events.
            </summary>
            <typeparam name="TModel">The type of the model.</typeparam>
            <typeparam name="TVisual">The type of the visual.</typeparam>
            <typeparam name="TLabel">The type of the label.</typeparam>
            <param name="chart">The sender chart.</param>
            <param name="point">The found points.</param>
        </member>
        <member name="T:ChartKit.Kernel.Events.ChartPointsHandler">
            <summary>
            Defines a method to handle chart point events.
            </summary>
            <param name="chart">The sender chart.</param>
            <param name="points">The found points.</param>
        </member>
        <member name="T:ChartKit.Kernel.Events.ChartPointsHandler`3">
            <summary>
            Defines a method to handle chart point events.
            </summary>
            <typeparam name="TModel">The type of the model.</typeparam>
            <typeparam name="TVisual">The type of the visual.</typeparam>
            <typeparam name="TLabel">The type of the label.</typeparam>
            <param name="chart">The sender chart.</param>
            <param name="points">The found points.</param>
        </member>
        <member name="T:ChartKit.Kernel.Events.PointerCommandArgs">
            <summary>
            Command arguments that describe a pointer event in a LiveChart view.
            </summary>
        </member>
        <member name="M:ChartKit.Kernel.Events.PointerCommandArgs.#ctor(ChartKit.Kernel.Sketches.IChartView,ChartKit.Drawing.LvcPointD,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.Kernel.Events.PointerCommandArgs"/> class.
            </summary>
            <param name="chart">The chart that fired the event.</param>
            <param name="pointerPosition">The pointer position.</param>
            <param name="originalEventArgs">The original event args.</param>
        </member>
        <member name="P:ChartKit.Kernel.Events.PointerCommandArgs.PointerPosition">
            <summary>
            Gets the pointer position relative to the chart.
            </summary>
        </member>
        <member name="P:ChartKit.Kernel.Events.PointerCommandArgs.OriginalEventArgs">
            <summary>
            Gets the framework-specific event arguments.
            </summary>
        </member>
        <member name="T:ChartKit.Kernel.Events.VisualElementEventArgs`1">
            <summary>
            Defines the visual elements event arguments.
            </summary>
        </member>
        <member name="M:ChartKit.Kernel.Events.VisualElementEventArgs`1.#ctor(ChartKit.Chart{`0},ChartKit.VisualElements.VisualElement{`0},ChartKit.Drawing.LvcPoint)">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.Kernel.Events.VisualElementsEventArgs`1"/> class.
            </summary>
            <param name="chart">The chart.</param>
            <param name="pointerLocation">The pointer location.</param>
            <param name="visualElement">The visual elements.</param>
        </member>
        <member name="M:ChartKit.Kernel.Events.VisualElementEventArgs`1.#ctor(ChartKit.Kernel.Sketches.IChart,ChartKit.VisualElements.VisualElement{`0},ChartKit.Drawing.LvcPoint)">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.Kernel.Events.VisualElementsEventArgs`1"/> class.
            </summary>
            <param name="chart">The chart.</param>
            <param name="pointerLocation">The pointer location.</param>
            <param name="visualElement">The visual element.</param>
        </member>
        <member name="P:ChartKit.Kernel.Events.VisualElementEventArgs`1.Chart">
            <summary>
            Gets the chart.
            </summary>
        </member>
        <member name="P:ChartKit.Kernel.Events.VisualElementEventArgs`1.PointerLocation">
            <summary>
            Gets or sets the pointer location.
            </summary>
        </member>
        <member name="P:ChartKit.Kernel.Events.VisualElementEventArgs`1.VisualElement">
            <summary>
            Gets the visual elements found.
            </summary>
        </member>
        <member name="T:ChartKit.Kernel.Events.VisualElementHandler`1">
            <summary>
            Defines a method to handle chart visual elements events.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <param name="visual">The sender visual.</param>
            <param name="visualElementsArgs">The visual elements arguments.</param>
        </member>
        <member name="T:ChartKit.Kernel.Events.VisualElementsEventArgs`1">
            <summary>
            Defines the visual elements event arguments.
            </summary>
        </member>
        <member name="M:ChartKit.Kernel.Events.VisualElementsEventArgs`1.#ctor(ChartKit.Chart{`0},System.Collections.Generic.IEnumerable{ChartKit.VisualElements.VisualElement{`0}},ChartKit.Drawing.LvcPoint)">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.Kernel.Events.VisualElementsEventArgs`1"/> class.
            </summary>
            <param name="chart">The chart.</param>
            <param name="pointerLocation">The pointer location.</param>
            <param name="visualElements">The visual elements.</param>
        </member>
        <member name="M:ChartKit.Kernel.Events.VisualElementsEventArgs`1.#ctor(ChartKit.Kernel.Sketches.IChart,System.Collections.Generic.IEnumerable{ChartKit.VisualElements.VisualElement{`0}},ChartKit.Drawing.LvcPoint)">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.Kernel.Events.VisualElementsEventArgs`1"/> class.
            </summary>
            <param name="chart">The chart.</param>
            <param name="pointerLocation">The pointer location.</param>
            <param name="visualElements">The visual elements.</param>
        </member>
        <member name="P:ChartKit.Kernel.Events.VisualElementsEventArgs`1.Chart">
            <summary>
            Gets the chart.
            </summary>
        </member>
        <member name="P:ChartKit.Kernel.Events.VisualElementsEventArgs`1.PointerLocation">
            <summary>
            Gets or sets the pointer location.
            </summary>
        </member>
        <member name="P:ChartKit.Kernel.Events.VisualElementsEventArgs`1.ClosestToPointerVisualElement">
            <summary>
            Gets the closest visual element to the pointer position.
            </summary>
        </member>
        <member name="P:ChartKit.Kernel.Events.VisualElementsEventArgs`1.VisualElements">
            <summary>
            Gets all the visual elements that were found.
            </summary>
        </member>
        <member name="T:ChartKit.Kernel.Events.VisualElementsHandler`1">
            <summary>
            Defines a method to handle chart visual elements events.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <param name="chart">The sender chart.</param>
            <param name="visualElementsArgs">The visual elements arguments.</param>
        </member>
        <member name="T:ChartKit.Kernel.Extensions">
            <summary>
            LiveCharts kernel extensions.
            </summary>
        </member>
        <member name="M:ChartKit.Kernel.Extensions.GetTooltipLocation``1(System.Collections.Generic.IEnumerable{ChartKit.Kernel.ChartPoint},ChartKit.Drawing.LvcSize,ChartKit.Chart{``0})">
            <summary>
            Calculates the tooltip location.
            </summary>
            <typeparam name="TDrawingContext"></typeparam>
            <param name="foundPoints">The points.</param>
            <param name="tooltipSize">The tooltip size.</param>
            <param name="chart">The chart.</param>
            <returns></returns>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:ChartKit.Kernel.Extensions.GetTick(ChartKit.Kernel.Sketches.ICartesianAxis,ChartKit.Drawing.LvcSize,ChartKit.Measure.Bounds,System.Nullable{ChartKit.Drawing.LvcSize})">
            <summary>
            Gets the tick.
            </summary>
            <param name="axis">The axis.</param>
            <param name="controlSize">Size of the control.</param>
            <param name="bounds">The bounds.</param>
            <param name="maxLabelSize">The max label size.</param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Kernel.Extensions.GetTick``1(ChartKit.Kernel.Sketches.IPolarAxis,ChartKit.PolarChart{``0},ChartKit.Measure.Bounds)">
            <summary>
            Gets the tick.
            </summary>
            <param name="axis">The axis.</param>
            <param name="chart">The chart.</param>
            <param name="bounds">The bounds.</param>
            <returns></returns> 
        </member>
        <member name="M:ChartKit.Kernel.Extensions.Animate(ChartKit.Drawing.IAnimatable,ChartKit.Drawing.Animation,System.String[])">
            <summary>
            Sets the transition of the given <paramref name="properties"/> to the <paramref name="animation"/>.
            </summary>
            <param name="animatable">The animatable object.</param>
            <param name="animation">The animation.</param>
            <param name="properties">
            The properties, if this argument is not set then all the animatable properties in the object will use the given animation.
            </param>
        </member>
        <member name="M:ChartKit.Kernel.Extensions.Animate(ChartKit.Drawing.IAnimatable,System.Func{System.Single,System.Single},System.TimeSpan,System.String[])">
            <summary>
            Sets the transition of the given <paramref name="properties"/> to the specified <paramref name="easingFunction"/> and <paramref name="speed"/>.
            </summary>
            <param name="animatable">The animatable object.</param>
            <param name="easingFunction">The animation's easing function.</param>
            <param name="speed">The animation's speed.</param>
            <param name="properties">
            The properties, if this argument is not set then all the animatable properties in the object will use the given animation.
            </param>
        </member>
        <member name="M:ChartKit.Kernel.Extensions.Animate``1(ChartKit.Drawing.IAnimatable,ChartKit.Chart{``0},System.String[])">
            <summary>
            Sets the transition of the given <paramref name="properties"/> to the animations config in the chart,
            if the properties are not set, then all the animatable properties in the object will use the given animation.
            </summary>
            <param name="animatable">The animatable object.</param>
            <param name="chart">
            The chart, an animation will be built based on the <see cref="P:ChartKit.Chart`1.AnimationsSpeed"/>
            and <see cref="P:ChartKit.Chart`1.EasingFunction"/>.
            </param>
            <param name="properties">
            The properties, if this argument is not set then all the animatable properties in the object will use the given animation.
            </param>
        </member>
        <member name="M:ChartKit.Kernel.Extensions.Animate``1(ChartKit.VisualElements.VisualElement{``0},ChartKit.Drawing.Animation,System.String[])">
            <summary>
            Sets the transition of the given <paramref name="properties"/> to the animations config in the chart
            for all the geometries in a <see cref="T:ChartKit.VisualElements.VisualElement`1"/>.
            </summary>
            <typeparam name="TDrawingContext"></typeparam>
            <param name="visual">The visual.</param>
            <param name="animation">The animation.</param>
            <param name="properties">The properties.</param>
        </member>
        <member name="M:ChartKit.Kernel.Extensions.Animate``1(ChartKit.VisualElements.VisualElement{``0},System.Func{System.Single,System.Single},System.TimeSpan,System.String[])">
            <summary>
            Sets the transition of the given <paramref name="properties"/> to the specified <paramref name="easingFunction"/> and <paramref name="speed"/>
            for all the geometries in a <see cref="T:ChartKit.VisualElements.VisualElement`1"/>.
            </summary>
            <param name="visual">The visual object.</param>
            <param name="easingFunction">The animation's easing function.</param>
            <param name="speed">The animation's speed.</param>
            <param name="properties">
            The properties, if this argument is not set then all the animatable properties in the object will use the given animation.
            </param>
        </member>
        <member name="M:ChartKit.Kernel.Extensions.Animate``1(ChartKit.VisualElements.VisualElement{``0},ChartKit.Chart{``0},System.String[])">
            <summary>
            Sets the transition of the given <paramref name="properties"/> to the animations config in the chart,
            if the properties are not set, then all the animatable properties in the object will use the given animation.
            The transition will be set for all the geometries in a <see cref="T:ChartKit.VisualElements.VisualElement`1"/>.
            </summary>
            <param name="visual">The visual`` object.</param>
            <param name="chart">
            The chart, an animation will be built based on the <see cref="P:ChartKit.Chart`1.AnimationsSpeed"/>
            and <see cref="P:ChartKit.Chart`1.EasingFunction"/>.
            </param>
            <param name="properties">
            The properties, if this argument is not set then all the animatable properties in the object will use the given animation.
            </param>
        </member>
        <member name="M:ChartKit.Kernel.Extensions.IsBarSeries(ChartKit.ISeries)">
            <summary>
            Determines whether is bar series.
            </summary>
            <param name="series">The series.</param>
            <returns>
              <c>true</c> if [is bar series] [the specified series]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:ChartKit.Kernel.Extensions.IsColumnSeries(ChartKit.ISeries)">
            <summary>
            Determines whether is column series.
            </summary>
            <param name="series">The series.</param>
            <returns>
              <c>true</c> if [is column series] [the specified series]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:ChartKit.Kernel.Extensions.IsRowSeries(ChartKit.ISeries)">
            <summary>
            Determines whether is row series.
            </summary>
            <param name="series">The series.</param>
            <returns>
              <c>true</c> if [is row series] [the specified series]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:ChartKit.Kernel.Extensions.IsBoxSeries(ChartKit.ISeries)">
            <summary>
            Determines whether is box series.
            </summary>
            <param name="series">The series.</param>
            <returns>
              <c>true</c> if [is box series] [the specified series]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:ChartKit.Kernel.Extensions.IsStackedSeries(ChartKit.ISeries)">
            <summary>
            Determines whether is stacked series.
            </summary>
            <param name="series">The series.</param>
            <returns>
              <c>true</c> if [is stacked series] [the specified series]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:ChartKit.Kernel.Extensions.IsVerticalSeries(ChartKit.ISeries)">
            <summary>
            Determines whether is vertical series.
            </summary>
            <param name="series">The series.</param>
            <returns>
              <c>true</c> if [is vertical series] [the specified series]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:ChartKit.Kernel.Extensions.IsHorizontalSeries(ChartKit.ISeries)">
            <summary>
            Determines whether is horizontal series.
            </summary>
            <param name="series">The series.</param>
            <returns>
              <c>true</c> if [is horizontal series] [the specified series]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:ChartKit.Kernel.Extensions.IsFinancialSeries(ChartKit.ISeries)">
            <summary>
            Determines whether is a financial series.
            </summary>
            <param name="series"></param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Kernel.Extensions.IsPieSeries(ChartKit.ISeries)">
            <summary>
            Determines whether is a pie series.
            </summary>
            <param name="series">The series.</param>
        </member>
        <member name="M:ChartKit.Kernel.Extensions.HasSvgGeometry(ChartKit.ISeries)">
            <summary>
            Determines whether is bar series.
            </summary>
            <param name="series">The series.</param>
            <returns>
              <c>true</c> if [is bar series] [the specified series]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:ChartKit.Kernel.Extensions.GetTooltipFindingStrategy(System.Collections.Generic.IEnumerable{ChartKit.ISeries})">
            <summary>
            Calculates the tooltips finding strategy based on the series properties.
            </summary>
            <param name="seriesCollection">The series collection.</param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Kernel.Extensions.FindClosestTo``3(System.Collections.Generic.IEnumerable{ChartKit.Kernel.ChartPoint},ChartKit.Drawing.LvcPoint)">
            <summary>
            Finds the closest point to the specified location [in pixels].
            </summary>
            <param name="points">The points to look in to.</param>
            <param name="point">The location in pixels.</param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Kernel.Extensions.FindClosestTo(System.Collections.Generic.IEnumerable{ChartKit.Kernel.ChartPoint},ChartKit.Drawing.LvcPoint)">
            <summary>
            Finds the closest point to the specified location [in pixels].
            </summary>
            <param name="points">The points to look into.</param>
            <param name="point">The location in pixels.</param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Kernel.Extensions.GetNextScaler``1(ChartKit.Kernel.Sketches.ICartesianAxis,ChartKit.CartesianChart{``0})">
            <summary>
            Gets a scaler for the given axis with the measured bounds (the target, the final dimension of the chart).
            </summary>
            <typeparam name="TDrawingContext"></typeparam>
            <param name="axis"></param>
            <param name="chart"></param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Kernel.Extensions.GetActualScaler``1(ChartKit.Kernel.Sketches.ICartesianAxis,ChartKit.CartesianChart{``0})">
            <summary>
            Gets a scaler that is built based on the dimensions of the chart at a given time, the scaler is built based on the
            animations that are happening in the chart at the moment this method is called.
            </summary>
            <typeparam name="TDrawingContext"></typeparam>
            <param name="axis"></param>
            <param name="chart"></param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Kernel.Extensions.SelectFirst``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
            <summary>
            Returns an enumeration with only the first element.
            </summary>
            <typeparam name="T">The source type.</typeparam>
            <typeparam name="T1">The target type.</typeparam>
            <param name="source">The source enumeration.</param>
            <param name="predicate">The mapping predicate.</param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Kernel.Extensions.GetPointForView(System.Collections.Generic.Dictionary{ChartKit.Kernel.Sketches.IChartView,ChartKit.Kernel.ChartPoint},ChartKit.Kernel.Sketches.IChartView)">
            <summary>
            Gets the point for the given view.
            </summary>
            <param name="dictionary">The points dictionary.</param>
            <param name="view">The view.</param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Kernel.Extensions.SplitByNullGaps(System.Collections.Generic.IEnumerable{ChartKit.Kernel.ChartPoint},System.Action{ChartKit.Kernel.ChartPoint})">
            <summary>
            Splits an enumerable of chartpoints by each null gap.
            </summary>
            <param name="points">The points.</param>
            <param name="onDeleteNullPoint">Called when a point was deleted.</param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Kernel.Extensions.AsSplineData(System.Collections.Generic.IEnumerable{ChartKit.Kernel.ChartPoint})">
            <summary>
            Builds a enumerator with the necessary data to build an Spline.
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Kernel.Extensions.CanBeNull(System.Type)">
            <summary>
            Returns <see langword="true" /> when the given type is either a reference type or of type <see cref="T:System.Nullable`1"/>.
            </summary>
        </member>
        <member name="T:ChartKit.Kernel.Helpers.AxisVisualSeprator`1">
            <summary>
            Defines an axis visual separator.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
        </member>
        <member name="P:ChartKit.Kernel.Helpers.AxisVisualSeprator`1.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>
            The value.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Helpers.AxisVisualSeprator`1.Label">
            <summary>
            Gets or sets the text.
            </summary>
            <value>
            The text.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Helpers.AxisVisualSeprator`1.Separator">
            <summary>
            Gets or sets the line.
            </summary>
            <value>
            The line.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Helpers.AxisVisualSeprator`1.Tick">
            <summary>
            Gets or sets the line.
            </summary>
            <value>
            The line.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Helpers.AxisVisualSeprator`1.Subseparators">
            <summary>
            Gets or sets the sub separators.
            </summary>
        </member>
        <member name="P:ChartKit.Kernel.Helpers.AxisVisualSeprator`1.Subticks">
            <summary>
            Gets or sets the sub ticks.
            </summary>
        </member>
        <member name="P:ChartKit.Kernel.Helpers.AxisVisualSeprator`1.Geometry">
            <summary>
            Gets the geometry.
            </summary>
        </member>
        <member name="T:ChartKit.Kernel.Helpers.IVisualSeparator`1">
            <summary>
            Defines a visual separator.
            </summary>
            <typeparam name="TDrawingContext"></typeparam>
        </member>
        <member name="P:ChartKit.Kernel.Helpers.IVisualSeparator`1.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>
            The value.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Helpers.IVisualSeparator`1.Label">
            <summary>
            Gets or sets the text.
            </summary>
            <value>
            The text.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Helpers.IVisualSeparator`1.Geometry">
            <summary>
            Gets the geometry.
            </summary>
            <value>
            The line.
            </value>
        </member>
        <member name="T:ChartKit.Kernel.Helpers.RadialAxisVisualSeparator`1">
            <summary>
            Defines an polar axis visual separator.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
        </member>
        <member name="P:ChartKit.Kernel.Helpers.RadialAxisVisualSeparator`1.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>
            The value.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Helpers.RadialAxisVisualSeparator`1.Label">
            <summary>
            Gets or sets the text.
            </summary>
            <value>
            The text.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Helpers.RadialAxisVisualSeparator`1.Circle">
            <summary>
            Gets or sets the circle.
            </summary>
            <value>
            The line.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Helpers.RadialAxisVisualSeparator`1.Geometry">
            <summary>
            Gets the geometry.
            </summary>
        </member>
        <member name="T:ChartKit.Kernel.IChartElement`1">
            <summary>
            Defines a visual element in a chart.
            </summary>
        </member>
        <member name="P:ChartKit.Kernel.IChartElement`1.Tag">
            <summary>
            Gets or sets the object that contains data about the control.
            </summary>
        </member>
        <member name="M:ChartKit.Kernel.IChartElement`1.Invalidate(ChartKit.Chart{`0})">
            <summary>
            Invalidates the <see cref="T:ChartKit.Kernel.IChartElement`1"/> in the user interface.
            </summary>
            <param name="chart">The chart.</param>
        </member>
        <member name="M:ChartKit.Kernel.IChartElement`1.RemoveOldPaints(ChartKit.Kernel.Sketches.IChartView{`0})">
            <summary>
            Deletes the <see cref="T:ChartKit.Drawing.IPaint`1"/> instances that changed from the user interface.
            </summary>
            <param name="chart">The chart.</param>
        </member>
        <member name="M:ChartKit.Kernel.IChartElement`1.RemoveFromUI(ChartKit.Chart{`0})">
            <summary>
            Removes the element from the UI.
            </summary>
            <param name="chart">The chart.</param>
        </member>
        <member name="T:ChartKit.Kernel.IChartEntity">
            <summary>
            Defines a point with a visual representation in the user interface.
            </summary>
        </member>
        <member name="P:ChartKit.Kernel.IChartEntity.MetaData">
            <summary>
            Gets or sets the meta data, the additional data required by LiveCharts to draw a point.
            </summary>
        </member>
        <member name="P:ChartKit.Kernel.IChartEntity.Coordinate">
            <summary>
            Gets or sets the coordinate, the position of the point in the chart.
            </summary>
        </member>
        <member name="T:ChartKit.Kernel.IGaugeBuilder`1">
            <summary>
            Defines a gauge builder
            </summary>
        </member>
        <member name="P:ChartKit.Kernel.IGaugeBuilder`1.InnerRadius">
            <summary>
            Gets or sets the inner radius.
            </summary>
            <value>
            The inner radius.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.IGaugeBuilder`1.OffsetRadius">
            <summary>
            Gets or sets the offset radius, the separation between each gauge if multiple gauges are nested.
            </summary>
            <value>
            The relative inner radius.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.IGaugeBuilder`1.MaxColumnWidth">
            <summary>
            Gets or sets the maximum width of the radial column.
            </summary>
            <value>
            The maximum width of the radial column.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.IGaugeBuilder`1.CornerRadius">
            <summary>
            Gets or sets the corner radius.
            </summary>
            <value>
            The corner radius.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.IGaugeBuilder`1.RadialAlign">
            <summary>
            Gets or sets the radial align.
            </summary>
            <value>
            The radial align.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.IGaugeBuilder`1.BackgroundInnerRadius">
            <summary>
            Gets or sets the background inner radius.
            </summary>
            <value>
            The background inner radius.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.IGaugeBuilder`1.BackgroundOffsetRadius">
            <summary>
            Gets or sets the background offset radius, the separation between each gauge if multiple gauges are nested.
            </summary>
            <value>
            The background relative inner radius.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.IGaugeBuilder`1.BackgroundMaxRadialColumnWidth">
            <summary>
            Gets or sets the width of the background maximum radial column.
            </summary>
            <value>
            The width of the background maximum radial column.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.IGaugeBuilder`1.BackgroundCornerRadius">
            <summary>
            Gets or sets the background corner radius.
            </summary>
            <value>
            The background corner radius.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.IGaugeBuilder`1.Background">
            <summary>
            Gets or sets the background.
            </summary>
            <value>
            The background.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.IGaugeBuilder`1.LabelsSize">
            <summary>
            Gets or sets the size of the labels.
            </summary>
            <value>
            The size of the labels.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.IGaugeBuilder`1.LabelsPosition">
            <summary>
            Gets or sets the labels position.
            </summary>
            <value>
            The labels position.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.IGaugeBuilder`1.LabelFormatter">
            <summary>
            Gets or sets the label formatter.
            </summary>
            <value>
            The label formatter.
            </value>
        </member>
        <member name="T:ChartKit.Kernel.PaintSchedule`1">
            <summary>
            Defines a schedule to be drawn by an <see cref="T:ChartKit.Drawing.IPaint`1"/> instance.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
        </member>
        <member name="M:ChartKit.Kernel.PaintSchedule`1.#ctor(ChartKit.Drawing.IPaint{`0},System.Collections.Generic.HashSet{ChartKit.Drawing.IDrawable{`0}})">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.Kernel.PaintSchedule`1"/> class.
            </summary>
            <param name="task">The task.</param>
            <param name="geometries">The geometries.</param>
        </member>
        <member name="M:ChartKit.Kernel.PaintSchedule`1.#ctor(ChartKit.Drawing.IPaint{`0},ChartKit.Drawing.IDrawable{`0}[])">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.Kernel.PaintSchedule`1"/> class.
            </summary>
            <param name="task">The task.</param>
            <param name="geometries">The geometries.</param>
        </member>
        <member name="P:ChartKit.Kernel.PaintSchedule`1.PaintTask">
            <summary>
            Gets or sets the paint task.
            </summary>
            <value>
            The drawable task.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.PaintSchedule`1.Geometries">
            <summary>
            Gets or sets the geometries.
            </summary>
            <value>
            The geometries.
            </value>
        </member>
        <member name="T:ChartKit.Kernel.Providers.ChartEngine`1">
            <summary>
            Defines the <see cref="T:ChartKit.Kernel.Providers.ChartEngine`1"/> class.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
        </member>
        <member name="M:ChartKit.Kernel.Providers.ChartEngine`1.GetDefaultDataFactory``1">
            <summary>
            Gets a new instance of the default data factory.
            </summary>
            <typeparam name="TModel">The type of the model.</typeparam>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Kernel.Providers.ChartEngine`1.GetDefaultMapFactory">
            <summary>
            Gets a new instance of the default map factory.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Kernel.Providers.ChartEngine`1.GetDefaultCartesianAxis">
            <summary>
            Gets a new instance of the default Cartesian axis.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Kernel.Providers.ChartEngine`1.GetDefaultPolarAxis">
            <summary>
            Gets a new instance of the default polar axis.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Kernel.Providers.ChartEngine`1.GetSolidColorPaint(ChartKit.Drawing.LvcColor)">
            <summary>
            Gets a new paint of the given color.
            </summary>
            <returns></returns>
        </member>
        <member name="T:ChartKit.Kernel.Providers.DataFactory`2">
            <summary>
            Defines the default data factory.
            </summary>
            <typeparam name="TModel"></typeparam>
            <typeparam name="TDrawingContext"></typeparam>
        </member>
        <member name="P:ChartKit.Kernel.Providers.DataFactory`2.PreviousKnownBounds">
            <summary>
            Gets or sets the previous known bounds.
            </summary>
        </member>
        <member name="M:ChartKit.Kernel.Providers.DataFactory`2.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.Kernel.Providers.DataFactory`2"/> class.
            </summary>
        </member>
        <member name="M:ChartKit.Kernel.Providers.DataFactory`2.Fetch(ChartKit.ISeries{`0},ChartKit.Kernel.Sketches.IChart)">
            <summary>
            Fetches the points for the specified series.
            </summary>
            <param name="series">The series.</param>
            <param name="chart">The chart.</param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Kernel.Providers.DataFactory`2.DisposePoint(ChartKit.Kernel.ChartPoint)">
            <summary>
            Disposes a given point.
            </summary>
            <param name="point">The point.</param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Kernel.Providers.DataFactory`2.Dispose(ChartKit.Kernel.Sketches.IChart)">
            <summary>
            Disposes the data provider from the given chart.
            </summary>
            <param name="chart"></param>
        </member>
        <member name="M:ChartKit.Kernel.Providers.DataFactory`2.GetCartesianBounds(ChartKit.Chart{`1},ChartKit.Kernel.Sketches.IChartSeries{`1},ChartKit.Kernel.Sketches.IPlane,ChartKit.Kernel.Sketches.IPlane)">
            <summary>
            Gets the Cartesian bounds.
            </summary>
            <param name="chart">The chart.</param>
            <param name="series">The series.</param>
            <param name="plane1">The x.</param>
            <param name="plane2">The y.</param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Kernel.Providers.DataFactory`2.GetFinancialBounds(ChartKit.CartesianChart{`1},ChartKit.Kernel.Sketches.IChartSeries{`1},ChartKit.Kernel.Sketches.ICartesianAxis,ChartKit.Kernel.Sketches.ICartesianAxis)">
            <summary>
            Gets the financial bounds.
            </summary>
            <param name="chart">The chart.</param>
            <param name="series">The series.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Kernel.Providers.DataFactory`2.GetPieBounds(ChartKit.PieChart{`1},ChartKit.Kernel.Sketches.IPieSeries{`1})">
            <summary>
            Gets the pie bounds.
            </summary>
            <param name="chart">The chart.</param>
            <param name="series">The series.</param>
            <returns></returns>
            <exception cref="T:System.NullReferenceException">Unexpected null stacker</exception>
        </member>
        <member name="M:ChartKit.Kernel.Providers.DataFactory`2.RestartVisuals">
            <summary>
            Clears the visuals in the cache.
            </summary>
        </member>
        <member name="T:ChartKit.Kernel.SeriesContext`1">
            <summary>
            Defines a series context.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
        </member>
        <member name="M:ChartKit.Kernel.SeriesContext`1.#ctor(System.Collections.Generic.IEnumerable{ChartKit.Kernel.Sketches.IChartSeries{`0}},System.Boolean,ChartKit.Kernel.Sketches.IChart)">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.Kernel.SeriesContext`1"/> class.
            </summary>
            <param name="series">The series.</param>
            <param name="isFirstDraw">Indicates whether is the first time the chart is drawn.</param>
            <param name="chart">The chart</param>
        </member>
        <member name="M:ChartKit.Kernel.SeriesContext`1.GetColumnPostion(ChartKit.Kernel.Sketches.IChartSeries{`0})">
            <summary>
            Gets the column position.
            </summary>
            <param name="series">The series.</param>
        </member>
        <member name="M:ChartKit.Kernel.SeriesContext`1.GetColumnSeriesCount">
            <summary>
            Gets the column series count.
            </summary>
        </member>
        <member name="M:ChartKit.Kernel.SeriesContext`1.GetPieOuterLabelsSpace``1">
            <summary>
            Gets the required space by the labels to the outer side of the pie chart.
            </summary>
        </member>
        <member name="M:ChartKit.Kernel.SeriesContext`1.GetRowPosition(ChartKit.Kernel.Sketches.IChartSeries{`0})">
            <summary>
            Gets the row position.
            </summary>
            <param name="series">The series.</param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Kernel.SeriesContext`1.GetRowSeriesCount">
            <summary>
            Gets the row series count.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Kernel.SeriesContext`1.GetBoxPosition(ChartKit.Kernel.Sketches.IChartSeries{`0})">
            <summary>
            Gets the box position.
            </summary>
            <param name="series">The series.</param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Kernel.SeriesContext`1.GetBoxSeriesCount">
            <summary>
            Gets the box series count.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Kernel.SeriesContext`1.GetStackedColumnPostion(ChartKit.Kernel.Sketches.IChartSeries{`0})">
            <summary>
            Gets the stacked column position.
            </summary>
            <param name="series">The series.</param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Kernel.SeriesContext`1.GetStackedColumnSeriesCount">
            <summary>
            Gets the stacked column series count.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Kernel.SeriesContext`1.GetStackedRowPostion(ChartKit.Kernel.Sketches.IChartSeries{`0})">
            <summary>
            Gets the stacked row position.
            </summary>
            <param name="series">The series.</param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Kernel.SeriesContext`1.GetStackedRowSeriesCount">
            <summary>
            Gets the stacked row series count.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Kernel.SeriesContext`1.GetStackPosition(ChartKit.Kernel.Sketches.IChartSeries{`0},System.Int32)">
            <summary>
            Gets the stack position.
            </summary>
            <param name="series">The series.</param>
            <param name="stackGroup">The stack group.</param>
            <returns></returns>
        </member>
        <member name="P:ChartKit.Kernel.SeriesContext`1.IsFirstDraw">
            <summary>
            Gets or sets a value indicating whether is first draw of the chart.
            </summary>
        </member>
        <member name="T:ChartKit.Kernel.SeriesProperties">
            <summary>
            Defines the series properties enumeration.
            </summary>
        </member>
        <member name="F:ChartKit.Kernel.SeriesProperties.AllSeries">
            <summary>
            includes all series
            </summary>
        </member>
        <member name="F:ChartKit.Kernel.SeriesProperties.CartesianSeries">
            <summary>
            The Cartesian series
            </summary>
        </member>
        <member name="F:ChartKit.Kernel.SeriesProperties.Bar">
            <summary>
            The bar series
            </summary>
            
        </member>
        <member name="F:ChartKit.Kernel.SeriesProperties.Line">
            <summary>
            The line series
            </summary>
        </member>
        <member name="F:ChartKit.Kernel.SeriesProperties.StepLine">
            <summary>
            The stepline series
            </summary>
        </member>
        <member name="F:ChartKit.Kernel.SeriesProperties.Scatter">
            <summary>
            The scatter series
            </summary>
        </member>
        <member name="F:ChartKit.Kernel.SeriesProperties.Heat">
            <summary>
            The heat series.
            </summary>
        </member>
        <member name="F:ChartKit.Kernel.SeriesProperties.Financial">
            <summary>
            The financial series.
            </summary>
        </member>
        <member name="F:ChartKit.Kernel.SeriesProperties.PieSeries">
            <summary>
            The pie series.
            </summary>
        </member>
        <member name="F:ChartKit.Kernel.SeriesProperties.Stacked">
            <summary>
            The stacked series
            </summary>
        </member>
        <member name="F:ChartKit.Kernel.SeriesProperties.PrimaryAxisVerticalOrientation">
            <summary>
            The vertical orientation
            </summary>
        </member>
        <member name="F:ChartKit.Kernel.SeriesProperties.PrimaryAxisHorizontalOrientation">
            <summary>
            The horizontal orientation
            </summary>
        </member>
        <member name="F:ChartKit.Kernel.SeriesProperties.Gauge">
            <summary>
            The gauge.
            </summary>
        </member>
        <member name="F:ChartKit.Kernel.SeriesProperties.GaugeFill">
            <summary>
            The gauge fill.
            </summary>
        </member>
        <member name="F:ChartKit.Kernel.SeriesProperties.Sketch">
            <summary>
            The sketch
            </summary>
        </member>
        <member name="F:ChartKit.Kernel.SeriesProperties.Solid">
            <summary>
            The solid
            </summary>
        </member>
        <member name="F:ChartKit.Kernel.SeriesProperties.PrefersXStrategyTooltips">
            <summary>
            The prefers x tool tips
            </summary>
        </member>
        <member name="F:ChartKit.Kernel.SeriesProperties.PrefersYStrategyTooltips">
            <summary>
            The prefers y tool tips
            </summary>
        </member>
        <member name="F:ChartKit.Kernel.SeriesProperties.PrefersXYStrategyTooltips">
            <summary>
            The prefers xy tool tips
            </summary>
        </member>
        <member name="F:ChartKit.Kernel.SeriesProperties.Polar">
            <summary>
            The polar series
            </summary>
        </member>
        <member name="F:ChartKit.Kernel.SeriesProperties.PolarLine">
            <summary>
            The polar line series
            </summary>
        </member>
        <member name="F:ChartKit.Kernel.SeriesProperties.IsSVGPath">
            <summary>
            Sepcifies that the series visual comes from a svg path.
            </summary>
        </member>
        <member name="F:ChartKit.Kernel.SeriesProperties.BoxSeries">
            <summary>
            The box series.
            </summary>
        </member>
        <member name="T:ChartKit.Kernel.SeriesStyleRule`2">
            <summary>
            Defines a series style rule.
            </summary>
            <typeparam name="TVisual">The type of the visual.</typeparam>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
        </member>
        <member name="P:ChartKit.Kernel.SeriesStyleRule`2.SeriesProperties">
            <summary>
            Gets or sets the series properties.
            </summary>
            <value>
            The series properties.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.SeriesStyleRule`2.Rule">
            <summary>
            Gets or sets the rule.
            </summary>
            <value>
            The rule.
            </value>
        </member>
        <member name="T:ChartKit.Kernel.Sketches.IBarSeries`1">
            <summary>
            Defines a bar series point.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <seealso cref="T:ChartKit.Kernel.Sketches.IChartSeries`1" />
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IBarSeries`1.Rx">
            <summary>
            Gets or sets the rx, the radius used in the x axis to round the corners of each column in pixels.
            </summary>
            <value>
            The rx.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IBarSeries`1.Ry">
            <summary>
            Gets or sets the ry, the radius used in the y axis to round the corners of each column in pixels.
            </summary>
            <value>
            The ry.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IBarSeries`1.GroupPadding">
            <summary>
            Gets or sets the padding for each group of bars that share the same secondary coordinate.
            </summary>
            <value>
            The bar group padding.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IBarSeries`1.Padding">
            <summary>
            Gets or sets the padding for each bar in the series.
            </summary>
            <value>
            The bar group padding.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IBarSeries`1.MaxBarWidth">
            <summary>
            Gets or sets the maximum width of the bar.
            </summary>
            <value>
            The maximum width of the bar.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IBarSeries`1.IgnoresBarPosition">
            <summary>
            Gets or sets a value indicating whether the bar position respects the other bars that share 
            the same <see cref="P:ChartKit.Kernel.ChartPoint.SecondaryValue"/>.
            </summary>
        </member>
        <member name="T:ChartKit.Kernel.Sketches.IBoxSeries`1">
            <summary>
            Defines an error series series.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <seealso cref="T:ChartKit.Kernel.Sketches.IChartSeries`1" />
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IBoxSeries`1.MaxBarWidth">
            <summary>
            Gets or sets the maximum width of the bar.
            </summary>
            <value>
            The maximum width of the bar.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IBoxSeries`1.Padding">
            <summary>
            Gets or sets the padding for each box in the series.
            </summary>
            <value>
            The bar group padding.
            </value>
        </member>
        <member name="T:ChartKit.Kernel.Sketches.ICartesianAxis">
            <summary>
            Defines an Axis in a Cartesian chart.
            </summary>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.ICartesianAxis.Orientation">
            <summary>
            Gets the orientation.
            </summary>
            <value>
            The orientation.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.ICartesianAxis.Padding">
            <summary>
            Gets or sets the padding around the tick labels along the axis.
            </summary>
            <value>
            The padding in pixels.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.ICartesianAxis.Xo">
            <summary>
            Gets or sets the xo, a reference used internally to calculate the axis position.
            </summary>
            <value>
            The xo.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.ICartesianAxis.Yo">
            <summary>
            Gets or sets the yo, a reference used internally to calculate the axis position.
            </summary>
            <value>
            The yo.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.ICartesianAxis.Size">
            <summary>
            Gets or sets the size of the axis, this value is used internally to calculate the axis position.
            </summary>
            <value>
            The length.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.ICartesianAxis.MinZoomDelta">
            <summary>
            Gets or sets the min zoom delta, the minimum difference between the max and min visible limits of the axis.
            default is null and null means that the library will calculate this value based on the current data.
            </summary>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.ICartesianAxis.TicksAtCenter">
            <summary>
            Gets or sets a value indicating whether the ticks are centered to the <see cref="P:ChartKit.Kernel.Sketches.IPlane.UnitWidth"/>, default is true.
            </summary>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.ICartesianAxis.SeparatorsAtCenter">
            <summary>
            Gets or sets a value indicating whether the separators are centered to the <see cref="P:ChartKit.Kernel.Sketches.IPlane.UnitWidth"/>, default is true.
            </summary>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.ICartesianAxis.LabelsDesiredSize">
            <summary>
            Gets or sets the reserved area for the labels.
            </summary>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.ICartesianAxis.NameDesiredSize">
            <summary>
            Gets or sets the reserved area for the name.
            </summary>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.ICartesianAxis.InLineNamePlacement">
            <summary>
            Places the title in the same direction as the axis, default is false.
            </summary>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.ICartesianAxis.LabelsAlignment">
            <summary>
            Gets or sets the labels alignment, default is null and means that the library will set it based on the
            <see cref="P:ChartKit.Kernel.Sketches.ICartesianAxis.Orientation"/> and <see cref="P:ChartKit.Kernel.Sketches.ICartesianAxis.Position"/> properties.
            </summary>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.ICartesianAxis.Position">
            <summary>
            Gets or sets the axis position.
            </summary>
            <value>
            The position.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.ICartesianAxis.SharedWith">
            <summary>
            Gets or sets the shared axes collection, useful to share the zooming an panning between several charts.
            </summary>
        </member>
        <member name="M:ChartKit.Kernel.Sketches.ICartesianAxis.Initialize(ChartKit.Measure.AxisOrientation)">
            <summary>
            Initializes the axis for the specified orientation.
            </summary>
            <param name="orientation">The orientation.</param>
        </member>
        <member name="E:ChartKit.Kernel.Sketches.ICartesianAxis.Initialized">
            <summary>
            Occurs when the axis is initialized.
            </summary>
        </member>
        <member name="M:ChartKit.Kernel.Sketches.ICartesianAxis.GetLimits">
            <summary>
            Gets the axis limits considering its own and the <see cref="P:ChartKit.Kernel.Sketches.ICartesianAxis.SharedWith"/> axes.
            </summary>
            <returns>The limits.</returns>
        </member>
        <member name="M:ChartKit.Kernel.Sketches.ICartesianAxis.SetLimits(System.Double,System.Double)">
            <summary>
            Sets the axis limits (own and shared).
            </summary>
            <param name="min">The min limit.</param>
            <param name="max">The max limit.</param>
        </member>
        <member name="T:ChartKit.Kernel.Sketches.ICartesianAxis`1">
            <summary>
            Defines an Axis in a Cartesian chart.
            </summary>
            <typeparam name="TDrawingContext"></typeparam>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.ICartesianAxis`1.SubseparatorsPaint">
            <summary>
            Gets or sets the sub-separators paint.
            </summary>
            <value>
            The separators paint.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.ICartesianAxis`1.SubseparatorsCount">
            <summary>
            Gets or sets the number of subseparators to draw.
            </summary>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.ICartesianAxis`1.DrawTicksPath">
            <summary>
            Gets or sets whether the ticks path should be drawn.
            </summary>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.ICartesianAxis`1.TicksPaint">
            <summary>
            Gets or sets the separators paint.
            </summary>
            <value>
            The separators paint.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.ICartesianAxis`1.SubticksPaint">
            <summary>
            Gets or sets the separators paint.
            </summary>
            <value>
            The separators paint.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.ICartesianAxis`1.ZeroPaint">
            <summary>
            Gets or sets the zero paint.
            </summary>
            <value>
            The separators paint.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.ICartesianAxis`1.CrosshairPaint">
            <summary>
            Gets or sets the crosshair paint.
            </summary>
            <value>
            The separators paint.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.ICartesianAxis`1.CrosshairLabelsPaint">
            <summary>
            Gets or sets the crosshair labels paint.
            </summary>
            <value>
            The separators paint.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.ICartesianAxis`1.CrosshairLabelsBackground">
            <summary>
            Gets or sets the crosshair background.
            </summary>
            <value>
            The separators paint.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.ICartesianAxis`1.CrosshairPadding">
            <summary>
            Gets or sets the crosshair labels padding.
            </summary>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.ICartesianAxis`1.CrosshairSnapEnabled">
            <summary>
            Gets or sets whether the crosshair snaps to nearest series.
            </summary>
        </member>
        <member name="M:ChartKit.Kernel.Sketches.ICartesianAxis`1.InvalidateCrosshair(ChartKit.Chart{`0},ChartKit.Drawing.LvcPoint)">
            <summary>
            Invalidates the crosshair visual.
            </summary>
            <param name="chart">The chart.</param>
            <param name="pointerPosition">The pointer position</param>
        </member>
        <member name="T:ChartKit.Kernel.Sketches.ICartesianChartView`1">
            <summary>
            Defines a Cartesian chart view, this view is able to host one or many series in a Cartesian coordinate system.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <seealso cref="T:ChartKit.Kernel.Sketches.IChartView`1" />
        </member>
        <member name="P:ChartKit.Kernel.Sketches.ICartesianChartView`1.Core">
            <summary>
            Gets the core.
            </summary>
            <value>
            The core.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.ICartesianChartView`1.XAxes">
            <summary>
            Gets or sets the x axes.
            </summary>
            <value>
            The x axes.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.ICartesianChartView`1.YAxes">
            <summary>
            Gets or sets the y axes.
            </summary>
            <value>
            The y axes.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.ICartesianChartView`1.Sections">
            <summary>
            Gets or sets the sections.
            </summary>
            <value>
            The sections.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.ICartesianChartView`1.Series">
            <summary>
            Gets or sets the series to plot in the user interface.
            </summary>
            <value>
            The series.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.ICartesianChartView`1.DrawMarginFrame">
            <summary>
            Gets or sets the draw margin frame.
            </summary>
            <value>
            The draw margin frame.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.ICartesianChartView`1.ZoomMode">
            <summary>
            Gets or sets the zoom mode.
            </summary>
            <value>
            The zoom mode.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.ICartesianChartView`1.TooltipFindingStrategy">
            <summary>
            Gets or sets the tool tip finding strategy.
            </summary>
            <value>
            The tool tip finding strategy.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.ICartesianChartView`1.ZoomingSpeed">
            <summary>
            Gets or sets the zooming speed from 0 to 1, where 0 is the slowest and 1 the fastest.
            </summary>
            <value>
            The zooming speed.
            </value>
        </member>
        <member name="M:ChartKit.Kernel.Sketches.ICartesianChartView`1.ScaleUIPoint(ChartKit.Drawing.LvcPoint,System.Int32,System.Int32)">
            <summary>
            Scales a UI point to the chart values scale.
            </summary>
            <param name="point">The point.</param>
            <param name="xAxisIndex">Index of the x axis.</param>
            <param name="yAxisIndex">Index of the y axis.</param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Kernel.Sketches.ICartesianChartView`1.ScalePixelsToData(ChartKit.Drawing.LvcPointD,System.Int32,System.Int32)">
            <summary>
            Scales a point in pixels to the chart data scale.
            </summary>
            <param name="point">The point.</param>
            <param name="xAxisIndex">Index of the x axis.</param>
            <param name="yAxisIndex">Index of the y axis.</param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Kernel.Sketches.ICartesianChartView`1.ScaleDataToPixels(ChartKit.Drawing.LvcPointD,System.Int32,System.Int32)">
            <summary>
            Scales a point in the chart data scale to pixels.
            </summary>
            <param name="point">The point.</param>
            <param name="xAxisIndex">Index of the x axis.</param>
            <param name="yAxisIndex">Index of the y axis.</param>
            <returns></returns>
        </member>
        <member name="T:ChartKit.Kernel.Sketches.ICartesianSeries`1">
            <summary>
            Defines a Cartesian series.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <seealso cref="T:ChartKit.Kernel.Sketches.IChartSeries`1" />
        </member>
        <member name="P:ChartKit.Kernel.Sketches.ICartesianSeries`1.ScalesXAt">
            <summary>
            Gets or sets the axis index where the series is scaled in the X plane, the index must exist 
            in the <see cref="P:ChartKit.Kernel.Sketches.ICartesianChartView`1.XAxes"/> collection.
            </summary>
            <value>
            The index of the axis.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.ICartesianSeries`1.ScalesYAt">
            <summary>
            Gets or sets the axis index where the series is scaled in the Y plane, the index must exist 
            in the <see cref="P:ChartKit.Kernel.Sketches.ICartesianChartView`1.YAxes"/> collection.
            </summary>
            <value>
            The index of the axis.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.ICartesianSeries`1.DataLabelsPosition">
            <summary>
            Gets or sets the data labels position.
            </summary>
            <value>
            The data labels position.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.ICartesianSeries`1.DataLabelsTranslate">
            <summary>
            Gets or sets the data labels translate transform, the property is of type <see cref="T:ChartKit.Drawing.LvcPoint"/>,
            where the <see cref="P:ChartKit.Drawing.LvcPoint.X"/> property is in normalized units (from 0 to 1), where 1 is the width of the label and
            the <see cref="P:ChartKit.Drawing.LvcPoint.Y"/> property is also in normalized units (from 0 to 1), where 1 is the height of the label.
            </summary>
            <value>
            The data labels trasnlate.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.ICartesianSeries`1.ClippingMode">
            <summary>
            Gets or sets the clipping mode, clipping restricts the series and labels for being drawn outside of the chart area (DrawMargin),
            default is <see cref="F:ChartKit.Measure.ClipMode.XY"/>, and means that anything outside the chart bounds will be ignored.
            </summary>
        </member>
        <member name="M:ChartKit.Kernel.Sketches.ICartesianSeries`1.GetBounds(ChartKit.CartesianChart{`0},ChartKit.Kernel.Sketches.ICartesianAxis,ChartKit.Kernel.Sketches.ICartesianAxis)">
            <summary>
            Gets the series bounds.
            </summary>
            <param name="chart">The chart.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns>the series bounds</returns>
        </member>
        <member name="T:ChartKit.Kernel.Sketches.IChart">
            <summary>
            Defines a chart.
            </summary>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IChart.MeasureWork">
            <summary>
            Gets or sets the measure work.
            </summary>
            <value>
            The measure work.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IChart.View">
            <summary>
            Gets the chart view.
            </summary>
            <value>
            The view.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IChart.Canvas">
            <summary>
            Gets the canvas.
            </summary>
            <value>
            The canvas.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IChart.LegendPosition">
            <summary>
            Gets the legend position.
            </summary>
            <value>
            The legend position.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IChart.TooltipPosition">
            <summary>
            Gets the toolTip position.
            </summary>
            <value>
            The toolTip position.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IChart.TooltipFindingStrategy">
            <summary>
            Gets the toolTip finding strategy.
            </summary>
            <value>
            The toolTip finding strategy.
            </value>
        </member>
        <member name="M:ChartKit.Kernel.Sketches.IChart.Update(ChartKit.Kernel.ChartUpdateParams)">
            <summary>
            Updates the chart in the user interface.
            </summary>
        </member>
        <member name="T:ChartKit.Kernel.Sketches.IChartLegend`1">
            <summary>
            Defines a chart legend.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
        </member>
        <member name="M:ChartKit.Kernel.Sketches.IChartLegend`1.Draw(ChartKit.Chart{`0})">
            <summary>
            Draws the legend for the specified chart.
            </summary>
            <param name="chart">The chart.</param>
        </member>
        <member name="M:ChartKit.Kernel.Sketches.IChartLegend`1.Measure(ChartKit.Chart{`0})">
            <summary>
            Measures the control.
            </summary>
            <param name="chart">The chart that holds the control.</param>
        </member>
        <member name="T:ChartKit.Kernel.Sketches.IChartSeries`1">
            <summary>
            Defines a series a chart series that has a visual representation in the user interface.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <seealso cref="T:ChartKit.ISeries" />
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IChartSeries`1.DataLabelsPaint">
            <summary>
            Gets or sets the data labels paint.
            </summary>
            <value>
            The data labels paint.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IChartSeries`1.DataLabelsSize">
            <summary>
            Gets or sets the size of the data labels.
            </summary>
            <value>
            The size of the data labels.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IChartSeries`1.DataLabelsRotation">
            <summary>
            Gets or sets the data labels rotation in degrees.
            </summary>
            <value>
            The rotation of the data labels in degrees.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IChartSeries`1.DataLabelsPadding">
            <summary>
            Gets or sets the data labels padding.
            </summary>
            <value>
            The data labels padding.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IChartSeries`1.DataLabelsMaxWidth">
            <summary>
            Gets or sets the max width of the data labels.
            </summary>
            <value>
            The max with of the data labels.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IChartSeries`1.CanvasSchedule">
            <summary>
            Gets the paint schedule, normally handled internally to display tool tips and legends.
            </summary>
            <value>
            The default paint context.
            </value>
        </member>
        <member name="M:ChartKit.Kernel.Sketches.IChartSeries`1.GetStackGroup">
            <summary>
            Gets the stack group, normally used internally to handled the stacked series.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Kernel.Sketches.IChartSeries`1.GetMiniaturesSketch">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Kernel.Sketches.IChartSeries`1.OnDataPointerDown(ChartKit.Kernel.Sketches.IChartView,System.Collections.Generic.IEnumerable{ChartKit.Kernel.ChartPoint},ChartKit.Drawing.LvcPoint)">
            <summary>
            Called when the pointer goes down on a data point or points.
            </summary>
            <param name="chart">The chart.</param>
            <param name="points">The found points.</param>
            <param name="pointerLocation">The pointer location.</param>
        </member>
        <member name="T:ChartKit.Kernel.Sketches.IChartTooltip`1">
            <summary>
            Defines a tool tip.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
        </member>
        <member name="M:ChartKit.Kernel.Sketches.IChartTooltip`1.Show(System.Collections.Generic.IEnumerable{ChartKit.Kernel.ChartPoint},ChartKit.Chart{`0})">
            <summary>
            Shows the tool tip in the specified chart.
            </summary>
            <param name="foundPoints">The found points.</param>
            <param name="chart">The chart.</param>
        </member>
        <member name="M:ChartKit.Kernel.Sketches.IChartTooltip`1.Hide(ChartKit.Chart{`0})">
            <summary>
            Hides this tool tip instance.
            </summary>
            <param name="chart">The chart.</param>
        </member>
        <member name="T:ChartKit.Kernel.Sketches.IChartView">
            <summary>
            Defines a chart view
            </summary>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IChartView.CoreChart">
            <summary>
            Gets the core.
            </summary>
            <value>
            The core.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IChartView.DesignerMode">
            <summary>
            Gets whether the control is in designer mode.
            </summary>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IChartView.BackColor">
            <summary>
            Sets the back color of the control.
            </summary>
            <value>
            The color of the back.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IChartView.ControlSize">
            <summary>
            Gets the size of the control.
            </summary>
            <value>
            The size of the control.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IChartView.DrawMargin">
            <summary>
            Gets or sets the draw margin, if this property is null, the library will calculate a margin, this margin is the distance 
            between the view bounds and the drawable area.
            </summary>
            <value>
            The draw margin.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IChartView.AnimationsSpeed">
            <summary>
            Gets or sets the animations speed.
            </summary>
            <value>
            The animations speed.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IChartView.EasingFunction">
            <summary>
            Gets or sets the easing function, the library already provides many easing functions in the 
            ChartKit.EasingFunction static class.
            </summary>
            <value>
            The easing function.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IChartView.UpdaterThrottler">
            <summary>
            Gets or sets the updater throttler, this property controls the interval where the user interface updates.
            </summary>
            <value>
            The updater throttler.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IChartView.LegendPosition">
            <summary>
            Gets or sets the legend position.
            </summary>
            <value>
            The legend position.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IChartView.TooltipPosition">
            <summary>
            Gets or sets the tooltip position.
            </summary>
            <value>
            The tooltip position.
            </value>
        </member>
        <member name="E:ChartKit.Kernel.Sketches.IChartView.DataPointerDown">
            <summary>
            Occurs when the pointer goes down over a chart point(s).
            </summary>
        </member>
        <member name="E:ChartKit.Kernel.Sketches.IChartView.ChartPointPointerDown">
            <summary>
            Occurs when the pointer goes down over a chart point, if there are multiple points, the closest one will be selected.
            </summary>
        </member>
        <member name="M:ChartKit.Kernel.Sketches.IChartView.OnDataPointerDown(System.Collections.Generic.IEnumerable{ChartKit.Kernel.ChartPoint},ChartKit.Drawing.LvcPoint)">
            <summary>
            Called when the pointer goes down on a data point or points.
            </summary>
            <param name="points">The found points.</param>
            <param name="pointer">The pointer location.</param>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IChartView.SyncContext">
            <summary>
            Gets or sets the Synchronization Context, use this property to
            use an external object to handle multi threading synchronization.
            </summary>
        </member>
        <member name="M:ChartKit.Kernel.Sketches.IChartView.InvokeOnUIThread(System.Action)">
            <summary>
            Invokes an action in the UI thread.
            </summary>
            <param name="action"></param>
        </member>
        <member name="M:ChartKit.Kernel.Sketches.IChartView.Invalidate">
            <summary>
            Invalidates the control.
            </summary>
        </member>
        <member name="T:ChartKit.Kernel.Sketches.IChartView`1">
            <summary>
            Defines a chart view.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IChartView`1.LegendTextPaint">
            <summary>
            Gets or sets the legend default text paint, when null the library will use the default text paint.
            </summary>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IChartView`1.LegendBackgroundPaint">
            <summary>
            Gets or sets the legend background paint, when null the library will use the default background paint.
            </summary>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IChartView`1.LegendTextSize">
            <summary>
            Gets or sets the legend text size, when null the library will use the default text size.
            </summary>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IChartView`1.TooltipTextPaint">
            <summary>
            Gets or sets the tooltip default text paint, when null the library will use the default text paint.
            </summary>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IChartView`1.TooltipBackgroundPaint">
            <summary>
            Gets or sets the tooltip background paint, when null the library will use the default background paint.
            </summary>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IChartView`1.TooltipTextSize">
            <summary>
            Gets or sets the tooltip text size, when null the library will use the default text size.
            </summary>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IChartView`1.Title">
            <summary>
            Gets or sets the chart title.
            </summary>
        </member>
        <member name="E:ChartKit.Kernel.Sketches.IChartView`1.Measuring">
            <summary>
            Occurs before the chart is measured, this is the first step before the chart updates.
            </summary>
        </member>
        <member name="E:ChartKit.Kernel.Sketches.IChartView`1.UpdateStarted">
            <summary>
            Occurs when the chart started an update, just when the drawing loop started.
            </summary>
        </member>
        <member name="E:ChartKit.Kernel.Sketches.IChartView`1.UpdateFinished">
            <summary>
            Occurs when a chart update finished, just when the drawing loop finished.
            </summary>
        </member>
        <member name="E:ChartKit.Kernel.Sketches.IChartView`1.VisualElementsPointerDown">
            <summary>
            Occurs when the pointer goes down over a visual element.
            </summary>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IChartView`1.AutoUpdateEnabled">
            <summary>
            Gets or sets a value indicating whether the automatic updates are enabled.
            </summary>
            <value>
              <c>true</c> if automatic update are enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IChartView`1.CoreCanvas">
            <summary>
            Gets the core canvas.
            </summary>
            <value>
            The core canvas.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IChartView`1.Legend">
            <summary>
            Gets or sets the legend.
            </summary>
            <value>
            The legend.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IChartView`1.Tooltip">
            <summary>
            Gets or sets the tooltip.
            </summary>
            <value>
            The tooltip.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IChartView`1.VisualElements">
            <summary>
            Gets or sets the visual elements.
            </summary>
        </member>
        <member name="M:ChartKit.Kernel.Sketches.IChartView`1.OnVisualElementPointerDown(System.Collections.Generic.IEnumerable{ChartKit.VisualElements.VisualElement{`0}},ChartKit.Drawing.LvcPoint)">
            <summary>
            Called when the pointer goes down on a visual element(s).
            </summary>
            <param name="visualElements">The visual elements.</param>
            <param name="pointer">The pointer location.</param>
        </member>
        <member name="M:ChartKit.Kernel.Sketches.IChartView`1.GetPointsAt(ChartKit.Drawing.LvcPoint,ChartKit.Measure.TooltipFindingStrategy)">
            <summary>
            Gets all the <see cref="T:ChartKit.Kernel.ChartPoint"/> that contain the given point.
            </summary>
            <param name="point">The given point.</param>
            <param name="strategy">The finding strategy, default is <see cref="F:ChartKit.Measure.TooltipFindingStrategy.Automatic"/>.</param>
            <returns>An enumerable of <see cref="T:ChartKit.Kernel.ChartPoint"/>.</returns>
        </member>
        <member name="M:ChartKit.Kernel.Sketches.IChartView`1.GetVisualsAt(ChartKit.Drawing.LvcPoint)">
            <summary>
            Gets all the <see cref="T:ChartKit.VisualElements.VisualElement`1"/> that contain the given point.
            </summary>
            <param name="point">The given point.</param>
            <returns>An enumerable of <see cref="T:ChartKit.VisualElements.VisualElement`1"/>.</returns>
        </member>
        <member name="T:ChartKit.Kernel.Sketches.IErrorSeries`1">
            <summary>
            Defines a seeries that can draw error bars.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context</typeparam>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IErrorSeries`1.ErrorPaint">
            <summary>
            Gets or sets the error paint.
            </summary>
            <value>
            The shapes fill.
            </value>
        </member>
        <member name="T:ChartKit.Kernel.Sketches.IFinancialSeries`1">
            <summary>
            Defines a financial series.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <seealso cref="T:ChartKit.Kernel.Sketches.IChartSeries`1" />
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IFinancialSeries`1.MaxBarWidth">
            <summary>
            Gets or sets the maximum width of the bar.
            </summary>
            <value>
            The maximum width of the bar.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IFinancialSeries`1.UpStroke">
            <summary>
            Gets or sets the up stroke, the stroke when the trend goes up.
            </summary>
            <value>
            The stroke.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IFinancialSeries`1.DownStroke">
            <summary>
            Gets or sets the up stroke, the stroke when the trend goes down.
            </summary>
            <value>
            The stroke.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IFinancialSeries`1.UpFill">
            <summary>
            Gets or sets the up fill, the fill when the trend goes up.
            </summary>
            <value>
            The fill.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IFinancialSeries`1.DownFill">
            <summary>
            Gets or sets the up fill, the fill when the trend goes down.
            </summary>
            <value>
            The fill.
            </value>
        </member>
        <member name="T:ChartKit.Kernel.Sketches.IHeatSeries`1">
            <summary>
            Defines a heat series plot.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <seealso cref="T:ChartKit.Kernel.Sketches.IChartSeries`1" />
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IHeatSeries`1.HeatMap">
            <summary>
            Gets or sets the heat map.
            </summary>
            <value>
            The heat map.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IHeatSeries`1.ColorStops">
            <summary>
            Gets or sets the color stops.
            </summary>
            <value>
            The color stops.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IHeatSeries`1.PointPadding">
            <summary>
            Gets or sets the padding for each point.
            </summary>
        </member>
        <member name="T:ChartKit.Kernel.Sketches.ILineSeries`1">
            <summary>
            Defines a line series plot.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <seealso cref="T:ChartKit.Kernel.Sketches.IChartSeries`1" />
        </member>
        <member name="P:ChartKit.Kernel.Sketches.ILineSeries`1.GeometrySize">
            <summary>
            Gets or sets the size of the geometry.
            </summary>
            <value>
            The size of the geometry.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.ILineSeries`1.LineSmoothness">
            <summary>
            Gets or sets the line smoothness, where 0 is a straight line, and 1 the most curved line, default is 0.65
            </summary>
            <value>
            The line smoothness.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.ILineSeries`1.EnableNullSplitting">
            <summary>
            Gets or sets a value indicating whether the line should split every null point, 
            enabling it has a performance impact, default is true.
            </summary>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.ILineSeries`1.GeometryFill">
            <summary>
            Gets or sets the geometry fill.
            </summary>
            <value>
            The shapes fill.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.ILineSeries`1.GeometryStroke">
            <summary>
            Gets or sets the geometry stroke.
            </summary>
            <value>
            The shapes stroke.
            </value>
        </member>
        <member name="T:ChartKit.Kernel.Sketches.IPieChartView`1">
            <summary>
            Defines a pie chart.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <seealso cref="T:ChartKit.Kernel.Sketches.IChartView`1" />
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IPieChartView`1.Core">
            <summary>
            Gets the core.
            </summary>
            <value>
            The core.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IPieChartView`1.Series">
            <summary>
            Gets or sets the series.
            </summary>
            <value>
            The series.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IPieChartView`1.InitialRotation">
            <summary>
            Gets or sets the initial rotation in degrees, this angle specifies where the first pie slice will be drawn, then the remaining
            slices will stack according to its corresponding position.
            </summary>
            <value>
            The initial rotation.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IPieChartView`1.MaxAngle">
            <summary>
            Gets or sets the maximum angle in degrees, default is 360.
            </summary>
            <value>
            The maximum angle.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IPieChartView`1.Total">
            <summary>
            Gets or sets the total, it is the maximum value a pie slice can represent, when this property is null, the <see cref="P:ChartKit.Kernel.Sketches.IPieChartView`1.Total"/> property
            will be calculated automatically based on the series data. Default value is null.
            </summary>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IPieChartView`1.MinValue">
            <summary>
            Gets or sets the minimum valu, normally used in gauges to set the minimum value a pie slice can represent,
            default is 0.
            </summary>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IPieChartView`1.MaxValue">
            <summary>
            Gets or sets the end value, normally used in gauges to set the maximum value a pie slice can represent,
            default is null, and means the pie chart total sum.
            </summary>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IPieChartView`1.IsClockwise">
            <summary>
            Gets or sets a value indicating whether the pie slices will be drawn clockwise, default is true.
            </summary>
        </member>
        <member name="T:ChartKit.Kernel.Sketches.IPieSeries`1">
            <summary>
            Defines a pie series.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <seealso cref="T:ChartKit.Kernel.Sketches.IChartSeries`1" />
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IPieSeries`1.Pushout">
            <summary>
            Gets or sets the push out, it is the distance in pixels between the center of the control and the pie slice.
            </summary>
            <value>
            The push out.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IPieSeries`1.InnerRadius">
            <summary>
            Gets or sets the inner radius of the slice in pixels, in most cases the <see cref="P:ChartKit.Kernel.Sketches.IPieSeries`1.MaxRadialColumnWidth"/>
            is preferred, because it is more flexible on different chart sizes.
            </summary>
            <value>
            The inner radius.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IPieSeries`1.OuterRadiusOffset">
            <summary>
            Gets or sets the outer radius offset, it is the distance from the maximum radius available to the end of the slice [in pixels].
            </summary>
            <value>
            The maximum outer radius.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IPieSeries`1.MaxOuterRadius">
            <summary>
            Gets or sets the maximum outer radius, the value goes from 0 to 1, where 1 is the full available radius and 0 is none.
            </summary>
            <value>
            The maximum outer radius.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IPieSeries`1.HoverPushout">
            <summary>
            Gets or sets the hover push out in pixes, it defines the <see cref="P:ChartKit.Kernel.Sketches.IPieSeries`1.Pushout"/> where the pointer is over the slice.
            </summary>
            <value>
            The hover pus hout.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IPieSeries`1.CornerRadius">
            <summary>
            Gets or sets the corner radius for every pie slice in the series.
            </summary>
            <value>
            The corner radius.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IPieSeries`1.InvertedCornerRadius">
            <summary>
            Gets or sets a value indicating whether the direction of the corner radius is inverted.
            </summary>
            <value>
              <c>true</c> if the direction is inverted; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IPieSeries`1.MaxRadialColumnWidth">
            <summary>
            Gets or sets the maximum width of the radial column, if the width of the radial column slice exceeds this dimension the radial
            column width will be capped to the value of this property, default value is double.MaxValue.
            </summary>
            <value>
            The maximum width of the radial column.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IPieSeries`1.DataLabelsPosition">
            <summary>
            Gets or sets the data labels position.
            </summary>
            <value>
            The data labels position.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IPieSeries`1.RadialAlign">
            <summary>
            Gets or sets the radial align, this property determines the alignment of the pie slice only when the width of the column
            exceeds <see cref="P:ChartKit.Kernel.Sketches.IPieSeries`1.MaxRadialColumnWidth"/>.
            </summary>
            <value>
            The radial align.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IPieSeries`1.RelativeInnerRadius">
            <summary>
            Gets or sets the relative inner radius, it is the extra inner radius for every stacked slice in pixels.
            </summary>
            <value>
            The inner padding.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IPieSeries`1.RelativeOuterRadius">
            <summary>
            Gets or sets the relative outer radius, it is the decrement in the outer radius for every stacked slice in pixels.
            </summary>
            <value>
            The inner padding.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IPieSeries`1.IsFillSeries">
            <summary>
            Gets or sets a value indicating whether this instance is a fill series, a fill series is a dummy series that will create a 360 degrees
            pie slice, this series is normally used to set a background for pie charts, specially useful o create gauges.
            </summary>
            <value>
              <c>true</c> if this instance is fill series; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IPieSeries`1.IsRelativeToMinValue">
            <summary>
            Gets or sets a value indicating whether the values in this series are relative to the
            <see cref="P:ChartKit.Kernel.Sketches.IPieChartView`1.MinValue"/> property in the chart.
            </summary>
        </member>
        <member name="M:ChartKit.Kernel.Sketches.IPieSeries`1.GetBounds(ChartKit.PieChart{`0})">
            <summary>
            Gets the series bounds.
            </summary>
            <param name="chart">The chart.</param>
            <returns></returns>
        </member>
        <member name="T:ChartKit.Kernel.Sketches.IPlane">
            <summary>
            Defines a plane for a dimension.
            </summary>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IPlane.Name">
            <summary>
            Gets or sets the axis name.
            </summary>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IPlane.NameTextSize">
            <summary>
            Gets or sets the size of the name label.
            </summary>
            <value>
            The size of the text.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IPlane.NamePadding">
            <summary>
            Gets or sets the padding of the name label.
            </summary>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IPlane.ActualBounds">
            <summary>
            Get or sets the actual bounds.
            </summary>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IPlane.DataBounds">
            <summary>
            Gets the data bounds, the min and max values in the axis.
            </summary>
            <value>
            The data bounds.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IPlane.VisibleDataBounds">
            <summary>
            Gets the data visible bounds, the min and max visible values in the axis that are currently in the UI.
            </summary>
            <value>
            The data bounds.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IPlane.Labeler">
            <summary>
            Gets or sets the labeler, a function that receives a number and return the label content as string.
            </summary>
            <value>
            The labeler.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IPlane.MinStep">
            <summary>
            Gets or sets the minimum step, the step defines the interval between every separator in the axis,
            LiveCharts will calculate it automatically based on the chart data and the chart size size, if the calculated step is
            less than the <see cref="P:ChartKit.Kernel.Sketches.IPlane.MinStep"/> then <see cref="P:ChartKit.Kernel.Sketches.IPlane.MinStep"/> will be used as the axis step, default is 0.
            </summary>
            <value>
            The step.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IPlane.ForceStepToMin">
            <summary>
            Gets or sets whether the axis should use the <see cref="P:ChartKit.Kernel.Sketches.IPlane.MinStep"/> as the actual step of the axis, if true, the library
            will not calculate the step of the axis automatically, instead it will use the value in the <see cref="P:ChartKit.Kernel.Sketches.IPlane.MinStep"/> property.
            Be careful when setting this property to true, it might cause performance issues if the step is too small for the current
            data in the chart. Default value is false.
            </summary>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IPlane.UnitWidth">
            <summary>
            Gets or sets the unit with, it means the width of every point (if the series requires it) in the chart values scale, this value
            should normally be 1, unless you are plotting in a custom scale, default is 1.
            </summary>
            <value>
            The unit with.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IPlane.MinLimit">
            <summary>
            Gets or sets the minimum value visible in the axis, any point less than this value will be hidden, 
            set it to null to use a value based on the smaller value in the chart.
            </summary>
            <value>
            The minimum value.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IPlane.MaxLimit">
            <summary>
            Gets or sets the maximum value visible in the axis, any point greater than this value will be hidden, 
            set it null to use a value based on the greater value in the chart.
            </summary>
            <value>
            The maximum value.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IPlane.IsVisible">
            <summary>
            Gets or sets a value indicating whether this instance is visible.
            </summary>
            <value>
              <c>true</c> if this instance is visible; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IPlane.IsInverted">
            <summary>
            Gets or sets a value indicating whether the axis is inverted based on the Cartesian coordinate system.
            </summary>
            <value>
              <c>true</c> if this instance is inverted; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IPlane.LabelsRotation">
            <summary>
            Gets or sets the labels rotation in degrees.
            </summary>
            <value>
            The labels rotation.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IPlane.TextSize">
            <summary>
            Gets or sets the size of the labels.
            </summary>
            <value>
            The size of the text.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IPlane.Labels">
            <summary>
            Gets or sets the labels, if labels are not null, then the axis label will be pulled from the labels collection,
            the label is mapped to the chart based on the position of the label and the position of the point, both integers,
            if the axis requires a label outside the bounds of the labels collection, then the index will be returned as the label.
            Default value is null.
            </summary>
            <value>
            The labels.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IPlane.AnimationsSpeed">
            <summary>
            Gets or sets the animations speed, if this property is null, the
            <see cref="P:ChartKit.Chart`1.AnimationsSpeed"/> property will be used.
            </summary>
            <value>
            The animations speed.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IPlane.EasingFunction">
            <summary>
            Gets or sets the easing function to animate the series, if this property is null, the
            <see cref="P:ChartKit.Chart`1.EasingFunction"/> property will be used.
            </summary>
            <value>
            The easing function.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IPlane.ShowSeparatorLines">
            <summary>
            Gets or sets a value indicating whether the separator lines are visible.
            </summary>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IPlane.CustomSeparators">
            <summary>
            Gets or sets the custom separators array, when this property is set (not null)
            the axis will use the values in this array instead of calculating the separators automatically.
            Defalut is null.
            </summary>
        </member>
        <member name="T:ChartKit.Kernel.Sketches.IPlane`1">
            <summary>
            Defines an Axis in a Cartesian chart.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <seealso cref="T:System.IDisposable" />
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IPlane`1.NamePaint">
            <summary>
            Gets or sets the name paint.
            </summary>
            <value>
            The text paint.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IPlane`1.LabelsPaint">
            <summary>
            Gets or sets the text paint.
            </summary>
            <value>
            The text paint.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IPlane`1.SeparatorsPaint">
            <summary>
            Gets or sets the separators paint.
            </summary>
            <value>
            The separators paint.
            </value>
        </member>
        <member name="M:ChartKit.Kernel.Sketches.IPlane`1.GetPossibleSize(ChartKit.Chart{`0})">
            <summary>
            Gets the size of the possible.
            </summary>
            <param name="chart">The chart.</param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Kernel.Sketches.IPlane`1.GetNameLabelSize(ChartKit.Chart{`0})">
            <summary>
            Gets the size of the axis name label.
            </summary>
            <param name="chart">the chart.</param>
            <returns></returns>
        </member>
        <member name="T:ChartKit.Kernel.Sketches.IPolarAxis">
            <summary>
            Defines a polar axis.
            </summary>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IPolarAxis.Orientation">
            <summary>
            Gets the orientation.
            </summary>
            <value>
            The orientation.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IPolarAxis.Ro">
            <summary>
            Gets or sets the ro, a reference used internally to calculate the axis position.
            </summary>
            <value>
            The ro.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IPolarAxis.LabelsAngle">
            <summary>
            Gets the angle in degrees where the labels are drawn, default is 0, notice this property has no effect
            when the axis has <see cref="F:ChartKit.Measure.PolarAxisOrientation.Angle"/> orientation.
            </summary>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IPolarAxis.LabelsVerticalAlignment">
            <summary>
            Gets or sets the labels vertical alignment.
            </summary>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IPolarAxis.LabelsHorizontalAlignment">
            <summary>
            Gets or sets the labels horizontal alignment.
            </summary>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IPolarAxis.LabelsPadding">
            <summary>
            Gets or sets the labels padding.
            </summary>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IPolarAxis.LabelsBackground">
            <summary>
            Gets or sets the labels background.
            </summary>
        </member>
        <member name="M:ChartKit.Kernel.Sketches.IPolarAxis.Initialize(ChartKit.Measure.PolarAxisOrientation)">
            <summary>
            Initializes the axis for the specified orientation.
            </summary>
            <param name="orientation">The orientation.</param>
        </member>
        <member name="E:ChartKit.Kernel.Sketches.IPolarAxis.Initialized">
            <summary>
            Occurs when the axis is initialized.
            </summary>
        </member>
        <member name="T:ChartKit.Kernel.Sketches.IPolarChartView`1">
            <summary>
            Defines a polar chart view, this view is able to host one or many series in a polar coordinate system.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <seealso cref="T:ChartKit.Kernel.Sketches.IPolarChartView`1" />
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IPolarChartView`1.Core">
            <summary>
            Gets the core.
            </summary>
            <value>
            The core.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IPolarChartView`1.FitToBounds">
            <summary>
            Gets whether the chart scales to try to fit the plot to the series bounds, it calculates a new center of the radial chart,
            default is false.
            </summary>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IPolarChartView`1.TotalAngle">
            <summary>
            Gets or sets the total circumference angle in degrees, default is 360.
            </summary>
            <value>
            The inner radius.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IPolarChartView`1.InnerRadius">
            <summary>
            Gets or sets the inner radius, default is 0.
            </summary>
            <value>
            The inner radius.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IPolarChartView`1.InitialRotation">
            <summary>
            Gets or sets the initial rotation, default is 0.
            </summary>
            <value>
            The inner radius.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IPolarChartView`1.AngleAxes">
            <summary>
            Gets or sets the angle axes.
            </summary>
            <value>
            The angle axes.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IPolarChartView`1.RadiusAxes">
            <summary>
            Gets or sets the radius axes.
            </summary>
            <value>
            The radius axes.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IPolarChartView`1.Series">
            <summary>
            Gets or sets the series to plot in the user interface.
            </summary>
            <value>
            The series.
            </value>
        </member>
        <member name="M:ChartKit.Kernel.Sketches.IPolarChartView`1.ScalePixelsToData(ChartKit.Drawing.LvcPointD,System.Int32,System.Int32)">
            <summary>
            Scales a point in pixels to the chart data scale.
            </summary>
            <param name="point">The point.</param>
            <param name="angleAxisIndex">Index of the angle axis.</param>
            <param name="radiusAxisIndex">Index of the radius axis.</param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Kernel.Sketches.IPolarChartView`1.ScaleDataToPixels(ChartKit.Drawing.LvcPointD,System.Int32,System.Int32)">
            <summary>
            Scales a point in the chart data scale to pixels.
            </summary>
            <param name="point">The point.</param>
            <param name="angleAxisIndex">Index of the x axis.</param>
            <param name="radiusAxisIndex">Index of the radius axis.</param>
            <returns></returns>
        </member>
        <member name="T:ChartKit.Kernel.Sketches.IPolarLineSeries`1">
            <summary>
            Defines a polar line series plot.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <seealso cref="T:ChartKit.Kernel.Sketches.IChartSeries`1" />
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IPolarLineSeries`1.IsClosed">
            <summary>
            Gets or sets a value indicating whether this series path is closed, default is true.
            </summary>
            <value>
            The value.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IPolarLineSeries`1.GeometrySize">
            <summary>
            Gets or sets the size of the geometry.
            </summary>
            <value>
            The size of the geometry.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IPolarLineSeries`1.LineSmoothness">
            <summary>
            Gets or sets the line smoothness, where 0 is a straight line, and 1 the most curved line, default is 0.65
            </summary>
            <value>
            The line smoothness.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IPolarLineSeries`1.EnableNullSplitting">
            <summary>
            Gets or sets a value indicating whether the line should split every null point, 
            enabling it has a performance impact, default is true.
            </summary>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IPolarLineSeries`1.GeometryFill">
            <summary>
            Gets or sets the geometry fill.
            </summary>
            <value>
            The shapes fill.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IPolarLineSeries`1.GeometryStroke">
            <summary>
            Gets or sets the geometry stroke.
            </summary>
            <value>
            The shapes stroke.
            </value>
        </member>
        <member name="T:ChartKit.Kernel.Sketches.IPolarSeries`1">
            <summary>
            Defines a polar series.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <seealso cref="T:ChartKit.Kernel.Sketches.IChartSeries`1" />
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IPolarSeries`1.ScalesAngleAt">
            <summary>
            Gets or sets the axis index where the series is scaled in the angle plane, the index must exist 
            in the <see cref="P:ChartKit.Kernel.Sketches.IPolarSeries`1.ScalesAngleAt"/> collection.
            </summary>
            <value>
            The index of the axis.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IPolarSeries`1.ScalesRadiusAt">
            <summary>
            Gets or sets the axis index where the series is scaled in the radius plane, the index must exist 
            in the <see cref="P:ChartKit.Kernel.Sketches.IPolarSeries`1.ScalesRadiusAt"/> collection.
            </summary>
            <value>
            The index of the axis.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IPolarSeries`1.DataLabelsPosition">
            <summary>
            Gets or sets the data labels position.
            </summary>
            <value>
            The data labels position.
            </value>
        </member>
        <member name="M:ChartKit.Kernel.Sketches.IPolarSeries`1.GetBounds(ChartKit.PolarChart{`0},ChartKit.Kernel.Sketches.IPolarAxis,ChartKit.Kernel.Sketches.IPolarAxis)">
            <summary>
            Gets the series bounds.
            </summary>
            <param name="chart">The chart.</param>
            <param name="angleAxis">The angle axis.</param>
            <param name="radiusAxis">The radius axis.</param>
            <returns>the series bounds</returns>
        </member>
        <member name="T:ChartKit.Kernel.Sketches.IScatterSeries`1">
            <summary>
            Defines a scatter series.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <seealso cref="T:ChartKit.Kernel.Sketches.IChartSeries`1" />
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IScatterSeries`1.GeometrySize">
            <summary>
            Gets or sets the size of the geometry.
            </summary>
            <value>
            The size of the geometry.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IScatterSeries`1.MinGeometrySize">
            <summary>
            Gets or sets the minimum size of the geometry.
            </summary>
            <value>
            The minimum size of the geometry.
            </value>
        </member>
        <member name="T:ChartKit.Kernel.Sketches.IStackedBarSeries`1">
            <summary>
            Defines a stacked bar series.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <seealso cref="T:ChartKit.Kernel.Sketches.IChartSeries`1" />
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IStackedBarSeries`1.Rx">
            <summary>
            Gets or sets the rx, the radius used in the x axis to round the corners of each column, it goes from 0 to 1.
            </summary>
            <value>
            The rx.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IStackedBarSeries`1.Ry">
            <summary>
            Gets or sets the ry, the radius used in the y axis to round the corners of each column, it goes from 0 to 1.
            </summary>
            <value>
            The ry.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IStackedBarSeries`1.GroupPadding">
            <summary>
            Gets or sets the padding for each group of bars that share the same secondary coordinate.
            </summary>
            <value>
            The bar group padding.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IStackedBarSeries`1.MaxBarWidth">
            <summary>
            Gets or sets the maximum width of the bar.
            </summary>
            <value>
            The maximum width of the bar.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IStackedBarSeries`1.StackGroup">
            <summary>
            Gets or sets the stack group.
            </summary>
            <value>
            The stack group.
            </value>
        </member>
        <member name="T:ChartKit.Kernel.Sketches.IStepLineSeries`1">
            <summary>
            Defines a stepline series plot.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <seealso cref="T:ChartKit.Kernel.Sketches.IChartSeries`1" />
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IStepLineSeries`1.EnableNullSplitting">
            <summary>
            Gets or sets a value indicating whether the line should split every null point, 
            enabling it has a performance impact, default is true.
            </summary>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IStepLineSeries`1.GeometrySize">
            <summary>
            Gets or sets the size of the geometry.
            </summary>
            <value>
            The size of the geometry.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IStepLineSeries`1.GeometryFill">
            <summary>
            Gets or sets the geometry fill.
            </summary>
            <value>
            The shapes fill.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IStepLineSeries`1.GeometryStroke">
            <summary>
            Gets or sets the geometry stroke.
            </summary>
            <value>
            The shapes stroke.
            </value>
        </member>
        <member name="T:ChartKit.Kernel.Sketches.IStrokedAndFilled`1">
            <summary>
            Defines an object with a stroke and fill.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IStrokedAndFilled`1.Fill">
            <summary>
            Gets or sets the fill.
            </summary>
            <value>
            The fill.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.Sketches.IStrokedAndFilled`1.Stroke">
            <summary>
            Gets or sets the stroke.
            </summary>
            <value>
            The stroke.
            </value>
        </member>
        <member name="T:ChartKit.Kernel.StackedTotal">
            <summary>
            Defines a stack total.
            </summary>
        </member>
        <member name="P:ChartKit.Kernel.StackedTotal.Positive">
            <summary>
            Gets or sets the posive stack.
            </summary>
        </member>
        <member name="P:ChartKit.Kernel.StackedTotal.Negative">
            <summary>
            Gets or sets the negative stack.
            </summary>
        </member>
        <member name="T:ChartKit.Kernel.StackedValue">
            <summary>
            Defines the a stacked value.
            </summary>
        </member>
        <member name="P:ChartKit.Kernel.StackedValue.Start">
            <summary>
            Gets or sets the start.
            </summary>
            <value>
            The start.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.StackedValue.End">
            <summary>
            Gets or sets the end.
            </summary>
            <value>
            The end.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.StackedValue.Total">
            <summary>
            Gets or sets the total stacked.
            </summary>
            <value>
            The total.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.StackedValue.Share">
            <summary>
            Gets the share in the total stack.
            </summary>
        </member>
        <member name="P:ChartKit.Kernel.StackedValue.NegativeStart">
            <summary>
            Gets or sets the start.
            </summary>
            <value>
            The start.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.StackedValue.NegativeEnd">
            <summary>
            Gets or sets the end.
            </summary>
            <value>
            The end.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.StackedValue.NegativeTotal">
            <summary>
            Gets or sets the total stacked.
            </summary>
            <value>
            The total.
            </value>
        </member>
        <member name="T:ChartKit.Kernel.Stacker`1">
            <summary>
            Defines the stacker helper class.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
        </member>
        <member name="M:ChartKit.Kernel.Stacker`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.Kernel.Stacker`1"/> class.
            </summary>
        </member>
        <member name="P:ChartKit.Kernel.Stacker`1.MaxLength">
            <summary>
            Gets the maximum length.
            </summary>
            <value>
            The maximum length.
            </value>
        </member>
        <member name="M:ChartKit.Kernel.Stacker`1.GetSeriesStackPosition(ChartKit.Kernel.Sketches.IChartSeries{`0})">
            <summary>
            Gets the series stack position.
            </summary>
            <param name="series">The series.</param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Kernel.Stacker`1.StackPoint(ChartKit.Kernel.ChartPoint,System.Int32)">
            <summary>
            Stacks the point.
            </summary>
            <param name="point">The point.</param>
            <param name="seriesStackPosition">The series stack position.</param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Kernel.Stacker`1.GetStack(ChartKit.Kernel.ChartPoint,System.Int32)">
            <summary>
            Gets the stack.
            </summary>
            <param name="point">The point.</param>
            <param name="seriesStackPosition">The series stack position.</param>
            <returns></returns>
        </member>
        <member name="T:ChartKit.Kernel.StrokeAndFillDrawable`1">
            <summary>
            Defines the stroke and ill drawable class.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
        </member>
        <member name="M:ChartKit.Kernel.StrokeAndFillDrawable`1.#ctor(ChartKit.Drawing.IPaint{`0},ChartKit.Drawing.IPaint{`0},System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.Kernel.StrokeAndFillDrawable`1"/> class.
            </summary>
            <param name="stroke">The stroke.</param>
            <param name="fill">The fill.</param>
            <param name="isHoverState">is hover state?.</param>
        </member>
        <member name="P:ChartKit.Kernel.StrokeAndFillDrawable`1.Stroke">
            <summary>
            Gets the stroke.
            </summary>
            <value>
            The stroke.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.StrokeAndFillDrawable`1.Fill">
            <summary>
            Gets the fill.
            </summary>
            <value>
            The fill.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.StrokeAndFillDrawable`1.IsHoverState">
            <summary>
            Gets or sets a value indicating whether this instance is hover state.
            </summary>
            <value>
              <c>true</c> if this instance is hover state; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:ChartKit.Kernel.TooltipPlacementContext">
            <summary>
            Defines the tooltip placement context class.
            </summary>
        </member>
        <member name="M:ChartKit.Kernel.TooltipPlacementContext.#ctor(ChartKit.Measure.TooltipPosition)">
            <summary>
            Intializes a new instance of the <see cref="T:ChartKit.Kernel.TooltipPlacementContext"/> class.
            </summary>
            <param name="position"></param>
        </member>
        <member name="P:ChartKit.Kernel.TooltipPlacementContext.Position">
            <summary>
            Gets the tool tip position.
            </summary>
        </member>
        <member name="P:ChartKit.Kernel.TooltipPlacementContext.AutoPopPupPlacement">
            <summary>
            Gets or sets the value for the pop-up placement.
            </summary>
        </member>
        <member name="P:ChartKit.Kernel.TooltipPlacementContext.AreAllLessThanPivot">
            <summary>
            Gets or sets a value indicating whether all the points evaluated are less than the series' pivot.
            </summary>
        </member>
        <member name="P:ChartKit.Kernel.TooltipPlacementContext.MostTop">
            <summary>
            Gets or sets the most top.
            </summary>
            <value>
            The most top.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.TooltipPlacementContext.MostBottom">
            <summary>
            Gets or sets the most bottom.
            </summary>
            <value>
            The most bottom.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.TooltipPlacementContext.MostRight">
            <summary>
            Gets or sets the most right.
            </summary>
            <value>
            The most right.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.TooltipPlacementContext.MostLeft">
            <summary>
            Gets or sets the most left.
            </summary>
            <value>
            The most left.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.TooltipPlacementContext.MostAutoTop">
            <summary>
            Gets or sets the most top auto.
            </summary>
            <value>
            The most top.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.TooltipPlacementContext.MostAutoBottom">
            <summary>
            Gets or sets the most bottom auto.
            </summary>
            <value>
            The most bottom.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.TooltipPlacementContext.PieX">
            <summary>
            Gets or sets the pie x.
            </summary>
            <value>
            The pie x.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.TooltipPlacementContext.PieY">
            <summary>
            Gets or sets the pie y.
            </summary>
            <value>
            The pie y.
            </value>
        </member>
        <member name="P:ChartKit.Kernel.TooltipPlacementContext.PieMostR">
            <summary>
            Gets or sets the pie most r, the longest known radius.
            </summary>
            <value>
            The pie most r.
            </value>
        </member>
        <member name="T:ChartKit.Kernel.DimensionalBounds">
            <summary>
            Defines bounds for both, X and Y axes.
            </summary>
        </member>
        <member name="M:ChartKit.Kernel.DimensionalBounds.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.Kernel.DimensionalBounds"/> class.
            </summary>
            <param name="setMinBounds">
            Indicates if the intiial bounds should contain some values,
            just to prevent the chart to be in an invalid range when the control is initializes without any data.
            </param>
        </member>
        <member name="M:ChartKit.Kernel.DimensionalBounds.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.Kernel.DimensionalBounds"/> class.
            </summary>
        </member>
        <member name="P:ChartKit.Kernel.DimensionalBounds.PrimaryBounds">
            <summary>
            Gets or sets the primary bounds.
            </summary>
        </member>
        <member name="P:ChartKit.Kernel.DimensionalBounds.SecondaryBounds">
            <summary>
            Gets or sets the secondary bounds.
            </summary>
        </member>
        <member name="P:ChartKit.Kernel.DimensionalBounds.TertiaryBounds">
            <summary>
            Gets or sets the tertiary bounds.
            </summary>
        </member>
        <member name="P:ChartKit.Kernel.DimensionalBounds.VisiblePrimaryBounds">
            <summary>
            Gets or sets the primary bounds.
            </summary>
        </member>
        <member name="P:ChartKit.Kernel.DimensionalBounds.VisibleSecondaryBounds">
            <summary>
            Gets or sets the secondary bounds.
            </summary>
        </member>
        <member name="P:ChartKit.Kernel.DimensionalBounds.VisibleTertiaryBounds">
            <summary>
            Gets or sets the tertiary bounds.
            </summary>
        </member>
        <member name="T:ChartKit.Labelers">
            <summary>
            Defines common functions to build labels in a chart.
            </summary>
        </member>
        <member name="P:ChartKit.Labelers.Default">
            <summary>
            Gets the default labeler.
            </summary>
            <value>
            The default.
            </value>
        </member>
        <member name="P:ChartKit.Labelers.SixRepresentativeDigits">
            <summary>
            Gets the seven representative digits labeler.
            </summary>
            <value>
            The seven representative digits.
            </value>
        </member>
        <member name="P:ChartKit.Labelers.Currency">
            <summary>
            Gets the currency labeler.
            </summary>
            <value>
            The currency.
            </value>
        </member>
        <member name="M:ChartKit.Labelers.SetDefaultLabeler(System.Func{System.Double,System.String})">
            <summary>
            Sets the default labeler.
            </summary>
            <param name="labeler">The labeler.</param>
        </member>
        <member name="M:ChartKit.Labelers.FormatCurrency(System.Double,System.String,System.String,System.String)">
            <summary>
            Formats to currency.
            </summary>
            <param name="value">The value.</param>
            <param name="thousands">The thousands.</param>
            <param name="decimals">The decimals.</param>
            <param name="symbol">The symbol.</param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Labelers.BuildNamedLabeler(System.Collections.Generic.IList{System.String})">
            <summary>
            Builds a named labeler.
            </summary>
            <param name="labels">The labels.</param>
            <returns></returns>
        </member>
        <member name="T:ChartKit.LineSeries`6">
            <summary>
            Defines the data to plot as a line.
            </summary>
            <typeparam name="TModel">The type of the model to plot.</typeparam>
            <typeparam name="TVisual">The type of the visual point.</typeparam>
            <typeparam name="TLabel">The type of the data label.</typeparam>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <typeparam name="TPathGeometry">The type of the path geometry.</typeparam>
            <typeparam name="TErrorGeometry">The type of the error geometry.</typeparam>
        </member>
        <member name="M:ChartKit.LineSeries`6.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the
            <see cref="T:ChartKit.LineSeries`6"/>
            class.
            </summary>
            <param name="isStacked">if set to <c>true</c> [is stacked].</param>
        </member>
        <member name="P:ChartKit.LineSeries`6.GeometrySize">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.ILineSeries`1.GeometrySize"/>
        </member>
        <member name="P:ChartKit.LineSeries`6.LineSmoothness">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.ILineSeries`1.LineSmoothness"/>
        </member>
        <member name="P:ChartKit.LineSeries`6.EnableNullSplitting">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.ILineSeries`1.EnableNullSplitting"/>
        </member>
        <member name="P:ChartKit.LineSeries`6.GeometryFill">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.ILineSeries`1.GeometryFill"/>
        </member>
        <member name="P:ChartKit.LineSeries`6.GeometryStroke">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.ILineSeries`1.GeometryStroke"/>
        </member>
        <member name="P:ChartKit.LineSeries`6.ErrorPaint">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.IErrorSeries`1.ErrorPaint"/>
        </member>
        <member name="M:ChartKit.LineSeries`6.Invalidate(ChartKit.Chart{`3})">
            <inheritdoc cref="M:ChartKit.Kernel.ChartElement`1.Invalidate(ChartKit.Chart{`0})"/>
        </member>
        <member name="M:ChartKit.LineSeries`6.OnPointerEnter(ChartKit.Kernel.ChartPoint)">
            <inheritdoc cref="M:ChartKit.Series`4.OnPointerEnter(ChartKit.Kernel.ChartPoint)"/>
        </member>
        <member name="M:ChartKit.LineSeries`6.OnPointerLeft(ChartKit.Kernel.ChartPoint)">
            <inheritdoc cref="M:ChartKit.Series`4.OnPointerLeft(ChartKit.Kernel.ChartPoint)"/>
        </member>
        <member name="M:ChartKit.LineSeries`6.GetRequestedGeometrySize">
            <inheritdoc cref="M:ChartKit.LineSeries`6.GetRequestedGeometrySize"/>
        </member>
        <member name="M:ChartKit.LineSeries`6.GetMiniaturesSketch">
            <inheritdoc cref="M:ChartKit.Series`4.GetMiniaturesSketch"/>
        </member>
        <member name="M:ChartKit.LineSeries`6.SoftDeleteOrDispose(ChartKit.Kernel.Sketches.IChartView)">
            <inheritdoc cref="M:ChartKit.Series`4.SoftDeleteOrDispose(ChartKit.Kernel.Sketches.IChartView)"/>
        </member>
        <member name="M:ChartKit.LineSeries`6.RemoveFromUI(ChartKit.Chart{`3})">
            <inheritdoc/>
        </member>
        <member name="M:ChartKit.LineSeries`6.GetPaintTasks">
            <summary>
            Gets the paint tasks.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ChartKit.LineSeries`6.GetSpline(System.Collections.Generic.IEnumerable{ChartKit.Kernel.ChartPoint},ChartKit.Measure.StackPosition{`3})">
            <summary>
            Builds an spline from the given points.
            </summary>
            <param name="points">The points.</param>
            <param name="stacker">The stacker.</param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.LineSeries`6.SetDefaultPointTransitions(ChartKit.Kernel.ChartPoint)">
            <inheritdoc cref="M:ChartKit.Series`4.SetDefaultPointTransitions(ChartKit.Kernel.ChartPoint)"/>
        </member>
        <member name="M:ChartKit.LineSeries`6.SoftDeleteOrDisposePoint(ChartKit.Kernel.ChartPoint,ChartKit.Measure.Scaler,ChartKit.Measure.Scaler)">
            <inheritdoc cref="M:ChartKit.CartesianSeries`4.SoftDeleteOrDisposePoint(ChartKit.Kernel.ChartPoint,ChartKit.Measure.Scaler,ChartKit.Measure.Scaler)"/>
        </member>
        <member name="T:ChartKit.Measure.AxisLimit">
            <summary>
            Defines the axis limit structure.
            </summary>
        </member>
        <member name="M:ChartKit.Measure.AxisLimit.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.Measure.AxisLimit"/> struct.
            </summary>
            <param name="min">The min value.</param>
            <param name="max">The masx value.</param>
            <param name="minDelta">The min delta.</param>
            <param name="dataMin">The data min value.</param>
            <param name="dataMax">The data max value.</param>
        </member>
        <member name="P:ChartKit.Measure.AxisLimit.Min">
            <summary>
            Gets or sets the minimum value.
            </summary>
        </member>
        <member name="P:ChartKit.Measure.AxisLimit.Max">
            <summary>
            Gets or sets the maximum value.
            </summary>
        </member>
        <member name="P:ChartKit.Measure.AxisLimit.DataMin">
            <summary>
            Gets or sets the minimum value.
            </summary>
        </member>
        <member name="P:ChartKit.Measure.AxisLimit.DataMax">
            <summary>
            Gets or sets the maximum value.
            </summary>
        </member>
        <member name="P:ChartKit.Measure.AxisLimit.MinDelta">
            <summary>
            Gets or sets the min delta.
            </summary>
        </member>
        <member name="T:ChartKit.Measure.AxisOrientation">
            <summary>
            Defines the axis orientation.
            </summary>
        </member>
        <member name="F:ChartKit.Measure.AxisOrientation.Unknown">
            <summary>
            The unknown orientation.
            </summary>
        </member>
        <member name="F:ChartKit.Measure.AxisOrientation.X">
            <summary>
            The x orientation.
            </summary>
        </member>
        <member name="F:ChartKit.Measure.AxisOrientation.Y">
            <summary>
            The y orientation.
            </summary>
        </member>
        <member name="T:ChartKit.Measure.AxisPosition">
            <summary>
            Defines an axis position.
            </summary>
        </member>
        <member name="F:ChartKit.Measure.AxisPosition.Start">
            <summary>
            Places the axis at the bottom for X axes and at the left for Y axes
            </summary>
        </member>
        <member name="F:ChartKit.Measure.AxisPosition.End">
            <summary>
            Places the axis at the top for X axes and at the right for Y axes
            </summary>
        </member>
        <member name="T:ChartKit.Measure.AxisTick">
            <summary>
            Defines an axis tick, the distance between every separator.
            </summary>
        </member>
        <member name="P:ChartKit.Measure.AxisTick.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>
            The value.
            </value>
        </member>
        <member name="P:ChartKit.Measure.AxisTick.Magnitude">
            <summary>
            Gets or sets the magnitude.
            </summary>
            <value>
            The magnitude.
            </value>
        </member>
        <member name="T:ChartKit.Measure.Bounds">
            <summary>
            Represents the maximum and minimum values in a set.
            </summary>
        </member>
        <member name="M:ChartKit.Measure.Bounds.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:ChartKit.Measure.Bounds"/> class.
            </summary>
        </member>
        <member name="M:ChartKit.Measure.Bounds.#ctor(ChartKit.Measure.Bounds)">
            <summary>
            Creates a new instance of the <see cref="T:ChartKit.Measure.Bounds"/> class. based on the given <see cref="T:ChartKit.Measure.Bounds"/>.
            </summary>
            <param name="bounds"></param>
        </member>
        <member name="P:ChartKit.Measure.Bounds.IsEmpty">
            <summary>
            Gets whether the bounds are empty.
            </summary>
        </member>
        <member name="P:ChartKit.Measure.Bounds.Max">
            <summary>
            Gets the maximum value in the data set.
            </summary>
        </member>
        <member name="P:ChartKit.Measure.Bounds.Min">
            <summary>
            Gets the minimum value in the data set.
            </summary>
        </member>
        <member name="P:ChartKit.Measure.Bounds.PaddingMax">
            <summary>
            Gets the padding, the distance from the edge to the first point in the series.
            </summary>
        </member>
        <member name="P:ChartKit.Measure.Bounds.PaddingMin">
            <summary>
            Gets the padding, the distance from the edge to the last point in the series.
            </summary>
        </member>
        <member name="P:ChartKit.Measure.Bounds.RequestedGeometrySize">
            <summary>
            Gets the requested geometry size.
            </summary>
        </member>
        <member name="P:ChartKit.Measure.Bounds.Delta">
            <summary>
            Gets the delta, the absolute range in the axis.
            </summary>
            <value>
            The delta.
            </value>
        </member>
        <member name="P:ChartKit.Measure.Bounds.MinDelta">
            <summary>
            Gets the minimum delta.
            </summary>
            <value>
            The minimum delta.
            </value>
        </member>
        <member name="M:ChartKit.Measure.Bounds.AppendValue(System.Double)">
            <summary>
            Compares the current bounds with a given value,
            if the given value is greater than the current instance <see cref="P:ChartKit.Measure.Bounds.Max"/> property then the given value is set at <see cref="P:ChartKit.Measure.Bounds.Max"/> property,
            if the given value is less than the current instance <see cref="P:ChartKit.Measure.Bounds.Min"/> property then the given value is set at <see cref="P:ChartKit.Measure.Bounds.Min"/> property.
            </summary>
            <param name="value">the value to append</param>
        </member>
        <member name="M:ChartKit.Measure.Bounds.AppendValue(ChartKit.Measure.Bounds)">
            <summary>
            Compares the current bounds with a given value,
            if the given value is greater than the current instance <see cref="P:ChartKit.Measure.Bounds.Max"/> property then the given value is set at <see cref="P:ChartKit.Measure.Bounds.Max"/> property,
            if the given value is less than the current instance <see cref="P:ChartKit.Measure.Bounds.Min"/> property then the given value is set at <see cref="P:ChartKit.Measure.Bounds.Min"/> property.
            </summary>
            <param name="bounds">the bounds to append</param>
        </member>
        <member name="T:ChartKit.Measure.ClipMode">
            <summary>
            Defines the clip mode in the draw margin of a chart.
            </summary>
        </member>
        <member name="F:ChartKit.Measure.ClipMode.None">
            <summary>
            Disables clipping.
            </summary>
        </member>
        <member name="F:ChartKit.Measure.ClipMode.X">
            <summary>
            Enables clipping in the x axis, it means that anything outside the DrawMargin
            in the X axis will no be rendered.
            </summary>
        </member>
        <member name="F:ChartKit.Measure.ClipMode.Y">
            <summary>
            Enables clipping in the y axis, it means that anything outside the DrawMargin
            in the Y axis will not be rendered.
            </summary>
        </member>
        <member name="F:ChartKit.Measure.ClipMode.XY">
            <summary>
            Enables clipping in the x and y axis, it means that anything outside the DrawMargin
            will not be rendered.
            </summary>
        </member>
        <member name="T:ChartKit.Measure.Clipping">
            <summary>
            A helper class to get the clipping rectangle.
            </summary>
        </member>
        <member name="M:ChartKit.Measure.Clipping.GetClipRectangle``1(ChartKit.Measure.ClipMode,ChartKit.Chart{``0})">
            <summary>
            Calculates the clipping rectangle based on a clipping mode.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <param name="mode">The mode.</param>
            <param name="chart">The chart.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:ChartKit.Measure.DataLabelsPosition">
            <summary>
            Defines the data labels position.
            </summary>
        </member>
        <member name="F:ChartKit.Measure.DataLabelsPosition.End">
            <summary>
            Aligns the label to the end in the axis direction.
            </summary>
        </member>
        <member name="F:ChartKit.Measure.DataLabelsPosition.Start">
            <summary>
            Aligns the label to the start in the axis direction.
            </summary>
        </member>
        <member name="F:ChartKit.Measure.DataLabelsPosition.Middle">
            <summary>
            Aligns the label to the middle of the axis.
            </summary>
        </member>
        <member name="F:ChartKit.Measure.DataLabelsPosition.Top">
            <summary>
            Aligns the label to the top.
            </summary>
        </member>
        <member name="F:ChartKit.Measure.DataLabelsPosition.Bottom">
            <summary>
            Aligns the label to the top.
            </summary>
        </member>
        <member name="F:ChartKit.Measure.DataLabelsPosition.Left">
            <summary>
            Aligns the label to the left.
            </summary>
        </member>
        <member name="F:ChartKit.Measure.DataLabelsPosition.Right">
            <summary>
            Aligns the label to the right.
            </summary>
        </member>
        <member name="T:ChartKit.Measure.LegendOrientation">
            <summary>
            Defines the legend orientation.
            </summary>
        </member>
        <member name="F:ChartKit.Measure.LegendOrientation.Auto">
            <summary>
            The automatic orientation.
            </summary>
        </member>
        <member name="F:ChartKit.Measure.LegendOrientation.Horizontal">
            <summary>
            The horizontal orientation.
            </summary>
        </member>
        <member name="F:ChartKit.Measure.LegendOrientation.Vertical">
            <summary>
            The vertical orientation.
            </summary>
        </member>
        <member name="T:ChartKit.Measure.LegendPosition">
            <summary>
            Defines the legend position enumeration.
            </summary>
        </member>
        <member name="F:ChartKit.Measure.LegendPosition.Hidden">
            <summary>
            The hidden position, hides the legend form the user interface.
            </summary>
        </member>
        <member name="F:ChartKit.Measure.LegendPosition.Top">
            <summary>
            The top position, places the legend at the top of the chart.
            </summary>
        </member>
        <member name="F:ChartKit.Measure.LegendPosition.Left">
            <summary>
            The left position, places the legend at the left of the chart.
            </summary>
        </member>
        <member name="F:ChartKit.Measure.LegendPosition.Right">
            <summary>
            The right position, places the legend at the right of the chart.
            </summary>
        </member>
        <member name="F:ChartKit.Measure.LegendPosition.Bottom">
            <summary>
            The bottom position, places the legend at the bottom of the chart.
            </summary>
        </member>
        <member name="T:ChartKit.Measure.Margin">
             <summary>
            Defines the margin class.
             </summary>
        </member>
        <member name="M:ChartKit.Measure.Margin.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.Measure.Margin"/> class.
            </summary>
        </member>
        <member name="M:ChartKit.Measure.Margin.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.Measure.Margin"/> class.
            </summary>
            <param name="left">The left.</param>
            <param name="top">The top.</param>
            <param name="right">The right.</param>
            <param name="bottom">The bottom.</param>
        </member>
        <member name="M:ChartKit.Measure.Margin.#ctor(System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.Measure.Margin"/> class.
            </summary>
            <param name="all">The margin for top, left, right and bottom.</param>
        </member>
        <member name="M:ChartKit.Measure.Margin.#ctor(System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.Measure.Margin"/> class.
            </summary>
            <param name="x">The margin for left and right.</param>
            <param name="y">The margin for top and bottom.</param>
        </member>
        <member name="P:ChartKit.Measure.Margin.Auto">
            <summary>
            Indicates that the margin should be calculated by the library.
            </summary>
        </member>
        <member name="P:ChartKit.Measure.Margin.Left">
            <summary>
            Gets or sets the left.
            </summary>
            <value>
            The left.
            </value>
        </member>
        <member name="P:ChartKit.Measure.Margin.Top">
            <summary>
            Gets or sets the top.
            </summary>
            <value>
            The top.
            </value>
        </member>
        <member name="P:ChartKit.Measure.Margin.Right">
            <summary>
            Gets or sets the right.
            </summary>
            <value>
            The right.
            </value>
        </member>
        <member name="P:ChartKit.Measure.Margin.Bottom">
            <summary>
            Gets or sets the bottom.
            </summary>
            <value>
            The bottom.
            </value>
        </member>
        <member name="M:ChartKit.Measure.Margin.IsAuto(System.Single)">
            <summary>
            Evaluates whether the given margin is automatic.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:ChartKit.Measure.MeasureUnit">
            <summary>
            Defines measurement units.
            </summary>
        </member>
        <member name="F:ChartKit.Measure.MeasureUnit.Pixels">
            <summary>
            Indicates that the unit is in pixels.
            </summary>
        </member>
        <member name="F:ChartKit.Measure.MeasureUnit.ChartValues">
            <summary>
            Indicates that the unit is in CahrtValues.
            </summary>
        </member>
        <member name="T:ChartKit.Measure.PolarAxisOrientation">
            <summary>
            Defines the polar axis orientation.
            </summary>
        </member>
        <member name="F:ChartKit.Measure.PolarAxisOrientation.Unknown">
            <summary>
            The unknown orientation.
            </summary>
        </member>
        <member name="F:ChartKit.Measure.PolarAxisOrientation.Angle">
            <summary>
            The angle orientation.
            </summary>
        </member>
        <member name="F:ChartKit.Measure.PolarAxisOrientation.Radius">
            <summary>
            The radius orientation.
            </summary>
        </member>
        <member name="T:ChartKit.Measure.PolarLabelsPosition">
            <summary>
            
            </summary>
        </member>
        <member name="F:ChartKit.Measure.PolarLabelsPosition.ChartCenter">
            <summary>
            Places the label at the center of the chart.
            </summary>
        </member>
        <member name="F:ChartKit.Measure.PolarLabelsPosition.End">
            <summary>
            Aligns the label to the end of the angle of the shape.
            </summary>
        </member>
        <member name="F:ChartKit.Measure.PolarLabelsPosition.Start">
            <summary>
            Aligns the label to the start of the angle of the shape.
            </summary>
        </member>
        <member name="F:ChartKit.Measure.PolarLabelsPosition.Middle">
            <summary>
            Aligns the label to the middle of the angle of the shape and the at the circumference radius.
            </summary>
        </member>
        <member name="F:ChartKit.Measure.PolarLabelsPosition.Outer">
            <summary>
            Aligns the label to the middle of the angle of the shape and the at the circumference diameter.
            </summary>
        </member>
        <member name="T:ChartKit.Measure.PolarScaler">
            <summary>
            Defines the polar scaler class, this class helps to scale from the data scale to the user interface scale and vise versa.
            </summary>
        </member>
        <member name="M:ChartKit.Measure.PolarScaler.#ctor(ChartKit.Drawing.LvcPoint,ChartKit.Drawing.LvcSize,ChartKit.Kernel.Sketches.IPolarAxis,ChartKit.Kernel.Sketches.IPolarAxis,System.Single,System.Single,System.Single,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.Measure.PolarScaler"/> class.
            </summary>
            <param name="drawMarginLocation">The draw margin location.</param>
            <param name="drawMarginSize">Size of the draw margin.</param>
            <param name="radiusAxis">The radius axis.</param>
            <param name="angleAxis">The angle axis.</param>
            <param name="innerRadius">The inner radius.</param>
            <param name="initialRotation">The initial rotation.</param>
            <param name="totalAngle">The total angle.</param>
            <param name="usePreviousScale">Indicates if the scaler should be built based on the previous known data.</param>
            <exception cref="T:System.Exception">The axis is not ready to be scaled.</exception>
        </member>
        <member name="P:ChartKit.Measure.PolarScaler.CenterX">
            <summary>
            Gets the center in the X axis.
            </summary>
        </member>
        <member name="P:ChartKit.Measure.PolarScaler.CenterY">
            <summary>
            Gets the center in the Y axis.
            </summary>
        </member>
        <member name="P:ChartKit.Measure.PolarScaler.InnerRadius">
            <summary>
            Gets the inner radius.
            </summary>
        </member>
        <member name="P:ChartKit.Measure.PolarScaler.MaxRadius">
            <summary>
            Gets the max radius in chart values scale.
            </summary>
        </member>
        <member name="P:ChartKit.Measure.PolarScaler.MinRadius">
            <summary>
            Gets the min radius in chart values scale.
            </summary>
        </member>
        <member name="P:ChartKit.Measure.PolarScaler.MinAngle">
            <summary>
            Gets the max angle.
            </summary>
        </member>
        <member name="P:ChartKit.Measure.PolarScaler.MaxAngle">
            <summary>
            Gets the min angle.
            </summary>
        </member>
        <member name="M:ChartKit.Measure.PolarScaler.ToPixels(ChartKit.Kernel.ChartPoint)">
            <summary>
            Converts to pixels.
            </summary>
            <param name="polarPoint">The polar point.</param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Measure.PolarScaler.ToPixels(System.Double,System.Double)">
            <summary>
            Converts to pixels.
            </summary>
            <param name="angle">The angle in chart values scale.</param>
            <param name="radius">The radius in chart values.</param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Measure.PolarScaler.ToChartValues(System.Double,System.Double)">
            <summary>
            Converts to chart values.
            </summary>
            <param name="x">The x coordinate in pixels.</param>
            <param name="y">The y coordinate in pixels.</param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Measure.PolarScaler.ToPixelsWithAngleInDegrees(System.Double,System.Double)">
            <summary>
            Converts to pixels.
            </summary>
            <param name="angle">The angle in degrees.</param>
            <param name="radius">The radius.</param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Measure.PolarScaler.GetAngle(System.Double)">
            <summary>
            Converts to degrees the given angle in chart values.
            </summary>
            <param name="angle">The angle in chart values.</param>
            <returns></returns>
        </member>
        <member name="T:ChartKit.Measure.PopUpPlacement">
            <summary>
            Defines the pop up placement.
            </summary>
        </member>
        <member name="F:ChartKit.Measure.PopUpPlacement.Top">
            <summary>
            Places PopUp at top.
            </summary>
        </member>
        <member name="F:ChartKit.Measure.PopUpPlacement.Bottom">
            <summary>
            Places PopUp at bottom.
            </summary>
        </member>
        <member name="F:ChartKit.Measure.PopUpPlacement.Left">
            <summary>
            Places PopUp at left.
            </summary>
        </member>
        <member name="F:ChartKit.Measure.PopUpPlacement.Right">
            <summary>
            Places PopUp at right.
            </summary>
        </member>
        <member name="T:ChartKit.Measure.RadialAlignment">
            <summary>
            Defines the radial alignment.
            </summary>
        </member>
        <member name="F:ChartKit.Measure.RadialAlignment.Outer">
            <summary>
            Aligns the element to the outer radius.
            </summary>
        </member>
        <member name="F:ChartKit.Measure.RadialAlignment.Center">
            <summary>
            Aligns the element to the center of the outer and inner radius.
            </summary>
        </member>
        <member name="F:ChartKit.Measure.RadialAlignment.Inner">
            <summary>
            Aligns the element to the inner radius.
            </summary>
        </member>
        <member name="T:ChartKit.Measure.Scaler">
            <summary>
            Defines the scaler class, this class helps to scale from the data scale to the user interface scale and vise versa.
            </summary>
        </member>
        <member name="M:ChartKit.Measure.Scaler.#ctor(ChartKit.Drawing.LvcPoint,ChartKit.Drawing.LvcSize,ChartKit.Kernel.Sketches.ICartesianAxis,ChartKit.Measure.Bounds)">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.Measure.Scaler"/> class.
            </summary>
            <param name="drawMarginLocation">The draw margin location.</param>
            <param name="drawMarginSize">Size of the draw margin.</param>
            <param name="axis">The axis.</param>
            <param name="bounds">Indicates the bounds to use.</param>
            <exception cref="T:System.Exception">The axis is not ready to be scaled.</exception>
        </member>
        <member name="P:ChartKit.Measure.Scaler.MaxVal">
            <summary>
            Gets the maximum value.
            </summary>
        </member>
        <member name="P:ChartKit.Measure.Scaler.MinVal">
            <summary>
            Gets the minimum value.
            </summary>
        </member>
        <member name="M:ChartKit.Measure.Scaler.MeasureInPixels(System.Double)">
            <summary>
            Measures an absolute value in pixels.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Measure.Scaler.ToPixels(System.Double)">
            <summary>
            Converts a given value (in chart values) to pixels.
            </summary>
            <param name="value">The value in chart values.</param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Measure.Scaler.ToChartValues(System.Double)">
            <summary>
            Converts a given value (in pixels) to chart values.
            </summary>
            <param name="pixels">The value in pixels.</param>
            <returns></returns>
        </member>
        <member name="T:ChartKit.Measure.SeriesBounds">
            <summary>
            Defines the series bounds class, it contains the data bounds in a series.
            </summary>
        </member>
        <member name="M:ChartKit.Measure.SeriesBounds.#ctor(ChartKit.Kernel.DimensionalBounds,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.Measure.SeriesBounds"/> class.
            </summary>
            <param name="bounds">The bounds.</param>
            <param name="isPrevious">if set to <c>true</c> [is previous].</param>
        </member>
        <member name="P:ChartKit.Measure.SeriesBounds.Bounds">
            <summary>
            Gets the bounds.
            </summary>
            <value>
            The bounds.
            </value>
        </member>
        <member name="P:ChartKit.Measure.SeriesBounds.HasData">
            <summary>
            Gets a value indicating whether this instance is previous.
            </summary>
            <value>
              <c>true</c> if this instance is previous; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:ChartKit.Measure.StackPosition`1">
            <summary>
            Defines the stack position.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
        </member>
        <member name="P:ChartKit.Measure.StackPosition`1.Stacker">
            <summary>
            Gets or sets the stacker.
            </summary>
            <value>
            The stacker.
            </value>
        </member>
        <member name="P:ChartKit.Measure.StackPosition`1.Position">
            <summary>
            Gets or sets the position.
            </summary>
            <value>
            The position.
            </value>
        </member>
        <member name="M:ChartKit.Measure.StackPosition`1.StackPoint(ChartKit.Kernel.ChartPoint)">
            <summary>
            Stacks the point.
            </summary>
            <param name="point">The point.</param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Measure.StackPosition`1.GetStack(ChartKit.Kernel.ChartPoint)">
            <summary>
            Gets the stack.
            </summary>
            <param name="point">The point.</param>
            <returns></returns>
        </member>
        <member name="T:ChartKit.Measure.TooltipFindingStrategy">
            <summary>
            Defines the tool tip finding strategy.
            </summary>
        </member>
        <member name="F:ChartKit.Measure.TooltipFindingStrategy.Automatic">
            <summary>
            The automatic mode, it will be calculated automatically based on the series and the chart.
            </summary>
        </member>
        <member name="F:ChartKit.Measure.TooltipFindingStrategy.CompareAll">
            <summary>
            Looks for all the points that contain the pointer positon.
            </summary>
        </member>
        <member name="F:ChartKit.Measure.TooltipFindingStrategy.CompareOnlyX">
            <summary>
            Looks for all the points that contain the pointer positon ignoring the Y axis.
            </summary>
        </member>
        <member name="F:ChartKit.Measure.TooltipFindingStrategy.CompareOnlyY">
            <summary>
            Looks for all the points that contain the pointer positon ignoring the X axis.
            </summary>
        </member>
        <member name="F:ChartKit.Measure.TooltipFindingStrategy.CompareAllTakeClosest">
            <summary>
            Looks for the closest point (to the pointer) per series that contains the pointer positon.
            </summary>
        </member>
        <member name="F:ChartKit.Measure.TooltipFindingStrategy.CompareOnlyXTakeClosest">
            <summary>
            Looks for the closest point (to the pointer) per series that contains the pointer positon ignoring the Y axis.
            </summary>
        </member>
        <member name="F:ChartKit.Measure.TooltipFindingStrategy.CompareOnlyYTakeClosest">
            <summary>
            Looks for the closest point (to the pointer) per series that contains the pointer positon ignoring the X axis.
            </summary>
        </member>
        <member name="T:ChartKit.Measure.ToolTipMetaData">
            <summary>
            Defines the tool tip meta data class.
            </summary>
        </member>
        <member name="P:ChartKit.Measure.ToolTipMetaData.ToolTipPlacement">
            <summary>
            Gets or sets the tool tip placement.
            </summary>
        </member>
        <member name="T:ChartKit.Measure.TooltipPosition">
            <summary>
            Defines the tool tip position.
            </summary>
        </member>
        <member name="F:ChartKit.Measure.TooltipPosition.Hidden">
            <summary>
            The hidden position, tool tips will be hidden.
            </summary>
        </member>
        <member name="F:ChartKit.Measure.TooltipPosition.Auto">
            <summary>
            Places the tool tip based on the space available.
            </summary>
        </member>
        <member name="F:ChartKit.Measure.TooltipPosition.Top">
            <summary>
            The top position, places the tool tip at the top of the hovered point,
            if there is not enough space, the library will place it in another position.
            </summary>
        </member>
        <member name="F:ChartKit.Measure.TooltipPosition.Bottom">
            <summary>
            The bottom position, places the tool tip at the bottom of the hovered point,
            if there is not enough space, the library will place it in another position.
            </summary>
        </member>
        <member name="F:ChartKit.Measure.TooltipPosition.Left">
            <summary>
            The left position, places the tool tip at the left of the hovered point.
            if there is not enough space, the library will place it in another position.
            </summary>
        </member>
        <member name="F:ChartKit.Measure.TooltipPosition.Right">
            <summary>
            The right position, places the tool tip at the right of the hovered point.
            if there is not enough space, the library will place it in another position.
            </summary>
        </member>
        <member name="F:ChartKit.Measure.TooltipPosition.Center">
            <summary>
            The center position, places the tool tip at the center of the hovered point.
            </summary>
        </member>
        <member name="T:ChartKit.Measure.VectorManager`2">
            <summary>
            Defines the vector manager class.
            </summary>
            <typeparam name="TSegment">The type of the segment.</typeparam>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
        </member>
        <member name="M:ChartKit.Measure.VectorManager`2.#ctor(ChartKit.Drawing.IVectorGeometry{`0,`1})">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.Measure.VectorManager`2"/> class.
            </summary>
            <param name="areaGeometry">The area geometry</param>
        </member>
        <member name="P:ChartKit.Measure.VectorManager`2.AreaGeometry">
            <summary>
            Gets the area geometry.
            </summary>
        </member>
        <member name="M:ChartKit.Measure.VectorManager`2.AddConsecutiveSegment(`0,System.Boolean)">
            <summary>
            Adds a segment to the area geometry.
            </summary>
            <param name="segment">The segment.</param>
            <param name="followsPrevious">Indicates whether the segment follows the previous segment visual state.</param>
        </member>
        <member name="M:ChartKit.Measure.VectorManager`2.Clear">
            <summary>
            Clears the current vector segments.
            </summary>
        </member>
        <member name="M:ChartKit.Measure.VectorManager`2.End">
            <summary>
            Ends the vector.
            </summary>
        </member>
        <member name="M:ChartKit.Measure.VectorManager`2.LogPath">
            <summary>
            Logs the path segments ids.
            </summary>
        </member>
        <member name="T:ChartKit.Measure.ZoomAndPanMode">
            <summary>
            Defines the zooming and panning mode.
            </summary>
        </member>
        <member name="F:ChartKit.Measure.ZoomAndPanMode.None">
            <summary>
            Disables zooming and panning.
            </summary>
        </member>
        <member name="F:ChartKit.Measure.ZoomAndPanMode.PanX">
            <summary>
            Enables panning on the X axis.
            </summary>
        </member>
        <member name="F:ChartKit.Measure.ZoomAndPanMode.PanY">
            <summary>
            Enables panning on the Y axis.
            </summary>
        </member>
        <member name="F:ChartKit.Measure.ZoomAndPanMode.ZoomX">
            <summary>
            Enables zooming on the X axis.
            </summary>
        </member>
        <member name="F:ChartKit.Measure.ZoomAndPanMode.ZoomY">
            <summary>
            Enables zooming on the Y axis.
            </summary>
        </member>
        <member name="F:ChartKit.Measure.ZoomAndPanMode.InvertPanningPointerTrigger">
            <summary>
            When this flag is present the panning will be triggered using the right click on desktop devices and the touch-and-hold gesture on touch devices.
            The "Zoom by section" feature will be triggered to the left click on desktop devices and the touch-and-hold gesture on touch devices.
            </summary>
        </member>
        <member name="F:ChartKit.Measure.ZoomAndPanMode.X">
            <summary>
            Enables zooming and panning on the X axis.
            </summary>
        </member>
        <member name="F:ChartKit.Measure.ZoomAndPanMode.Y">
            <summary>
            Enables zooming and panning on the Y axis.
            </summary>
        </member>
        <member name="F:ChartKit.Measure.ZoomAndPanMode.Both">
            <summary>
            Enables zooming and panning on both axes.
            </summary>
        </member>
        <member name="T:ChartKit.Measure.ZoomDirection">
            <summary>
            Defines the zooming direction.
            </summary>
        </member>
        <member name="F:ChartKit.Measure.ZoomDirection.ZoomIn">
            <summary>
            The zoom in
            </summary>
        </member>
        <member name="F:ChartKit.Measure.ZoomDirection.ZoomOut">
            <summary>
            The zoom out
            </summary>
        </member>
        <member name="F:ChartKit.Measure.ZoomDirection.DefinedByScaleFactor">
            <summary>
            Indicates that the direction is defined by the distance variable.
            </summary>
        </member>
        <member name="T:ChartKit.Motion.AnimatableAxisBounds">
            <summary>
            Defines the animatable bounds class.
            </summary>
        </member>
        <member name="M:ChartKit.Motion.AnimatableAxisBounds.#ctor">
            <summary>
            Intializes a new isntance of the <see cref="T:ChartKit.Motion.AnimatableAxisBounds"/> class.
            </summary>
        </member>
        <member name="P:ChartKit.Motion.AnimatableAxisBounds.MaxLimit">
            <summary>
            Gets or sets the max limit.
            </summary>
        </member>
        <member name="P:ChartKit.Motion.AnimatableAxisBounds.MinLimit">
            <summary>
            Gets or sets the min limit.
            </summary>
        </member>
        <member name="P:ChartKit.Motion.AnimatableAxisBounds.MaxDataBound">
            <summary>
            Gets or sets the max data limit.
            </summary>
        </member>
        <member name="P:ChartKit.Motion.AnimatableAxisBounds.MinDataBound">
            <summary>
            Gets or sets the min data limit.
            </summary>
        </member>
        <member name="P:ChartKit.Motion.AnimatableAxisBounds.MaxVisibleBound">
            <summary>
            Gets or sets the max visible limit.
            </summary>
        </member>
        <member name="P:ChartKit.Motion.AnimatableAxisBounds.MinVisibleBound">
            <summary>
            Gets or sets the min visible limit.
            </summary>
        </member>
        <member name="P:ChartKit.Motion.AnimatableAxisBounds.HasPreviousState">
            <summary>
            Gets a valuea indicating whewhter the bounds have a previous state.
            </summary>
        </member>
        <member name="T:ChartKit.Motion.AnimatableContainer">
            <summary>
            Defines the animatable container class.
            </summary>
        </member>
        <member name="M:ChartKit.Motion.AnimatableContainer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.Motion.AnimatableContainer"/> class.
            </summary>
        </member>
        <member name="P:ChartKit.Motion.AnimatableContainer.Location">
            <summary>
            Gets or sets the location.
            </summary>
        </member>
        <member name="P:ChartKit.Motion.AnimatableContainer.Size">
            <summary>
            Gets or sets the size.
            </summary>
        </member>
        <member name="P:ChartKit.Motion.AnimatableContainer.HasPreviousState">
            <summary>
            Gets a valuea indicating whewhter the container have a previous state.
            </summary>
        </member>
        <member name="T:ChartKit.Motion.ColorMotionProperty">
            <summary>
            Defines the color motion property class.
            </summary>
        </member>
        <member name="M:ChartKit.Motion.ColorMotionProperty.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.Motion.ColorMotionProperty"/> class.
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="M:ChartKit.Motion.ColorMotionProperty.#ctor(System.String,ChartKit.Drawing.LvcColor)">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.Motion.ColorMotionProperty"/> class.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:ChartKit.Motion.ColorMotionProperty.OnGetMovement(System.Single)">
            <inheritdoc cref="M:ChartKit.Motion.MotionProperty`1.OnGetMovement(System.Single)" />
        </member>
        <member name="T:ChartKit.Motion.DoubleMotionProperty">
            <summary>
            Defines the double motion property class.
            </summary>
        </member>
        <member name="M:ChartKit.Motion.DoubleMotionProperty.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.Motion.DoubleMotionProperty"/> class.
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="M:ChartKit.Motion.DoubleMotionProperty.#ctor(System.String,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.Motion.DoubleMotionProperty"/> class.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:ChartKit.Motion.DoubleMotionProperty.OnGetMovement(System.Single)">
            <inheritdoc cref="M:ChartKit.Motion.MotionProperty`1.OnGetMovement(System.Single)" />
        </member>
        <member name="T:ChartKit.Motion.FloatMotionProperty">
            <summary>
            Defines the float motion property class.
            </summary>
        </member>
        <member name="M:ChartKit.Motion.FloatMotionProperty.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.Motion.FloatMotionProperty"/> class.
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="M:ChartKit.Motion.FloatMotionProperty.#ctor(System.String,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.Motion.FloatMotionProperty"/> class.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:ChartKit.Motion.FloatMotionProperty.OnGetMovement(System.Single)">
            <inheritdoc cref="M:ChartKit.Motion.MotionProperty`1.OnGetMovement(System.Single)" />
        </member>
        <member name="T:ChartKit.Motion.IMotionProperty">
            <summary>
            Defines a motions property.
            </summary>
        </member>
        <member name="P:ChartKit.Motion.IMotionProperty.IsCompleted">
            <summary>
            Gets or sets a value indicating whether this instance is completed.
            </summary>
            <value>
              <c>true</c> if this instance is completed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:ChartKit.Motion.IMotionProperty.PropertyName">
            <summary>
            Gets the name of the property.
            </summary>
            <value>
            The name of the property.
            </value>
        </member>
        <member name="P:ChartKit.Motion.IMotionProperty.Animation">
            <summary>
            Gets or sets the animation.
            </summary>
            <value>
            The animation.
            </value>
        </member>
        <member name="M:ChartKit.Motion.IMotionProperty.CopyFrom(ChartKit.Motion.IMotionProperty)">
            <summary>
            Copies into this instance the source property.
            </summary>
            <param name="source">The source.</param>
        </member>
        <member name="T:ChartKit.Motion.MotionCanvas`1">
            <summary>
            Defines a canvas that is able to animate the shapes inside it.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
        </member>
        <member name="M:ChartKit.Motion.MotionCanvas`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.Motion.MotionCanvas`1"/> class.
            </summary>
        </member>
        <member name="E:ChartKit.Motion.MotionCanvas`1.Invalidated">
            <summary>
            Occurs when the visual is invalidated.
            </summary>
        </member>
        <member name="E:ChartKit.Motion.MotionCanvas`1.Validated">
            <summary>
            Occurs when all the visuals in the canvas are valid.
            </summary>
        </member>
        <member name="P:ChartKit.Motion.MotionCanvas`1.IsValid">
            <summary>
            Returns true if the visual is valid.
            </summary>
            <value>
              <c>true</c> if this instance is valid; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:ChartKit.Motion.MotionCanvas`1.Sync">
            <summary>
            Gets the synchronize object.
            </summary>
            <value>
            The synchronize.
            </value>
        </member>
        <member name="P:ChartKit.Motion.MotionCanvas`1.Trackers">
            <summary>
            Gets the animatables collection.
            </summary>
        </member>
        <member name="M:ChartKit.Motion.MotionCanvas`1.DrawFrame(`0)">
            <summary>
            Draws the frame.
            </summary>
            <param name="context">The context.</param>
            <returns></returns>
        </member>
        <member name="P:ChartKit.Motion.MotionCanvas`1.DrawablesCount">
            <summary>
            Gets the drawables count.
            </summary>
            <value>
            The drawables count.
            </value>
        </member>
        <member name="M:ChartKit.Motion.MotionCanvas`1.Invalidate">
            <summary>
            Invalidates this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Motion.MotionCanvas`1.AddDrawableTask(ChartKit.Drawing.IPaint{`0})">
            <summary>
            Adds a drawable task.
            </summary>
            <param name="task">The task.</param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Motion.MotionCanvas`1.SetPaintTasks(System.Collections.Generic.HashSet{ChartKit.Drawing.IPaint{`0}})">
            <summary>
            Sets the paint tasks.
            </summary>
            <param name="tasks">The tasks.</param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Motion.MotionCanvas`1.RemovePaintTask(ChartKit.Drawing.IPaint{`0})">
            <summary>
            Removes the paint task.
            </summary>
            <param name="task">The task.</param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Motion.MotionCanvas`1.Clear">
            <summary>
            Clears the canvas and tasks.
            </summary>
        </member>
        <member name="M:ChartKit.Motion.MotionCanvas`1.CountGeometries">
            <summary>
            Counts the geometries.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Motion.MotionCanvas`1.Dispose">
            <summary>
            Releases the resources.
            </summary>
        </member>
        <member name="T:ChartKit.Motion.MotionProperty`1">
            <summary>
            The <see cref="T:ChartKit.Motion.MotionProperty`1"/> object tracks where a property of a <see cref="T:ChartKit.Drawing.Animatable"/> is in a time line.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:ChartKit.Motion.MotionProperty`1.fromValue">
            <summary>
            From value
            </summary>
        </member>
        <member name="F:ChartKit.Motion.MotionProperty`1.toValue">
            <summary>
            To value
            </summary>
        </member>
        <member name="M:ChartKit.Motion.MotionProperty`1.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.Motion.MotionProperty`1"/> class.
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="P:ChartKit.Motion.MotionProperty`1.FromValue">
            <summary>
            Gets the value where the transition began.
            </summary>
        </member>
        <member name="P:ChartKit.Motion.MotionProperty`1.ToValue">
            <summary>
            Gets the value where the transition finished or will finish.
            </summary>
        </member>
        <member name="P:ChartKit.Motion.MotionProperty`1.Animation">
            <inheritdoc cref="P:ChartKit.Motion.IMotionProperty.Animation"/>
        </member>
        <member name="P:ChartKit.Motion.MotionProperty`1.PropertyName">
            <inheritdoc cref="P:ChartKit.Motion.IMotionProperty.PropertyName"/>
        </member>
        <member name="P:ChartKit.Motion.MotionProperty`1.IsCompleted">
            <inheritdoc cref="P:ChartKit.Motion.IMotionProperty.IsCompleted"/>
        </member>
        <member name="M:ChartKit.Motion.MotionProperty`1.CopyFrom(ChartKit.Motion.IMotionProperty)">
            <inheritdoc cref="M:ChartKit.Motion.IMotionProperty.CopyFrom(ChartKit.Motion.IMotionProperty)"/>
        </member>
        <member name="M:ChartKit.Motion.MotionProperty`1.SetMovement(`0,ChartKit.Drawing.Animatable)">
            <summary>
            Moves to the specified value.
            </summary>
            <param name="value">The value to move to.</param>
            <param name="animatable">The <see cref="T:ChartKit.Drawing.IAnimatable"/> instance that is moving.</param>
        </member>
        <member name="M:ChartKit.Motion.MotionProperty`1.GetMovement(ChartKit.Drawing.Animatable)">
            <summary>
            Gets the current movement in the <see cref="P:ChartKit.Motion.MotionProperty`1.Animation"/>.
            </summary>
            <param name="animatable"></param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Motion.MotionProperty`1.GetCurrentValue(ChartKit.Drawing.Animatable)">
            <summary>
            Gets the current value in the time line.
            </summary>
            <param name="animatable">The animatable object.</param>
            <returns>The current value.</returns>
        </member>
        <member name="M:ChartKit.Motion.MotionProperty`1.OnGetMovement(System.Single)">
            <summary>
            Called to get the movement at a specific progress.
            </summary>
            <param name="progress">The progress.</param>
            <returns></returns>
        </member>
        <member name="T:ChartKit.Motion.NullableDoubleMotionProperty">
            <summary>
            Defines the <see cref="T:ChartKit.Motion.NullableDoubleMotionProperty"/> class.
            </summary>
        </member>
        <member name="M:ChartKit.Motion.NullableDoubleMotionProperty.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.Motion.NullableDoubleMotionProperty"/> class.
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="M:ChartKit.Motion.NullableDoubleMotionProperty.#ctor(System.String,System.Nullable{System.Double})">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.Motion.FloatMotionProperty"/> class.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:ChartKit.Motion.NullableDoubleMotionProperty.OnGetMovement(System.Single)">
            <inheritdoc cref="M:ChartKit.Motion.MotionProperty`1.OnGetMovement(System.Single)" />
        </member>
        <member name="T:ChartKit.Motion.PointMotionProperty">
            <summary>
            Defines the <see cref="T:ChartKit.Drawing.LvcPoint"/> motion property class.
            </summary>
        </member>
        <member name="M:ChartKit.Motion.PointMotionProperty.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.Motion.PointMotionProperty"/> class.
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="M:ChartKit.Motion.PointMotionProperty.#ctor(System.String,ChartKit.Drawing.LvcPoint)">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.Motion.PointMotionProperty"/> class.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:ChartKit.Motion.PointMotionProperty.OnGetMovement(System.Single)">
            <inheritdoc cref="M:ChartKit.Motion.MotionProperty`1.OnGetMovement(System.Single)" />
        </member>
        <member name="T:ChartKit.Motion.SizeMotionProperty">
            <summary>
            Defines the <see cref="T:ChartKit.Drawing.LvcSize"/> motion property class.
            </summary>
        </member>
        <member name="M:ChartKit.Motion.SizeMotionProperty.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.Motion.SizeMotionProperty"/> class.
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="M:ChartKit.Motion.SizeMotionProperty.#ctor(System.String,ChartKit.Drawing.LvcSize)">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.Motion.SizeMotionProperty"/> class.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:ChartKit.Motion.SizeMotionProperty.OnGetMovement(System.Single)">
            <inheritdoc cref="M:ChartKit.Motion.MotionProperty`1.OnGetMovement(System.Single)" />
        </member>
        <member name="T:ChartKit.PieChart`1">
            <summary>
            Defines a pie chart.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <seealso cref="T:ChartKit.Chart`1" />
        </member>
        <member name="M:ChartKit.PieChart`1.#ctor(ChartKit.Kernel.Sketches.IPieChartView{`0},System.Action{ChartKit.Kernel.ChartKitSettings},ChartKit.Motion.MotionCanvas{`0},System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.PieChart`1"/> class.
            </summary>
            <param name="view">The view.</param>
            <param name="defaultPlatformConfig">The default platform configuration.</param>
            <param name="canvas">The canvas.</param>
            <param name="requiresLegendMeasureAlways">Forces the legends to redraw with every measure request.</param>
        </member>
        <member name="P:ChartKit.PieChart`1.Series">
            <inheritdoc cref="P:ChartKit.Chart`1.Series"/>
        </member>
        <member name="P:ChartKit.PieChart`1.VisibleSeries">
            <inheritdoc cref="P:ChartKit.Chart`1.VisibleSeries"/>
        </member>
        <member name="P:ChartKit.PieChart`1.View">
            <summary>
            Gets the view.
            </summary>
            <value>
            The view.
            </value>
        </member>
        <member name="P:ChartKit.PieChart`1.ValueBounds">
            <summary>
            Gets the value bounds.
            </summary>
            <value>
            The value bounds.
            </value>
        </member>
        <member name="P:ChartKit.PieChart`1.IndexBounds">
            <summary>
            Gets the index bounds.
            </summary>
            <value>
            The index bounds.
            </value>
        </member>
        <member name="P:ChartKit.PieChart`1.PushoutBounds">
            <summary>
            Gets the pushout bounds.
            </summary>
            <value>
            The pushout bounds.
            </value>
        </member>
        <member name="M:ChartKit.PieChart`1.FindHoveredPointsBy(ChartKit.Drawing.LvcPoint)">
            <summary>
            Finds the points near to the specified point.
            </summary>
            <param name="pointerPosition">The pointer position.</param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.PieChart`1.Measure">
            <summary>
            Measures this chart.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ChartKit.PieChart`1.Unload">
            <inheritdoc cref="M:ChartKit.Chart`1.Unload"/>
        </member>
        <member name="T:ChartKit.PieSeries`5">
            <summary>
            Defines a pie series.
            </summary>
            <typeparam name="TModel">The type of the model.</typeparam>
            <typeparam name="TVisual">The type of the visual.</typeparam>
            <typeparam name="TLabel">The type of the label.</typeparam>
            <typeparam name="TMiniatureGeometry">The type of the miniature geometry, used in tool tips and legends.</typeparam>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
        </member>
        <member name="M:ChartKit.PieSeries`5.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.PieSeries`5"/> class.
            </summary>
        </member>
        <member name="P:ChartKit.PieSeries`5.Stroke">
            <summary>
            Gets or sets the stroke.
            </summary>
            <value>
            The stroke.
            </value>
        </member>
        <member name="P:ChartKit.PieSeries`5.Fill">
            <summary>
            Gets or sets the fill.
            </summary>
            <value>
            The fill.
            </value>
        </member>
        <member name="P:ChartKit.PieSeries`5.Pushout">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.IPieSeries`1.Pushout"/>
        </member>
        <member name="P:ChartKit.PieSeries`5.InnerRadius">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.IPieSeries`1.InnerRadius"/>
        </member>
        <member name="P:ChartKit.PieSeries`5.OuterRadiusOffset">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.IPieSeries`1.OuterRadiusOffset"/>
        </member>
        <member name="P:ChartKit.PieSeries`5.MaxOuterRadius">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.IPieSeries`1.MaxOuterRadius"/>
        </member>
        <member name="P:ChartKit.PieSeries`5.HoverPushout">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.IPieSeries`1.HoverPushout"/>
        </member>
        <member name="P:ChartKit.PieSeries`5.RelativeInnerRadius">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.IPieSeries`1.RelativeInnerRadius"/>
        </member>
        <member name="P:ChartKit.PieSeries`5.RelativeOuterRadius">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.IPieSeries`1.RelativeOuterRadius"/>
        </member>
        <member name="P:ChartKit.PieSeries`5.MaxRadialColumnWidth">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.IPieSeries`1.MaxRadialColumnWidth"/>
        </member>
        <member name="P:ChartKit.PieSeries`5.RadialAlign">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.IPieSeries`1.RadialAlign"/>
        </member>
        <member name="P:ChartKit.PieSeries`5.CornerRadius">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.IPieSeries`1.CornerRadius"/>
        </member>
        <member name="P:ChartKit.PieSeries`5.InvertedCornerRadius">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.IPieSeries`1.InvertedCornerRadius"/>
        </member>
        <member name="P:ChartKit.PieSeries`5.IsFillSeries">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.IPieSeries`1.IsFillSeries"/>
        </member>
        <member name="P:ChartKit.PieSeries`5.IsRelativeToMinValue">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.IPieSeries`1.IsRelativeToMinValue"/>
        </member>
        <member name="P:ChartKit.PieSeries`5.DataLabelsPosition">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.IPieSeries`1.DataLabelsPosition"/>
        </member>
        <member name="P:ChartKit.PieSeries`5.ToolTipLabelFormatter">
            <summary>
            Gets or sets the tool tip label formatter for the Y axis, this function will build the label when a point in this series 
            is shown inside a tool tip.
            </summary>
            <value>
            The tool tip label formatter.
            </value>
        </member>
        <member name="M:ChartKit.PieSeries`5.Invalidate(ChartKit.Chart{`4})">
            <inheritdoc cref="M:ChartKit.Kernel.ChartElement`1.Invalidate(ChartKit.Chart{`0})"/>
        </member>
        <member name="M:ChartKit.PieSeries`5.GetBounds(ChartKit.PieChart{`4})">
            <inheritdoc cref="M:ChartKit.Kernel.Sketches.IPieSeries`1.GetBounds(ChartKit.PieChart{`0})"/>
        </member>
        <member name="M:ChartKit.PieSeries`5.GetMiniaturesSketch">
            <inheritdoc cref="M:ChartKit.Series`4.GetMiniaturesSketch"/>
        </member>
        <member name="M:ChartKit.PieSeries`5.GetPrimaryToolTipText(ChartKit.Kernel.ChartPoint)">
            <inheritdoc cref="M:ChartKit.ISeries.GetPrimaryToolTipText(ChartKit.Kernel.ChartPoint)"/>
        </member>
        <member name="M:ChartKit.PieSeries`5.GetSecondaryToolTipText(ChartKit.Kernel.ChartPoint)">
            <inheritdoc cref="M:ChartKit.ISeries.GetSecondaryToolTipText(ChartKit.Kernel.ChartPoint)"/>
        </member>
        <member name="M:ChartKit.PieSeries`5.GetStackGroup">
            <summary>
            GEts the stack group
            </summary>
            <returns></returns>
            <inheritdoc />
        </member>
        <member name="M:ChartKit.PieSeries`5.GetPaintTasks">
            <inheritdoc cref="M:ChartKit.Kernel.ChartElement`1.GetPaintTasks"/>
        </member>
        <member name="M:ChartKit.PieSeries`5.OnPointerEnter(ChartKit.Kernel.ChartPoint)">
            <inheritdoc cref="M:ChartKit.Series`4.OnPointerEnter(ChartKit.Kernel.ChartPoint)"/>
        </member>
        <member name="M:ChartKit.PieSeries`5.OnPointerLeft(ChartKit.Kernel.ChartPoint)">
            <inheritdoc cref="M:ChartKit.Series`4.OnPointerLeft(ChartKit.Kernel.ChartPoint)"/>
        </member>
        <member name="M:ChartKit.PieSeries`5.SetDefaultPointTransitions(ChartKit.Kernel.ChartPoint)">
            <summary>
            Sets the default point transitions.
            </summary>
            <param name="chartPoint">The chart point.</param>
            <exception cref="T:System.Exception">Unable to initialize the point instance.</exception>
        </member>
        <member name="M:ChartKit.PieSeries`5.SoftDeleteOrDisposePoint(ChartKit.Kernel.ChartPoint,ChartKit.Measure.Scaler,ChartKit.Measure.Scaler)">
            <summary>
            Softs the delete point.
            </summary>
            <param name="point">The point.</param>
            <param name="primaryScale">The primary scale.</param>
            <param name="secondaryScale">The secondary scale.</param>
        </member>
        <member name="M:ChartKit.PieSeries`5.GetLabelPolarPosition(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,ChartKit.Drawing.LvcSize,ChartKit.Measure.PolarLabelsPosition)">
            <summary>
            Gets the label polar position.
            </summary>
            <param name="centerX">The center x.</param>
            <param name="centerY">The center y.</param>
            <param name="innerRadius">The iner radius.</param>
            <param name="outerRadius">The outer radius.</param>
            <param name="startAngle">The start angle.</param>
            <param name="sweepAngle">The sweep angle.</param>
            <param name="labelSize">Size of the label.</param>
            <param name="position">The position.</param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.PieSeries`5.SoftDeleteOrDispose(ChartKit.Kernel.Sketches.IChartView)">
            <summary>
            Softly deletes the all points from the chart.
            </summary>
            <param name="chart"></param>
            <inheritdoc cref="M:ChartKit.ISeries.SoftDeleteOrDispose(ChartKit.Kernel.Sketches.IChartView)" />
        </member>
        <member name="T:ChartKit.PolarAxis`4">
            <summary>
            Defines an Axis in a Cartesian chart.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <typeparam name="TTextGeometry">The type of the text geometry.</typeparam>
            <typeparam name="TCircleGeometry">The type of the circle geometry.</typeparam>
            /// <typeparam name="TLineGeometry">The type of the line geometry.</typeparam>
        </member>
        <member name="F:ChartKit.PolarAxis`4.activeSeparators">
            <summary>
            The active separators
            </summary>
        </member>
        <member name="P:ChartKit.PolarAxis`4.Name">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.IPlane.Name"/>
        </member>
        <member name="P:ChartKit.PolarAxis`4.NameTextSize">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.IPlane.NameTextSize"/>
        </member>
        <member name="P:ChartKit.PolarAxis`4.NamePadding">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.IPlane.NamePadding"/>
        </member>
        <member name="P:ChartKit.PolarAxis`4.Orientation">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.IPolarAxis.Orientation"/>
        </member>
        <member name="P:ChartKit.PolarAxis`4.LabelsAngle">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.IPolarAxis.LabelsAngle"/>
        </member>
        <member name="P:ChartKit.PolarAxis`4.Labeler">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.IPlane.Labeler"/>
        </member>
        <member name="P:ChartKit.PolarAxis`4.MinStep">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.IPlane.MinStep"/>
        </member>
        <member name="P:ChartKit.PolarAxis`4.ForceStepToMin">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.IPlane.ForceStepToMin"/>
        </member>
        <member name="P:ChartKit.PolarAxis`4.MinLimit">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.IPlane.MinLimit"/>
        </member>
        <member name="P:ChartKit.PolarAxis`4.MaxLimit">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.IPlane.MaxLimit"/>
        </member>
        <member name="P:ChartKit.PolarAxis`4.UnitWidth">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.IPlane.UnitWidth"/>
        </member>
        <member name="P:ChartKit.PolarAxis`4.LabelsRotation">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.IPlane.LabelsRotation"/>
        </member>
        <member name="P:ChartKit.PolarAxis`4.TextSize">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.IPlane.TextSize"/>
        </member>
        <member name="P:ChartKit.PolarAxis`4.Labels">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.IPlane.Labels"/>
        </member>
        <member name="P:ChartKit.PolarAxis`4.LabelsPadding">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.IPolarAxis.LabelsPadding"/>
        </member>
        <member name="P:ChartKit.PolarAxis`4.LabelsVerticalAlignment">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.IPolarAxis.LabelsVerticalAlignment"/>
        </member>
        <member name="P:ChartKit.PolarAxis`4.LabelsHorizontalAlignment">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.IPolarAxis.LabelsHorizontalAlignment"/>
        </member>
        <member name="P:ChartKit.PolarAxis`4.LabelsBackground">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.IPolarAxis.LabelsBackground"/>
        </member>
        <member name="P:ChartKit.PolarAxis`4.ShowSeparatorLines">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.IPlane.ShowSeparatorLines"/>
        </member>
        <member name="P:ChartKit.PolarAxis`4.CustomSeparators">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.IPlane.CustomSeparators"/>
        </member>
        <member name="P:ChartKit.PolarAxis`4.IsVisible">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.IPlane.IsVisible"/>
        </member>
        <member name="P:ChartKit.PolarAxis`4.IsInverted">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.IPlane.IsInverted"/>
        </member>
        <member name="P:ChartKit.PolarAxis`4.NamePaint">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.IPlane`1.NamePaint"/>
        </member>
        <member name="P:ChartKit.PolarAxis`4.LabelsPaint">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.IPlane`1.LabelsPaint"/>
        </member>
        <member name="P:ChartKit.PolarAxis`4.SeparatorsPaint">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.IPlane`1.SeparatorsPaint"/>
        </member>
        <member name="P:ChartKit.PolarAxis`4.AnimationsSpeed">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.IPlane.AnimationsSpeed"/>
        </member>
        <member name="P:ChartKit.PolarAxis`4.EasingFunction">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.IPlane.EasingFunction"/>
        </member>
        <member name="E:ChartKit.PolarAxis`4.Initialized">
            <inheritdoc cref="E:ChartKit.Kernel.Sketches.IPolarAxis.Initialized"/>
        </member>
        <member name="M:ChartKit.PolarAxis`4.Invalidate(ChartKit.Chart{`0})">
            <inheritdoc cref="M:ChartKit.Kernel.ChartElement`1.Invalidate(ChartKit.Chart{`0})"/>
        </member>
        <member name="M:ChartKit.PolarAxis`4.GetNameLabelSize(ChartKit.Chart{`0})">
            <inheritdoc cref="M:ChartKit.Kernel.Sketches.IPlane`1.GetNameLabelSize(ChartKit.Chart{`0})"/>
        </member>
        <member name="M:ChartKit.PolarAxis`4.GetPossibleSize(ChartKit.Chart{`0})">
            <inheritdoc cref="M:ChartKit.Kernel.Sketches.IPlane`1.GetPossibleSize(ChartKit.Chart{`0})"/>
        </member>
        <member name="M:ChartKit.PolarAxis`4.ChartKit#Kernel#Sketches#IPolarAxis#Initialize(ChartKit.Measure.PolarAxisOrientation)">
            <inheritdoc cref="M:ChartKit.Kernel.Sketches.IPolarAxis.Initialize(ChartKit.Measure.PolarAxisOrientation)"/>
        </member>
        <member name="M:ChartKit.PolarAxis`4.Delete(ChartKit.Chart{`0})">
            <summary>
            Deletes the specified chart.
            </summary>
            <param name="chart">The chart.</param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.PolarAxis`4.RemoveFromUI(ChartKit.Chart{`0})">
            <inheritdoc cref="M:ChartKit.Kernel.IChartElement`1.RemoveFromUI(ChartKit.Chart{`0})"/>
        </member>
        <member name="M:ChartKit.PolarAxis`4.SoftDeleteSeparator(ChartKit.Chart{`0},ChartKit.Kernel.Helpers.IVisualSeparator{`0},ChartKit.Measure.PolarScaler)">
            <summary>
            Softly deletes the separator.
            </summary>
            <param name="chart">The chart.</param>
            <param name="separator">The separator.</param>
            <param name="scaler">The scale.</param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.PolarAxis`4.OnPaintChanged(System.String)">
            <summary>
            Called when [paint changed].
            </summary>
            <param name="propertyName">Name of the property.</param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.PolarAxis`4.GetPaintTasks">
            <summary>
            Gets the paint tasks.
            </summary>
            <returns></returns>
        </member>
        <member name="T:ChartKit.PolarChart`1">
            <summary>
            Defines a Polar chart.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <seealso cref="T:ChartKit.Chart`1" />
        </member>
        <member name="M:ChartKit.PolarChart`1.#ctor(ChartKit.Kernel.Sketches.IPolarChartView{`0},System.Action{ChartKit.Kernel.ChartKitSettings},ChartKit.Motion.MotionCanvas{`0},System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.PolarChart`1"/> class.
            </summary>
            <param name="view">The view.</param>
            <param name="defaultPlatformConfig">The default platform configuration.</param>
            <param name="canvas">The canvas.</param>
            <param name="requiresLegendMeasureAlways">Forces the legends to redraw with every measure request.</param>
        </member>
        <member name="P:ChartKit.PolarChart`1.AngleAxes">
            <summary>
            Gets the angle axes.
            </summary>
            <value>
            The x axes.
            </value>
        </member>
        <member name="P:ChartKit.PolarChart`1.RadiusAxes">
            <summary>
            Gets the radius axes.
            </summary>
            <value>
            The y axes.
            </value>
        </member>
        <member name="P:ChartKit.PolarChart`1.Series">
            <inheritdoc cref="P:ChartKit.Chart`1.Series"/>
        </member>
        <member name="P:ChartKit.PolarChart`1.VisibleSeries">
            <inheritdoc cref="P:ChartKit.Chart`1.VisibleSeries"/>
        </member>
        <member name="P:ChartKit.PolarChart`1.FitToBounds">
            <summary>
            Gets whether the series fit to bounds or not.
            </summary>
        </member>
        <member name="P:ChartKit.PolarChart`1.TotalAnge">
            <summary>
            Gets the total circumference angle.
            </summary>
            <value>
            The total angle.
            </value>
        </member>
        <member name="P:ChartKit.PolarChart`1.InnerRadius">
            <summary>
            Gets the Inner radius.
            </summary>
            <value>
            The inner radius.
            </value>
        </member>
        <member name="P:ChartKit.PolarChart`1.InitialRotation">
            <summary>
            Gets the Initial rotation.
            </summary>
            /// <value>
            The inner radius.
            </value>
        </member>
        <member name="P:ChartKit.PolarChart`1.View">
            <summary>
            Gets the view.
            </summary>
            <value>
            The view.
            </value>
        </member>
        <member name="M:ChartKit.PolarChart`1.FindHoveredPointsBy(ChartKit.Drawing.LvcPoint)">
            <summary>
            Finds the points near to the specified point.
            </summary>
            <param name="pointerPosition">The pointer position.</param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.PolarChart`1.Measure">
            <summary>
            Measures this chart.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ChartKit.PolarChart`1.ScaleUIPoint(ChartKit.Drawing.LvcPoint,System.Int32,System.Int32)">
            <summary>
            Scales the specified point to the UI.
            </summary>
            <param name="point">The point, where X = angle, Y = radius.</param>
            <param name="angleAxisIndex">Index of the angle axis.</param>
            <param name="radiusAxisIndex">Index of the radius axis.</param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.PolarChart`1.Unload">
            <inheritdoc cref="M:ChartKit.Chart`1.Unload"/>
        </member>
        <member name="T:ChartKit.PolarLineSeries`5">
            <summary>
            Defines the data to plot as a polar line.
            </summary>
            <typeparam name="TModel">The type of the model to plot.</typeparam>
            <typeparam name="TVisual">The type of the visual point.</typeparam>
            <typeparam name="TLabel">The type of the data label.</typeparam>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <typeparam name="TPathGeometry">The type of the path geometry.</typeparam>
        </member>
        <member name="M:ChartKit.PolarLineSeries`5.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.PolarLineSeries`5"/> class.
            </summary>
            <param name="isStacked">if set to <c>true</c> [is stacked].</param>
        </member>
        <member name="P:ChartKit.PolarLineSeries`5.Stroke">
            <summary>
            Gets or sets the stroke.
            </summary>
            <value>
            The stroke.
            </value>
        </member>
        <member name="P:ChartKit.PolarLineSeries`5.Fill">
            <summary>
            Gets or sets the fill.
            </summary>
            <value>
            The fill.
            </value>
        </member>
        <member name="P:ChartKit.PolarLineSeries`5.GeometrySize">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.ILineSeries`1.GeometrySize"/>
        </member>
        <member name="P:ChartKit.PolarLineSeries`5.ScalesAngleAt">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.IPolarSeries`1.ScalesAngleAt"/>
        </member>
        <member name="P:ChartKit.PolarLineSeries`5.ScalesRadiusAt">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.IPolarSeries`1.ScalesRadiusAt"/>
        </member>
        <member name="P:ChartKit.PolarLineSeries`5.LineSmoothness">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.ILineSeries`1.LineSmoothness"/>
        </member>
        <member name="P:ChartKit.PolarLineSeries`5.EnableNullSplitting">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.ILineSeries`1.EnableNullSplitting"/>
        </member>
        <member name="P:ChartKit.PolarLineSeries`5.GeometryFill">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.ILineSeries`1.GeometryFill"/>
        </member>
        <member name="P:ChartKit.PolarLineSeries`5.GeometryStroke">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.ILineSeries`1.GeometryStroke"/>
        </member>
        <member name="P:ChartKit.PolarLineSeries`5.IsClosed">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.IPolarLineSeries`1.IsClosed"/>
        </member>
        <member name="P:ChartKit.PolarLineSeries`5.DataLabelsPosition">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.IPolarSeries`1.DataLabelsPosition"/>
        </member>
        <member name="P:ChartKit.PolarLineSeries`5.AngleToolTipLabelFormatter">
            <summary>
            Gets or sets the tool tip label formatter for the X axis, this function will build the label when a point in this series 
            is shown inside a tool tip.
            </summary>
            <value>
            The tool tip label formatter.
            </value>
        </member>
        <member name="P:ChartKit.PolarLineSeries`5.RadiusToolTipLabelFormatter">
            <summary>
            Gets or sets the tool tip label formatter for the Y axis, this function will build the label when a point in this series 
            is shown inside a tool tip.
            </summary>
            <value>
            The tool tip label formatter.
            </value>
        </member>
        <member name="M:ChartKit.PolarLineSeries`5.Invalidate(ChartKit.Chart{`3})">
            <inheritdoc cref="M:ChartKit.Kernel.ChartElement`1.Invalidate(ChartKit.Chart{`0})"/>
        </member>
        <member name="M:ChartKit.PolarLineSeries`5.GetBounds(ChartKit.PolarChart{`3},ChartKit.Kernel.Sketches.IPolarAxis,ChartKit.Kernel.Sketches.IPolarAxis)">
            <inheritdoc cref="M:ChartKit.Kernel.Sketches.IPolarSeries`1.GetBounds(ChartKit.PolarChart{`0},ChartKit.Kernel.Sketches.IPolarAxis,ChartKit.Kernel.Sketches.IPolarAxis)"/>
        </member>
        <member name="M:ChartKit.PolarLineSeries`5.GetMiniaturesSketch">
            <inheritdoc cref="M:ChartKit.Series`4.GetMiniaturesSketch"/>
        </member>
        <member name="M:ChartKit.PolarLineSeries`5.GetPrimaryToolTipText(ChartKit.Kernel.ChartPoint)">
            <inheritdoc cref="M:ChartKit.ISeries.GetPrimaryToolTipText(ChartKit.Kernel.ChartPoint)"/>
        </member>
        <member name="M:ChartKit.PolarLineSeries`5.GetSecondaryToolTipText(ChartKit.Kernel.ChartPoint)">
            <inheritdoc cref="M:ChartKit.ISeries.GetSecondaryToolTipText(ChartKit.Kernel.ChartPoint)"/>
        </member>
        <member name="M:ChartKit.PolarLineSeries`5.GetSpline(ChartKit.Kernel.ChartPoint[],ChartKit.Measure.PolarScaler,ChartKit.Measure.StackPosition{`3})">
            <summary>
            Builds an spline from the given points.
            </summary>
            <param name="points"></param>
            <param name="scaler"></param>
            <param name="stacker"></param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.PolarLineSeries`5.SetDefaultPointTransitions(ChartKit.Kernel.ChartPoint)">
            <inheritdoc cref="M:ChartKit.Series`4.SetDefaultPointTransitions(ChartKit.Kernel.ChartPoint)"/>
        </member>
        <member name="M:ChartKit.PolarLineSeries`5.SoftDeleteOrDisposePoint(ChartKit.Kernel.ChartPoint,ChartKit.Measure.PolarScaler)">
            <summary>
            Softs the delete point.
            </summary>
            <param name="point">The point.</param>
            <param name="scaler">The scaler.</param>
        </member>
        <member name="M:ChartKit.PolarLineSeries`5.SoftDeleteOrDispose(ChartKit.Kernel.Sketches.IChartView)">
            <inheritdoc cref="M:ChartKit.Series`4.SoftDeleteOrDispose(ChartKit.Kernel.Sketches.IChartView)"/>
        </member>
        <member name="M:ChartKit.PolarLineSeries`5.GetPaintTasks">
            <summary>
            Gets the paint tasks.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ChartKit.PolarLineSeries`5.GetLabelPolarPosition(System.Single,System.Single,System.Single,System.Single,ChartKit.Drawing.LvcSize,System.Single,ChartKit.Measure.PolarLabelsPosition)">
            <summary>
            Gets the label polar position.
            </summary>
            <param name="centerX">The center x.</param>
            <param name="centerY">The center y.</param>
            <param name="radius">The radius.</param>
            <param name="angle">The start angle.</param>
            <param name="labelSize">Size of the label.</param>
            <param name="geometrySize">The geometry size.</param>
            <param name="position">The position.</param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.PolarLineSeries`5.OnPointerEnter(ChartKit.Kernel.ChartPoint)">
            <inheritdoc cref="M:ChartKit.Series`4.OnPointerEnter(ChartKit.Kernel.ChartPoint)"/>
        </member>
        <member name="M:ChartKit.PolarLineSeries`5.OnPointerLeft(ChartKit.Kernel.ChartPoint)">
            <inheritdoc cref="M:ChartKit.Series`4.OnPointerLeft(ChartKit.Kernel.ChartPoint)"/>
        </member>
        <member name="T:ChartKit.RowSeries`5">
            <summary>
            Defines the row series 
            </summary>
            <typeparam name="TModel">The type of the model.</typeparam>
            <typeparam name="TVisual">The type of the visual.</typeparam>
            <typeparam name="TLabel">The type of the label.</typeparam>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <seealso cref="T:ChartKit.BarSeries`4" />
            <typeparam name="TErrorGeometry">The type of the error geometry.</typeparam>
        </member>
        <member name="M:ChartKit.RowSeries`5.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.RowSeries`5"/> class.
            </summary>
        </member>
        <member name="M:ChartKit.RowSeries`5.Invalidate(ChartKit.Chart{`3})">
            <inheritdoc cref="M:ChartKit.Kernel.ChartElement`1.Invalidate(ChartKit.Chart{`0})"/>
        </member>
        <member name="M:ChartKit.RowSeries`5.GetRequestedSecondaryOffset">
            <inheritdoc cref="M:ChartKit.CartesianSeries`4.GetRequestedSecondaryOffset"/>
        </member>
        <member name="M:ChartKit.RowSeries`5.SetDefaultPointTransitions(ChartKit.Kernel.ChartPoint)">
            <inheritdoc cref="M:ChartKit.Series`4.SetDefaultPointTransitions(ChartKit.Kernel.ChartPoint)"/>
        </member>
        <member name="M:ChartKit.RowSeries`5.SoftDeleteOrDisposePoint(ChartKit.Kernel.ChartPoint,ChartKit.Measure.Scaler,ChartKit.Measure.Scaler)">
            <inheritdoc cref="M:ChartKit.CartesianSeries`4.SoftDeleteOrDisposePoint(ChartKit.Kernel.ChartPoint,ChartKit.Measure.Scaler,ChartKit.Measure.Scaler)"/>
        </member>
        <member name="M:ChartKit.RowSeries`5.GetBounds(ChartKit.CartesianChart{`3},ChartKit.Kernel.Sketches.ICartesianAxis,ChartKit.Kernel.Sketches.ICartesianAxis)">
            <inheritdoc cref="M:ChartKit.CartesianSeries`4.GetBounds(ChartKit.CartesianChart{`3},ChartKit.Kernel.Sketches.ICartesianAxis,ChartKit.Kernel.Sketches.ICartesianAxis)"/>
        </member>
        <member name="T:ChartKit.ScatterSeries`5">
            <summary>
            Defines a scatter series.
            </summary>
            <typeparam name="TModel">The type of the model.</typeparam>
            <typeparam name="TVisual">The type of the visual.</typeparam>
            <typeparam name="TLabel">The type of the label.</typeparam>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <typeparam name="TErrorGeometry">The type of the error geometry.</typeparam>
            <seealso cref="T:ChartKit.CartesianSeries`4" />
            <seealso cref="T:ChartKit.Kernel.Sketches.IScatterSeries`1" />
        </member>
        <member name="M:ChartKit.ScatterSeries`5.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.ScatterSeries`5"/> class.
            </summary>
        </member>
        <member name="P:ChartKit.ScatterSeries`5.MinGeometrySize">
            <summary>
            Gets or sets the minimum size of the geometry.
            </summary>
            <value>
            The minimum size of the geometry.
            </value>
        </member>
        <member name="P:ChartKit.ScatterSeries`5.GeometrySize">
            <summary>
            Gets or sets the size of the geometry.
            </summary>
            <value>
            The size of the geometry.
            </value>
        </member>
        <member name="P:ChartKit.ScatterSeries`5.IsWeighted">
            <summary>
            Gets a value indicating whether the points in this series use weight.
            </summary>
        </member>
        <member name="P:ChartKit.ScatterSeries`5.ErrorPaint">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.IErrorSeries`1.ErrorPaint"/>
        </member>
        <member name="M:ChartKit.ScatterSeries`5.Invalidate(ChartKit.Chart{`3})">
            <inheritdoc cref="M:ChartKit.Kernel.ChartElement`1.Invalidate(ChartKit.Chart{`0})"/>
        </member>
        <member name="M:ChartKit.ScatterSeries`5.GetBounds(ChartKit.CartesianChart{`3},ChartKit.Kernel.Sketches.ICartesianAxis,ChartKit.Kernel.Sketches.ICartesianAxis)">
            <inheritdoc cref="M:ChartKit.Kernel.ChartElement`1.Invalidate(ChartKit.Chart{`0})"/>
        </member>
        <member name="M:ChartKit.ScatterSeries`5.GetMiniaturesSketch">
            <inheritdoc cref="M:ChartKit.Series`4.GetMiniaturesSketch"/>
        </member>
        <member name="M:ChartKit.ScatterSeries`5.OnPointerEnter(ChartKit.Kernel.ChartPoint)">
            <inheritdoc cref="M:ChartKit.Series`4.OnPointerEnter(ChartKit.Kernel.ChartPoint)"/>
        </member>
        <member name="M:ChartKit.ScatterSeries`5.OnPointerLeft(ChartKit.Kernel.ChartPoint)">
            <inheritdoc cref="M:ChartKit.Series`4.OnPointerLeft(ChartKit.Kernel.ChartPoint)"/>
        </member>
        <member name="M:ChartKit.ScatterSeries`5.SetDefaultPointTransitions(ChartKit.Kernel.ChartPoint)">
            <inheritdoc cref="M:ChartKit.ScatterSeries`5.SetDefaultPointTransitions(ChartKit.Kernel.ChartPoint)"/>
        </member>
        <member name="M:ChartKit.ScatterSeries`5.SoftDeleteOrDisposePoint(ChartKit.Kernel.ChartPoint,ChartKit.Measure.Scaler,ChartKit.Measure.Scaler)">
            <inheritdoc cref="M:ChartKit.ScatterSeries`5.SoftDeleteOrDisposePoint(ChartKit.Kernel.ChartPoint,ChartKit.Measure.Scaler,ChartKit.Measure.Scaler)"/>
        </member>
        <member name="T:ChartKit.Section`1">
            <summary>
            Defines a visual section in a chart.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <seealso cref="T:ChartKit.Kernel.ChartElement`1" />
        </member>
        <member name="P:ChartKit.Section`1.Stroke">
            <summary>
            Gets or sets the stroke.
            </summary>
            <value>
            The stroke.
            </value>
        </member>
        <member name="P:ChartKit.Section`1.Fill">
            <summary>
            Gets or sets the fill.
            </summary>
            <value>
            The fill.
            </value>
        </member>
        <member name="P:ChartKit.Section`1.LabelPaint">
            <summary>
            Gets or sets the label paint.
            </summary>
            <value>
            The fill.
            </value>
        </member>
        <member name="P:ChartKit.Section`1.IsVisible">
            <summary>
            Gets or sets whether the section is visible or not.
            </summary>
        </member>
        <member name="P:ChartKit.Section`1.Xi">
            <summary>
            Gets or sets the xi, the value where the section starts at the X axis,
            set the property to null to indicate that the section must start at the beginning of the X axis, default is null.
            </summary>
            <value>
            The xi.
            </value>
        </member>
        <member name="P:ChartKit.Section`1.Xj">
            <summary>
            Gets or sets the xj, the value where the section ends and the X axis.
            set the property to null to indicate that the section must go to the end of the X axis, default is null.
            </summary>
            <value>
            The xj.
            </value>
        </member>
        <member name="P:ChartKit.Section`1.Yi">
            <summary>
            Gets or sets the yi, the value where the section starts and the Y axis.
            set the property to null to indicate that the section must start at the beginning of the Y axis, default is null.
            </summary>
            <value>
            The yi.
            </value>
        </member>
        <member name="P:ChartKit.Section`1.Yj">
            <summary>
            Gets or sets the yj, the value where the section ends and the Y axis.
            set the property to null to indicate that the section must go to the end of the Y axis, default is null.
            </summary>
            <value>
            The yj.
            </value>
        </member>
        <member name="P:ChartKit.Section`1.ScalesXAt">
            <summary>
            Gets or sets the axis index where the section is scaled in the X plane, the index must exist 
            in the <see cref="P:ChartKit.Kernel.Sketches.ICartesianChartView`1.XAxes"/> collection.
            </summary>
            <value>
            The index of the axis.
            </value>
        </member>
        <member name="P:ChartKit.Section`1.ScalesYAt">
            <summary>
            Gets or sets the axis index where the section is scaled in the Y plane, the index must exist 
            in the <see cref="P:ChartKit.Kernel.Sketches.ICartesianChartView`1.YAxes"/> collection.
            </summary>
            <value>
            The index of the axis.
            </value>
        </member>
        <member name="P:ChartKit.Section`1.ZIndex">
            <summary>
            Gets or sets the index of the z axis.
            </summary>
            <value>
            The index of the z.
            </value>
        </member>
        <member name="M:ChartKit.Section`1.GetPaintTasks">
            <summary>
            Gets the paint tasks.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Section`1.OnPaintChanged(System.String)">
            <summary>
            Called when the fill changes.
            </summary>
            <param name="propertyName"></param>
        </member>
        <member name="T:ChartKit.Section`3">
            <summary>
            Defines a visual section in a chart.
            </summary>
            <typeparam name="TSizedGeometry">The type of the sized geometry.</typeparam>
            <typeparam name="TLabelGeometry">The type of the label geometry.</typeparam>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <seealso cref="T:ChartKit.Kernel.ChartElement`1" />
        </member>
        <member name="F:ChartKit.Section`3._fillSizedGeometry">
            <summary>
            The fill sized geometry
            </summary>
        </member>
        <member name="F:ChartKit.Section`3._strokeSizedGeometry">
            <summary>
            The stroke sized geometry
            </summary>
        </member>
        <member name="F:ChartKit.Section`3._labelGeometry">
            <summary>
            The label geometry.
            </summary>
        </member>
        <member name="P:ChartKit.Section`3.Label">
            <summary>
            Gets or sets the label, a string to be displayed within the section.
            </summary>
        </member>
        <member name="P:ChartKit.Section`3.LabelSize">
            <summary>
            Gets or sets the label size.
            </summary>
        </member>
        <member name="M:ChartKit.Section`3.Invalidate(ChartKit.Chart{`2})">
            <summary>
            Measures the specified chart.
            </summary>
            <param name="chart">The chart.</param>
        </member>
        <member name="T:ChartKit.Series`4">
            <summary>
            Defines a series in a Cartesian chart.
            </summary>
            <typeparam name="TModel">The type of the model.</typeparam>
            <typeparam name="TVisual">The type of the visual.</typeparam>
            <typeparam name="TLabel">The type of the label.</typeparam>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <seealso cref="T:ChartKit.ISeries" />
            <seealso cref="T:ChartKit.ISeries`1" />
            <seealso cref="T:System.IDisposable" />
            <seealso cref="T:System.ComponentModel.INotifyPropertyChanged" />
        </member>
        <member name="F:ChartKit.Series`4.subscribedTo">
            <summary>
            The subscribed to
            </summary>
        </member>
        <member name="F:ChartKit.Series`4.implementsICP">
            <summary>
            The implements icp
            </summary>
        </member>
        <member name="F:ChartKit.Series`4.pivot">
            <summary>
            The pivot
            </summary>
        </member>
        <member name="F:ChartKit.Series`4.MAX_MINIATURE_STROKE_WIDTH">
            <summary>
            The max series stroke.
            </summary>
        </member>
        <member name="F:ChartKit.Series`4.everFetched">
            <summary>
            The ever fetched points.
            </summary>
        </member>
        <member name="F:ChartKit.Series`4._requestedCustomMeasureHandler">
            <summary>
            Indicates whether the custom measure handler was requested already.
            </summary>
        </member>
        <member name="F:ChartKit.Series`4._customMeasureHandler">
            <summary>
            The custom measure handler.
            </summary>
        </member>
        <member name="F:ChartKit.Series`4._geometrySvgChanged">
            <summary>
            Indicates whether the geometry svg changed.
            </summary>
        </member>
        <member name="F:ChartKit.Series`4._obsolete_formatter">
            <summary>
            Will be deleted on future versions
            </summary>
        </member>
        <member name="M:ChartKit.Series`4.#ctor(ChartKit.Kernel.SeriesProperties)">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.Series`4"/> class.
            </summary>
            <param name="properties">The properties.</param>
        </member>
        <member name="P:ChartKit.Series`4.SeriesProperties">
            <inheritdoc cref="P:ChartKit.ISeries.SeriesProperties"/>
        </member>
        <member name="P:ChartKit.Series`4.Name">
            <inheritdoc cref="P:ChartKit.ISeries.Name"/>
        </member>
        <member name="P:ChartKit.Series`4.Values">
            <summary>
            Gets or sets the data set to draw in the chart.
            </summary>
        </member>
        <member name="P:ChartKit.Series`4.Pivot">
            <inheritdoc cref="P:ChartKit.ISeries.Pivot"/>
        </member>
        <member name="P:ChartKit.Series`4.Mapping">
            <summary>
            Gets or sets the mapping that defines how a type is mapped to a <see cref="T:ChartKit.Kernel.ChartPoint"/> instance, 
            then the <see cref="T:ChartKit.Kernel.ChartPoint"/> will be drawn as a point in the chart.
            </summary>
        </member>
        <member name="P:ChartKit.Series`4.GeometrySvg">
            <inheritdoc cref="P:ChartKit.ISeries.GeometrySvg"/>
        </member>
        <member name="E:ChartKit.Series`4.PointMeasured">
            <summary>
            Occurs when an instance of <see cref="T:ChartKit.Kernel.ChartPoint"/> is measured.
            </summary>
        </member>
        <member name="E:ChartKit.Series`4.PointCreated">
            <summary>
            Occurs when an instance of <see cref="T:ChartKit.Kernel.ChartPoint"/> is created.
            </summary>
        </member>
        <member name="E:ChartKit.Series`4.DataPointerDown">
            <summary>
            Occurs when the pointer goes down over a chart point(s).
            </summary>
        </member>
        <member name="E:ChartKit.Series`4.DataPointerHover">
            <summary>
            Occurs when the pointer is over a chart point.
            </summary>
        </member>
        <member name="E:ChartKit.Series`4.DataPointerHoverLost">
            <summary>
            Occurs when the pointer left a chart point.
            </summary>
        </member>
        <member name="E:ChartKit.Series`4.ChartPointPointerHover">
            <summary>
            Occurs when the pointer is over a chart point.
            </summary>
        </member>
        <member name="E:ChartKit.Series`4.ChartPointPointerHoverLost">
            <summary>
            Occurs when the pointer left a chart point.
            </summary>
        </member>
        <member name="E:ChartKit.Series`4.ChartPointPointerDown">
            <summary>
            Occurs when the pointer goes down over a chart point, if there are multiple points, the closest one will be selected.
            </summary>
        </member>
        <member name="P:ChartKit.Series`4.ZIndex">
            <inheritdoc cref="P:ChartKit.ISeries.ZIndex" />
        </member>
        <member name="P:ChartKit.Series`4.TooltipLabelFormatter">
            <summary>
            Gets or sets the tool tip label formatter, this function will build the label when a point in this series 
            is shown inside a tool tip.
            </summary>
            <value>
            The tool tip label formatter.
            </value>
        </member>
        <member name="P:ChartKit.Series`4.DataLabelsFormatter">
            <summary>
            Gets or sets the data label formatter, this function will build the label when a point in this series 
            is shown as data label.
            </summary>
            <value>
            The data label formatter.
            </value>
        </member>
        <member name="P:ChartKit.Series`4.IsVisible">
            <inheritdoc cref="P:ChartKit.ISeries.IsVisible" />
        </member>
        <member name="P:ChartKit.Series`4.IsHoverable">
            <inheritdoc cref="P:ChartKit.ISeries.IsHoverable" />
        </member>
        <member name="P:ChartKit.Series`4.IsVisibleAtLegend">
            <inheritdoc cref="P:ChartKit.ISeries.IsVisibleAtLegend" />
        </member>
        <member name="P:ChartKit.Series`4.DataPadding">
            <inheritdoc cref="P:ChartKit.ISeries.DataPadding" />
        </member>
        <member name="P:ChartKit.Series`4.AnimationsSpeed">
            <inheritdoc cref="P:ChartKit.ISeries.AnimationsSpeed" />
        </member>
        <member name="P:ChartKit.Series`4.EasingFunction">
            <inheritdoc cref="P:ChartKit.ISeries.EasingFunction" />
        </member>
        <member name="P:ChartKit.Series`4.DataFactory">
            <summary>
            Gets the data factory.
            </summary>
        </member>
        <member name="P:ChartKit.Series`4.WhenPointMeasured">
            <summary>
            Called when a point is measured.
            </summary>
        </member>
        <member name="P:ChartKit.Series`4.LegendShapeSize">
            <summary>
            Gets or sets the size of the legend shape.
            </summary>
            <value>
            The size of the legend shape.
            </value>
        </member>
        <member name="P:ChartKit.Series`4.MiniatureShapeSize">
            <summary>
            Gets or sets the size of the legend shape.
            </summary>
            <value>
            The size of the legend shape.
            </value>
        </member>
        <member name="P:ChartKit.Series`4.CanvasSchedule">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.IChartSeries`1.CanvasSchedule"/>
        </member>
        <member name="E:ChartKit.Series`4.VisibilityChanged">
            <inheritdoc cref="E:ChartKit.ISeries.VisibilityChanged"/>
        </member>
        <member name="M:ChartKit.Series`4.GetStackGroup">
            <inheritdoc cref="M:ChartKit.Kernel.Sketches.IChartSeries`1.GetStackGroup"/>
        </member>
        <member name="M:ChartKit.Series`4.Fetch(ChartKit.Kernel.Sketches.IChart)">
            <inheritdoc cref="M:ChartKit.ISeries.Fetch(ChartKit.Kernel.Sketches.IChart)"/>
        </member>
        <member name="M:ChartKit.Series`4.OnDataPointerDown(ChartKit.Kernel.Sketches.IChartView,System.Collections.Generic.IEnumerable{ChartKit.Kernel.ChartPoint},ChartKit.Drawing.LvcPoint)">
            <inheritdoc cref="M:ChartKit.Kernel.Sketches.IChartSeries`1.OnDataPointerDown(ChartKit.Kernel.Sketches.IChartView,System.Collections.Generic.IEnumerable{ChartKit.Kernel.ChartPoint},ChartKit.Drawing.LvcPoint)"/>
        </member>
        <member name="M:ChartKit.Series`4.RestartAnimations">
            <inheritdoc cref="M:ChartKit.ISeries.RestartAnimations"/>
        </member>
        <member name="M:ChartKit.Series`4.GetPrimaryToolTipText(ChartKit.Kernel.ChartPoint)">
            <inheritdoc cref="M:ChartKit.ISeries.GetPrimaryToolTipText(ChartKit.Kernel.ChartPoint)"/>
        </member>
        <member name="M:ChartKit.Series`4.GetSecondaryToolTipText(ChartKit.Kernel.ChartPoint)">
            <inheritdoc cref="M:ChartKit.ISeries.GetSecondaryToolTipText(ChartKit.Kernel.ChartPoint)"/>
        </member>
        <member name="M:ChartKit.Series`4.GetDataLabelText(ChartKit.Kernel.ChartPoint)">
            <inheritdoc cref="M:ChartKit.ISeries.GetDataLabelText(ChartKit.Kernel.ChartPoint)"/>
        </member>
        <member name="M:ChartKit.Series`4.RemoveFromUI(ChartKit.Chart{`3})">
            <inheritdoc cref="M:ChartKit.Kernel.ChartElement`1.RemoveFromUI(ChartKit.Chart{`0})"/>
        </member>
        <member name="M:ChartKit.Series`4.ConvertToTypedChartPoint(ChartKit.Kernel.ChartPoint)">
            <summary>
            Converts a chart to a strong-typed version of it.
            </summary>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Series`4.SoftDeleteOrDispose(ChartKit.Kernel.Sketches.IChartView)">
            <inheritdoc cref="M:ChartKit.ISeries.SoftDeleteOrDispose(ChartKit.Kernel.Sketches.IChartView)"/>
        </member>
        <member name="M:ChartKit.Series`4.GetMiniaturesSketch">
            <inheritdoc cref="M:ChartKit.Kernel.Sketches.IChartSeries`1.GetMiniaturesSketch"/>
        </member>
        <member name="M:ChartKit.Series`4.BuildMiniatureSchedule(ChartKit.Drawing.IPaint{`3},ChartKit.Drawing.ISizedGeometry{`3})">
            <summary>
            Builds a paint schedule.
            </summary>
            <param name="paint"></param>
            <param name="geometry"></param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Series`4.OnPointMeasured(ChartKit.Kernel.ChartPoint)">
            <summary>
            Called when a point was measured.
            </summary>
            <param name="chartPoint">The chart point.</param>
        </member>
        <member name="M:ChartKit.Series`4.OnPointCreated(ChartKit.Kernel.ChartPoint)">
            <summary>
            Called when a point is created.
            </summary>
            <param name="chartPoint">The chart point.</param>
        </member>
        <member name="M:ChartKit.Series`4.SetDefaultPointTransitions(ChartKit.Kernel.ChartPoint)">
            <summary>
            Sets the default point transitions.
            </summary>
            <param name="chartPoint">The chart point.</param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Series`4.OnVisibilityChanged">
            <summary>
            Called when the visibility changes.
            </summary>
        </member>
        <member name="M:ChartKit.Series`4.OnPointerEnter(ChartKit.Kernel.ChartPoint)">
            <summary>
            Called when the pointer enters a point.
            </summary>
            <param name="point">The chart point.</param>
        </member>
        <member name="M:ChartKit.Series`4.OnPointerLeft(ChartKit.Kernel.ChartPoint)">
            <summary>
            Called when the pointer leaves a point.
            </summary>
            <param name="point">The chart point.</param>
        </member>
        <member name="M:ChartKit.Series`4.OnPaintChanged(System.String)">
            <inheritdoc cref="M:ChartKit.Kernel.ChartElement`1.OnPaintChanged(System.String)"/>
        </member>
        <member name="M:ChartKit.Series`4.OnMiniatureChanged">
            <summary>
            Called when the miniature changes.
            </summary>
        </member>
        <member name="T:ChartKit.StackedAreaSeries`6">
            <summary>
            Defines the stacked area series class.
            </summary>
            <typeparam name="TModel">The type of the model to plot.</typeparam>
            <typeparam name="TVisual">The type of the visual point.</typeparam>
            <typeparam name="TLabel">The type of the data label.</typeparam>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <typeparam name="TPathGeometry">The type of the path geometry.</typeparam>
            <typeparam name="TErrorGeometry">The type of the error geometry.</typeparam>
            <seealso cref="T:ChartKit.LineSeries`6" />
        </member>
        <member name="M:ChartKit.StackedAreaSeries`6.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.StackedAreaSeries`6"/> class.
            </summary>
        </member>
        <member name="T:ChartKit.StackedColumnSeries`5">
            <summary>
            Defines the stacked column series class.
            </summary>
            <typeparam name="TModel">The type of the model.</typeparam>
            <typeparam name="TVisual">The type of the visual.</typeparam>
            <typeparam name="TLabel">The type of the label.</typeparam>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <typeparam name="TErrorGeometry">The type of the error geometry.</typeparam>
            <seealso cref="T:ChartKit.ColumnSeries`5" />
        </member>
        <member name="M:ChartKit.StackedColumnSeries`5.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.StackedColumnSeries`5"/> class.
            </summary>
        </member>
        <member name="P:ChartKit.StackedColumnSeries`5.StackGroup">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.IStackedBarSeries`1.StackGroup"/>
        </member>
        <member name="M:ChartKit.StackedColumnSeries`5.GetStackGroup">
            <summary>
            Gets the stack group.
            </summary>
            <returns></returns>
            <inheritdoc />
        </member>
        <member name="T:ChartKit.StackedRowSeries`5">
            <summary>
            Defines a stacked row series.
            </summary>
            <typeparam name="TModel">The type of the model.</typeparam>
            <typeparam name="TVisual">The type of the visual.</typeparam>
            <typeparam name="TLabel">The type of the label.</typeparam>
            <typeparam name="TErrorGeometry">The type of the error geometry.</typeparam>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
        </member>
        <member name="M:ChartKit.StackedRowSeries`5.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.StackedRowSeries`5"/> class.
            </summary>
        </member>
        <member name="P:ChartKit.StackedRowSeries`5.StackGroup">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.IStackedBarSeries`1.StackGroup"/>
        </member>
        <member name="M:ChartKit.StackedRowSeries`5.GetStackGroup">
            <summary>
            Gets the stack group.
            </summary>
            <returns></returns>
            <inheritdoc />
        </member>
        <member name="T:ChartKit.StackedStepAreaSeries`5">
            <summary>
            Defines the stacked area series class.
            </summary>
            <typeparam name="TModel">The type of the model to plot.</typeparam>
            <typeparam name="TVisual">The type of the visual point.</typeparam>
            <typeparam name="TLabel">The type of the data label.</typeparam>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <typeparam name="TPathGeometry">The type of the path geometry.</typeparam>
            <seealso cref="T:ChartKit.StepLineSeries`5" />
        </member>
        <member name="M:ChartKit.StackedStepAreaSeries`5.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.StackedAreaSeries`6"/> class.
            </summary>
        </member>
        <member name="T:ChartKit.StepLineSeries`5">
            <summary>
            Defines the data to plot as a line.
            </summary>
            <typeparam name="TModel">The type of the model to plot.</typeparam>
            <typeparam name="TVisual">The type of the visual point.</typeparam>
            <typeparam name="TLabel">The type of the data label.</typeparam>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <typeparam name="TPathGeometry">The type of the path geometry.</typeparam>
        </member>
        <member name="M:ChartKit.StepLineSeries`5.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.StepLineSeries`5"/> class.
            </summary>
            <param name="isStacked">if set to <c>true</c> [is stacked].</param>
        </member>
        <member name="P:ChartKit.StepLineSeries`5.EnableNullSplitting">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.IStepLineSeries`1.EnableNullSplitting"/>
        </member>
        <member name="P:ChartKit.StepLineSeries`5.GeometrySize">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.IStepLineSeries`1.GeometrySize"/>
        </member>
        <member name="P:ChartKit.StepLineSeries`5.GeometryFill">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.IStepLineSeries`1.GeometryFill"/>
        </member>
        <member name="P:ChartKit.StepLineSeries`5.GeometryStroke">
            <inheritdoc cref="P:ChartKit.Kernel.Sketches.IStepLineSeries`1.GeometrySize"/>
        </member>
        <member name="M:ChartKit.StepLineSeries`5.Invalidate(ChartKit.Chart{`3})">
            <inheritdoc cref="M:ChartKit.Kernel.ChartElement`1.Invalidate(ChartKit.Chart{`0})"/>
        </member>
        <member name="M:ChartKit.StepLineSeries`5.GetRequestedGeometrySize">
            <inheritdoc cref="M:ChartKit.StepLineSeries`5.GetRequestedGeometrySize"/>
        </member>
        <member name="M:ChartKit.StepLineSeries`5.GetMiniaturesSketch">
            <inheritdoc cref="M:ChartKit.Series`4.GetMiniaturesSketch"/>
        </member>
        <member name="M:ChartKit.StepLineSeries`5.OnPointerEnter(ChartKit.Kernel.ChartPoint)">
            <inheritdoc cref="M:ChartKit.Series`4.OnPointerEnter(ChartKit.Kernel.ChartPoint)"/>
        </member>
        <member name="M:ChartKit.StepLineSeries`5.OnPointerLeft(ChartKit.Kernel.ChartPoint)">
            <inheritdoc cref="M:ChartKit.Series`4.OnPointerLeft(ChartKit.Kernel.ChartPoint)"/>
        </member>
        <member name="M:ChartKit.StepLineSeries`5.SetDefaultPointTransitions(ChartKit.Kernel.ChartPoint)">
            <inheritdoc cref="M:ChartKit.Series`4.SetDefaultPointTransitions(ChartKit.Kernel.ChartPoint)"/>
        </member>
        <member name="M:ChartKit.StepLineSeries`5.SoftDeleteOrDisposePoint(ChartKit.Kernel.ChartPoint,ChartKit.Measure.Scaler,ChartKit.Measure.Scaler)">
            <inheritdoc cref="M:ChartKit.CartesianSeries`4.SoftDeleteOrDisposePoint(ChartKit.Kernel.ChartPoint,ChartKit.Measure.Scaler,ChartKit.Measure.Scaler)"/>
        </member>
        <member name="M:ChartKit.StepLineSeries`5.SoftDeleteOrDispose(ChartKit.Kernel.Sketches.IChartView)">
            <inheritdoc cref="M:ChartKit.Series`4.SoftDeleteOrDispose(ChartKit.Kernel.Sketches.IChartView)"/>
        </member>
        <member name="M:ChartKit.StepLineSeries`5.RemoveFromUI(ChartKit.Chart{`3})">
            <inheritdoc/>
        </member>
        <member name="M:ChartKit.StepLineSeries`5.GetPaintTasks">
            <summary>
            Gets the paint tasks.
            </summary>
            <returns></returns>
        </member>
        <member name="T:ChartKit.StrokeAndFillCartesianSeries`4">
            <summary>
            Defines a data series with stroke and fill properties.
            </summary>
            <typeparam name="TModel">The type of the model.</typeparam>
            <typeparam name="TVisual">The type of the visual.</typeparam>
            <typeparam name="TLabel">The type of the label.</typeparam>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
        </member>
        <member name="M:ChartKit.StrokeAndFillCartesianSeries`4.#ctor(ChartKit.Kernel.SeriesProperties)">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.StrokeAndFillCartesianSeries`4"/> class.
            </summary>
            <param name="properties">The properties.</param>
        </member>
        <member name="P:ChartKit.StrokeAndFillCartesianSeries`4.Stroke">
            <summary>
            Gets or sets the stroke.
            </summary>
            <value>
            The stroke.
            </value>
        </member>
        <member name="P:ChartKit.StrokeAndFillCartesianSeries`4.Fill">
            <summary>
            Gets or sets the fill.
            </summary>
            <value>
            The fill.
            </value>
        </member>
        <member name="M:ChartKit.StrokeAndFillCartesianSeries`4.GetPaintTasks">
            <summary>
            Gets the paint tasks.
            </summary>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:ChartKit.Themes.ColorPalletes">
            <summary>
            Defines a set of predefined colors to use.
            </summary>
        </member>
        <member name="P:ChartKit.Themes.ColorPalletes.FluentDesign">
            <summary>
            Gets the fluent design colors.
            </summary>
            <value>
            The fluent design.
            </value>
        </member>
        <member name="P:ChartKit.Themes.ColorPalletes.MaterialDesign500">
            <summary>
            Gets the material design500 colors.
            </summary>
            <value>
            The material design500.
            </value>
        </member>
        <member name="P:ChartKit.Themes.ColorPalletes.MaterialDesign200">
            <summary>
            Gets the material design200 colors.
            </summary>
            <value>
            The material design200.
            </value>
        </member>
        <member name="P:ChartKit.Themes.ColorPalletes.MaterialDesign800">
            <summary>
            Gets the material design800 colors.
            </summary>
            <value>
            The material design800.
            </value>
        </member>
        <member name="T:ChartKit.Themes.LiveChartsStylerExtensions">
            <summary>
            Defines the LiveCharts styler extensions.
            </summary>
        </member>
        <member name="M:ChartKit.Themes.LiveChartsStylerExtensions.HasRuleForAxes``1(ChartKit.Themes.Theme{``0},System.Action{ChartKit.Kernel.Sketches.IPlane{``0}})">
            <summary>
             Defines a style builder for <see cref="T:ChartKit.Kernel.Sketches.IChartView`1"/> objects.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <param name="styler">The styler.</param>
            <param name="predicate">The predicate.</param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Themes.LiveChartsStylerExtensions.HasRuleForDrawMargin``1(ChartKit.Themes.Theme{``0},System.Action{ChartKit.DrawMarginFrame{``0}})">
            <summary>
            Defines a style builder for <see cref="T:ChartKit.DrawMarginFrame`1"/> objects.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <param name="styler">The styler.</param>
            <param name="predicate">The predicate.</param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Themes.LiveChartsStylerExtensions.HasRuleForAnySeries``1(ChartKit.Themes.Theme{``0},System.Action{ChartKit.Kernel.Sketches.IChartSeries{``0}})">
            <summary>
             Defines a style builder for <see cref="T:ChartKit.Kernel.Sketches.IChartSeries`1"/> objects.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <param name="styler">The styler.</param>
            <param name="predicate">The predicate.</param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Themes.LiveChartsStylerExtensions.HasRuleForPieSeries``1(ChartKit.Themes.Theme{``0},System.Action{ChartKit.Kernel.Sketches.IPieSeries{``0}})">
            <summary>
             Defines a style builder for <see cref="T:ChartKit.Kernel.Sketches.IPieSeries`1"/> objects.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <param name="styler">The styler.</param>
            <param name="predicate">The predicate.</param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Themes.LiveChartsStylerExtensions.HasRuleForGaugeSeries``1(ChartKit.Themes.Theme{``0},System.Action{ChartKit.Kernel.Sketches.IPieSeries{``0}})">
            <summary>
             Defines a style builder for <see cref="T:ChartKit.Kernel.Sketches.IPieSeries`1"/> objects when used as gauges.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <param name="styler">The styler.</param>
            <param name="predicate">The predicate.</param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Themes.LiveChartsStylerExtensions.HasRuleForGaugeFillSeries``1(ChartKit.Themes.Theme{``0},System.Action{ChartKit.Kernel.Sketches.IPieSeries{``0}})">
            <summary>
             Defines a style builder for <see cref="T:ChartKit.Kernel.Sketches.IPieSeries`1"/> objects when used as gauges fills.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <param name="styler">The styler.</param>
            <param name="predicate">The predicate.</param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Themes.LiveChartsStylerExtensions.HasRuleForLineSeries``1(ChartKit.Themes.Theme{``0},System.Action{ChartKit.Kernel.Sketches.ILineSeries{``0}})">
            <summary>
             Defines a style builder for <see cref="T:ChartKit.Kernel.Sketches.ILineSeries`1"/> objects.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <param name="styler">The styler.</param>
            <param name="predicate">The predicate.</param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Themes.LiveChartsStylerExtensions.HasRuleForStepLineSeries``1(ChartKit.Themes.Theme{``0},System.Action{ChartKit.Kernel.Sketches.IStepLineSeries{``0}})">
            <summary>
             Defines a style builder for <see cref="T:ChartKit.Kernel.Sketches.IStepLineSeries`1"/> objects.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <param name="styler">The styler.</param>
            <param name="predicate">The predicate.</param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Themes.LiveChartsStylerExtensions.HasRuleForStackedStepLineSeries``1(ChartKit.Themes.Theme{``0},System.Action{ChartKit.Kernel.Sketches.IStepLineSeries{``0}})">
            <summary>
             Defines a style builder for stacked <see cref="T:ChartKit.Kernel.Sketches.IStepLineSeries`1"/> objects.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <param name="styler">The styler.</param>
            <param name="predicate">The predicate.</param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Themes.LiveChartsStylerExtensions.HasRuleForBoxSeries``1(ChartKit.Themes.Theme{``0},System.Action{ChartKit.Kernel.Sketches.IBoxSeries{``0}})">
            <summary>
             Defines a style builder for stacked <see cref="T:ChartKit.Kernel.Sketches.IStepLineSeries`1"/> objects.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <param name="styler">The styler.</param>
            <param name="predicate">The predicate.</param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Themes.LiveChartsStylerExtensions.HasRuleForStackedLineSeries``1(ChartKit.Themes.Theme{``0},System.Action{ChartKit.Kernel.Sketches.ILineSeries{``0}})">
            <summary>
             Defines a style builder for tacked <see cref="T:ChartKit.Kernel.Sketches.ILineSeries`1"/> objects.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <param name="styler">The styler.</param>
            <param name="predicate">The predicate.</param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Themes.LiveChartsStylerExtensions.HasRuleForBarSeries``1(ChartKit.Themes.Theme{``0},System.Action{ChartKit.Kernel.Sketches.IBarSeries{``0}})">
            <summary>
             Defines a style builder for <see cref="T:ChartKit.Kernel.Sketches.IBarSeries`1"/> objects.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <param name="styler">The styler.</param>
            <param name="predicate">The predicate.</param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Themes.LiveChartsStylerExtensions.HasRuleForColumnSeries``1(ChartKit.Themes.Theme{``0},System.Action{ChartKit.Kernel.Sketches.IBarSeries{``0}})">
            <summary>
             Defines a style builder for vertical <see cref="T:ChartKit.Kernel.Sketches.IBarSeries`1"/> objects.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <param name="styler">The styler.</param>
            <param name="predicate">The predicate.</param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Themes.LiveChartsStylerExtensions.HasRuleForRowSeries``1(ChartKit.Themes.Theme{``0},System.Action{ChartKit.Kernel.Sketches.IBarSeries{``0}})">
            <summary>
             Defines a style builder for horizontal <see cref="T:ChartKit.Kernel.Sketches.IBarSeries`1"/> objects.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <param name="styler">The styler.</param>
            <param name="predicate">The predicate.</param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Themes.LiveChartsStylerExtensions.HasRuleForStackedBarSeries``1(ChartKit.Themes.Theme{``0},System.Action{ChartKit.Kernel.Sketches.IStackedBarSeries{``0}})">
            <summary>
             Defines a style builder for stacked <see cref="T:ChartKit.Kernel.Sketches.IBarSeries`1"/> objects.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <param name="styler">The styler.</param>
            <param name="predicate">The predicate.</param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Themes.LiveChartsStylerExtensions.HasRuleForStackedColumnSeries``1(ChartKit.Themes.Theme{``0},System.Action{ChartKit.Kernel.Sketches.IStackedBarSeries{``0}})">
            <summary>
             Defines a style builder for stacked vertical <see cref="T:ChartKit.Kernel.Sketches.IBarSeries`1"/> objects.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <param name="styler">The styler.</param>
            <param name="predicate">The predicate.</param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Themes.LiveChartsStylerExtensions.HasRuleForStackedRowSeries``1(ChartKit.Themes.Theme{``0},System.Action{ChartKit.Kernel.Sketches.IStackedBarSeries{``0}})">
            <summary>
             Defines a style builder for stacked horizontal <see cref="T:ChartKit.Kernel.Sketches.IBarSeries`1"/> objects.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <param name="styler">The styler.</param>
            <param name="predicate">The predicate.</param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Themes.LiveChartsStylerExtensions.HasRuleForScatterSeries``1(ChartKit.Themes.Theme{``0},System.Action{ChartKit.Kernel.Sketches.IScatterSeries{``0}})">
            <summary>
             Defines a style builder for <see cref="T:ChartKit.Kernel.Sketches.IScatterSeries`1"/> objects.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <param name="styler">The styler.</param>
            <param name="predicate">The predicate.</param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Themes.LiveChartsStylerExtensions.HasRuleForHeatSeries``1(ChartKit.Themes.Theme{``0},System.Action{ChartKit.Kernel.Sketches.IHeatSeries{``0}})">
            <summary>
             Defines a style builder for <see cref="T:ChartKit.Kernel.Sketches.IHeatSeries`1"/> objects.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <param name="styler">The styler.</param>
            <param name="predicate">The predicate.</param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Themes.LiveChartsStylerExtensions.HasRuleForFinancialSeries``1(ChartKit.Themes.Theme{``0},System.Action{ChartKit.Kernel.Sketches.IFinancialSeries{``0}})">
            <summary>
             Defines a style builder for <see cref="T:ChartKit.Kernel.Sketches.IFinancialSeries`1"/> objects.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <param name="styler">The styler.</param>
            <param name="predicate">The predicate.</param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Themes.LiveChartsStylerExtensions.HasRuleForPolaSeries``1(ChartKit.Themes.Theme{``0},System.Action{ChartKit.Kernel.Sketches.IPolarSeries{``0}})">
            <summary>
             Defines a style builder for <see cref="T:ChartKit.Kernel.Sketches.IPolarSeries`1"/> objects.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <param name="styler">The styler.</param>
            <param name="predicate">The predicate.</param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.Themes.LiveChartsStylerExtensions.HasRuleForPolarLineSeries``1(ChartKit.Themes.Theme{``0},System.Action{ChartKit.Kernel.Sketches.IPolarLineSeries{``0}})">
            <summary>
             Defines a style builder for <see cref="T:ChartKit.Kernel.Sketches.IPolarLineSeries`1"/> objects.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
            <param name="styler">The styler.</param>
            <param name="predicate">The predicate.</param>
            <returns></returns>
        </member>
        <member name="T:ChartKit.Themes.Theme`1">
            <summary>
            Defines a style builder.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
        </member>
        <member name="P:ChartKit.Themes.Theme`1.Colors">
            <summary>
            Gets or sets the theme colors.
            </summary>
        </member>
        <member name="P:ChartKit.Themes.Theme`1.AxisBuilder">
            <summary>
            Gets or sets the axis builder.
            </summary>
            <value>
            The axis builder.
            </value>
        </member>
        <member name="P:ChartKit.Themes.Theme`1.DrawMarginFrameBuilder">
            <summary>
            Gets or sets the draw margin frame builder.
            </summary>
            <value>
            The draw margin frame builder.
            </value>
        </member>
        <member name="P:ChartKit.Themes.Theme`1.SeriesBuilder">
            <summary>
            Gets or sets the series builder.
            </summary>
            <value>
            The pie series builder.
            </value>
        </member>
        <member name="P:ChartKit.Themes.Theme`1.PieSeriesBuilder">
            <summary>
            Gets or sets the pie series builder.
            </summary>
            <value>
            The pie series builder.
            </value>
        </member>
        <member name="P:ChartKit.Themes.Theme`1.GaugeSeriesBuilder">
            <summary>
            Gets or sets the gauge series builder.
            </summary>
            <value>
            The pie series builder.
            </value>
        </member>
        <member name="P:ChartKit.Themes.Theme`1.GaugeFillSeriesBuilder">
            <summary>
            Gets or sets the gauge fill series builder.
            </summary>
            <value>
            The pie series builder.
            </value>
        </member>
        <member name="P:ChartKit.Themes.Theme`1.CartesianSeriesBuilder">
            <summary>
            Gets or sets the Cartesian series builder.
            </summary>
            <value>
            The pie series builder.
            </value>
        </member>
        <member name="P:ChartKit.Themes.Theme`1.StepLineSeriesBuilder">
            <summary>
            Gets or sets the stepline series builder.
            </summary>
            <value>
            The pie series builder.
            </value>
        </member>
        <member name="P:ChartKit.Themes.Theme`1.StackedStepLineSeriesBuilder">
            <summary>
            Gets or sets the  stacked stepline series builder.
            </summary>
            <value>
            The pie series builder.
            </value>
        </member>
        <member name="P:ChartKit.Themes.Theme`1.LineSeriesBuilder">
            <summary>
            Gets or sets the line series builder.
            </summary>
            <value>
            The pie series builder.
            </value>
        </member>
        <member name="P:ChartKit.Themes.Theme`1.PolarSeriesBuilder">
            <summary>
            Gets or sets the line series builder.
            </summary>
            <value>
            The polar series builder.
            </value>
        </member>
        <member name="P:ChartKit.Themes.Theme`1.PolarLineSeriesBuilder">
            <summary>
            Gets or sets the line series builder.
            </summary>
            <value>
            The polar series builder.
            </value>
        </member>
        <member name="P:ChartKit.Themes.Theme`1.StackedPolarSeriesBuilder">
            <summary>
            Gets or sets the line series builder.
            </summary>
            <value>
            The polar series builder.
            </value>
        </member>
        <member name="P:ChartKit.Themes.Theme`1.HeatSeriesBuilder">
            <summary>
            Gets or sets the line series builder.
            </summary>
            <value>
            The pie series builder.
            </value>
        </member>
        <member name="P:ChartKit.Themes.Theme`1.FinancialSeriesBuilder">
            <summary>
            Gets or sets the financial series builder.
            </summary>
            <value>
            The pie series builder.
            </value>
        </member>
        <member name="P:ChartKit.Themes.Theme`1.StackedLineSeriesBuilder">
            <summary>
            Gets or sets the stacked line series builder.
            </summary>
            <value>
            The pie series builder.
            </value>
        </member>
        <member name="P:ChartKit.Themes.Theme`1.BarSeriesBuilder">
            <summary>
            Gets or sets the bar series builder.
            </summary>
            <value>
            The pie series builder.
            </value>
        </member>
        <member name="P:ChartKit.Themes.Theme`1.ColumnSeriesBuilder">
            <summary>
            Gets or sets the column series builder.
            </summary>
            <value>
            The pie series builder.
            </value>
        </member>
        <member name="P:ChartKit.Themes.Theme`1.RowSeriesBuilder">
            <summary>
            Gets or sets the row series builder.
            </summary>
            <value>
            The pie series builder.
            </value>
        </member>
        <member name="P:ChartKit.Themes.Theme`1.StackedBarSeriesBuilder">
            <summary>
            Gets or sets the stacked bar series builder.
            </summary>
            <value>
            The pie series builder.
            </value>
        </member>
        <member name="P:ChartKit.Themes.Theme`1.StackedColumnSeriesBuilder">
            <summary>
            Gets or sets the stacked column series builder.
            </summary>
            <value>
            The pie series builder.
            </value>
        </member>
        <member name="P:ChartKit.Themes.Theme`1.StackedRowSeriesBuilder">
            <summary>
            Gets or sets the stacked row series builder.
            </summary>
            <value>
            The pie series builder.
            </value>
        </member>
        <member name="P:ChartKit.Themes.Theme`1.ScatterSeriesBuilder">
            <summary>
            Gets or sets the scatter series builder.
            </summary>
            <value>
            The pie series builder.
            </value>
        </member>
        <member name="P:ChartKit.Themes.Theme`1.BoxSeriesBuilder">
            <summary>
            Gets or sets the error series builder.
            </summary>
            <value>
            The pie series builder.
            </value>
        </member>
        <member name="M:ChartKit.Themes.Theme`1.ApplyStyleToAxis(ChartKit.Kernel.Sketches.IPlane{`0})">
            <summary>
            Applies the theme to an axis.
            </summary>
            <param name="axis">The axis.</param>
        </member>
        <member name="M:ChartKit.Themes.Theme`1.ApplyStyleToSeries(ChartKit.Kernel.Sketches.IChartSeries{`0})">
            <summary>
            Applies the theme to a series.
            </summary>
            <param name="series">The series.</param>
        </member>
        <member name="M:ChartKit.Themes.Theme`1.ApplyStyleToDrawMargin(ChartKit.DrawMarginFrame{`0})">
            <summary>
            Applies the theme to  a draw margin.
            </summary>
            <param name="drawMarginFrame"></param>
        </member>
        <member name="M:ChartKit.Themes.Theme`1.GetSeriesColor(ChartKit.ISeries)">
            <summary>
            Gets the color of a series according to the theme.
            </summary>
            <returns></returns>
        </member>
        <member name="T:ChartKit.VisualElements.AngularTicksVisual`4">
            <summary>
            Defines a visual element in a chart that draws a sized geometry in the user interface.
            </summary>
            <typeparam name="TArcGeometry">The type of the arc geometry.</typeparam>
            <typeparam name="TLineGeometry">The type of the line geometry.</typeparam>
            <typeparam name="TLabelGeometry">The type of the label.</typeparam>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
        </member>
        <member name="P:ChartKit.VisualElements.AngularTicksVisual`4.LabelsPaint">
            <summary>
            Gets or sets the labels paint.
            </summary>
        </member>
        <member name="P:ChartKit.VisualElements.AngularTicksVisual`4.Stroke">
            <summary>
            Gets or sets the fill paint.
            </summary>
        </member>
        <member name="P:ChartKit.VisualElements.AngularTicksVisual`4.OuterOffset">
            <summary>
            Gets or sets the outer offset, the distance between the  edge of the chart and the arc and ticks.
            </summary>
        </member>
        <member name="P:ChartKit.VisualElements.AngularTicksVisual`4.LabelsOuterOffset">
            <summary>
            Gets or sets the labels outer offset, the distance between the edge of the chart and the labels.
            </summary>
        </member>
        <member name="P:ChartKit.VisualElements.AngularTicksVisual`4.TicksLength">
            <summary>
            Gets or sets the ticks lenght.
            </summary>
        </member>
        <member name="P:ChartKit.VisualElements.AngularTicksVisual`4.LabelsSize">
            <summary>
            Gets or sets the labels size.
            </summary>
        </member>
        <member name="M:ChartKit.VisualElements.AngularTicksVisual`4.OnInvalidated(ChartKit.Chart{`3})">
            <inheritdoc cref="M:ChartKit.VisualElements.VisualElement`1.OnInvalidated(ChartKit.Chart{`0})"/>
        </member>
        <member name="M:ChartKit.VisualElements.AngularTicksVisual`4.Measure(ChartKit.Chart{`3})">
            <inheritdoc cref="M:ChartKit.VisualElements.VisualElement`1.Measure(ChartKit.Chart{`0})"/>
        </member>
        <member name="M:ChartKit.VisualElements.AngularTicksVisual`4.SetParent(ChartKit.Drawing.IGeometry{`3})">
            <inheritdoc cref="M:ChartKit.VisualElements.VisualElement`1.SetParent(ChartKit.Drawing.IGeometry{`0})"/>
        </member>
        <member name="T:ChartKit.VisualElements.BaseGeometryVisual`1">
            <summary>
            Defines a visual element that has stroke and fill, it can also be scaled in
            <see cref="F:ChartKit.Measure.MeasureUnit.Pixels"/> or <see cref="F:ChartKit.Measure.MeasureUnit.ChartValues"/>.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context,</typeparam>
        </member>
        <member name="P:ChartKit.VisualElements.BaseGeometryVisual`1.Width">
            <summary>
            Gets or sets the height of the rectangle [in Pixels or ChartValues, see <see cref="P:ChartKit.VisualElements.BaseGeometryVisual`1.SizeUnit"/>].
            </summary>
        </member>
        <member name="P:ChartKit.VisualElements.BaseGeometryVisual`1.Height">
            <summary>
            Gets or sets the width of the rectangle [in Pixels or ChartValues, see <see cref="P:ChartKit.VisualElements.BaseGeometryVisual`1.SizeUnit"/>].
            </summary>
        </member>
        <member name="P:ChartKit.VisualElements.BaseGeometryVisual`1.SizeUnit">
            <summary>
            Gets or sets the unit of the <see cref="P:ChartKit.VisualElements.BaseGeometryVisual`1.Height"/> and <see cref="P:ChartKit.VisualElements.BaseGeometryVisual`1.Width"/> properties.
            </summary>
        </member>
        <member name="P:ChartKit.VisualElements.BaseGeometryVisual`1.Fill">
            <summary>
            Gets or sets the fill paint.
            </summary>
        </member>
        <member name="P:ChartKit.VisualElements.BaseGeometryVisual`1.Stroke">
            <summary>
            Gets or sets the stroke paint.
            </summary>
        </member>
        <member name="M:ChartKit.VisualElements.BaseGeometryVisual`1.GetPaintTasks">
            <inheritdoc cref="M:ChartKit.Kernel.ChartElement`1.GetPaintTasks"/>
        </member>
        <member name="M:ChartKit.VisualElements.BaseGeometryVisual`1.OnPaintChanged(System.String)">
            <summary>
            Called when [paint changed].
            </summary>
            <param name="propertyName">Name of the property.</param>
            <returns></returns>
        </member>
        <member name="T:ChartKit.VisualElements.GeometryVisual`3">
            <summary>
            Defines a visual element in a chart that draws a sized geometry in the user interface.
            </summary>
            <typeparam name="TGeometry">The type of the geometry.</typeparam>
            <typeparam name="TLabelGeometry">The type of the label.</typeparam>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
        </member>
        <member name="P:ChartKit.VisualElements.GeometryVisual`3.Label">
            <summary>
            Gets or sets the label, a string to be displayed within the section.
            </summary>
        </member>
        <member name="P:ChartKit.VisualElements.GeometryVisual`3.LabelSize">
            <summary>
            Gets or sets the label size.
            </summary>
        </member>
        <member name="P:ChartKit.VisualElements.GeometryVisual`3.LabelPaint">
            <summary>
            Gets or sets the label paint.
            </summary>
            <value>
            The fill.
            </value>
        </member>
        <member name="M:ChartKit.VisualElements.GeometryVisual`3.OnInvalidated(ChartKit.Chart{`2})">
            <inheritdoc cref="M:ChartKit.VisualElements.VisualElement`1.OnInvalidated(ChartKit.Chart{`0})"/>
        </member>
        <member name="M:ChartKit.VisualElements.GeometryVisual`3.SetParent(ChartKit.Drawing.IGeometry{`2})">
            <inheritdoc cref="M:ChartKit.VisualElements.VisualElement`1.SetParent(ChartKit.Drawing.IGeometry{`0})"/>
        </member>
        <member name="M:ChartKit.VisualElements.GeometryVisual`3.Measure(ChartKit.Chart{`2})">
            <inheritdoc cref="M:ChartKit.VisualElements.VisualElement`1.Measure(ChartKit.Chart{`0})"/>
        </member>
        <member name="T:ChartKit.VisualElements.LabelVisual`2">
            <summary>
            Defines a label visual element.
            </summary>
            <typeparam name="TLabelGeometry">The type of the label.</typeparam>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
        </member>
        <member name="P:ChartKit.VisualElements.LabelVisual`2.Paint">
            <summary>
            Gets or sets the fill paint.
            </summary>
        </member>
        <member name="P:ChartKit.VisualElements.LabelVisual`2.Text">
            <summary>
            Gets or sets the label text.
            </summary>
        </member>
        <member name="P:ChartKit.VisualElements.LabelVisual`2.TextSize">
            <summary>
            Gets or sets the font size.
            </summary>
        </member>
        <member name="P:ChartKit.VisualElements.LabelVisual`2.VerticalAlignment">
            <summary>
            Gets or sets the vertical alignment.
            </summary>
        </member>
        <member name="P:ChartKit.VisualElements.LabelVisual`2.HorizontalAlignment">
            <summary>
            Gets or sets the horizontal alignment.
            </summary>
        </member>
        <member name="P:ChartKit.VisualElements.LabelVisual`2.BackgroundColor">
            <summary>
            Gets or sets the background color.
            </summary>
        </member>
        <member name="P:ChartKit.VisualElements.LabelVisual`2.Padding">
            <summary>
            Gets or sets the padding.
            </summary>
        </member>
        <member name="P:ChartKit.VisualElements.LabelVisual`2.LineHeight">
            <summary>
            Gets or sets the line height [times the text measured height].
            </summary>
        </member>
        <member name="P:ChartKit.VisualElements.LabelVisual`2.MaxWidth">
            <summary>
            Gets or sets the maximum width.
            </summary>
        </member>
        <member name="M:ChartKit.VisualElements.LabelVisual`2.OnInvalidated(ChartKit.Chart{`1})">
            <inheritdoc cref="M:ChartKit.VisualElements.VisualElement`1.OnInvalidated(ChartKit.Chart{`0})"/>
        </member>
        <member name="M:ChartKit.VisualElements.LabelVisual`2.SetParent(ChartKit.Drawing.IGeometry{`1})">
            <inheritdoc cref="M:ChartKit.VisualElements.VisualElement`1.SetParent(ChartKit.Drawing.IGeometry{`0})"/>
        </member>
        <member name="M:ChartKit.VisualElements.LabelVisual`2.Measure(ChartKit.Chart{`1})">
            <inheritdoc cref="M:ChartKit.VisualElements.VisualElement`1.Measure(ChartKit.Chart{`0})"/>
        </member>
        <member name="T:ChartKit.VisualElements.NeedleVisual`3">
            <summary>
            Defines a visual element in a chart that draws a needle.
            </summary>
            <typeparam name="TGeometry">The type of the geometry.</typeparam>
            <typeparam name="TLabelGeometry">The type of the label.</typeparam>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
        </member>
        <member name="P:ChartKit.VisualElements.NeedleVisual`3.Value">
            <summary>
            Gets or sets the value.
            </summary>
        </member>
        <member name="P:ChartKit.VisualElements.NeedleVisual`3.Fill">
            <summary>
            Gets or sets the fill paint.
            </summary>
        </member>
        <member name="M:ChartKit.VisualElements.NeedleVisual`3.OnInvalidated(ChartKit.Chart{`2})">
            <inheritdoc cref="M:ChartKit.VisualElements.VisualElement`1.OnInvalidated(ChartKit.Chart{`0})"/>
        </member>
        <member name="M:ChartKit.VisualElements.NeedleVisual`3.Measure(ChartKit.Chart{`2})">
            <inheritdoc cref="M:ChartKit.VisualElements.VisualElement`1.Measure(ChartKit.Chart{`0})"/>
        </member>
        <member name="M:ChartKit.VisualElements.NeedleVisual`3.SetParent(ChartKit.Drawing.IGeometry{`2})">
            <inheritdoc cref="M:ChartKit.VisualElements.VisualElement`1.SetParent(ChartKit.Drawing.IGeometry{`0})"/>
        </member>
        <member name="T:ChartKit.VisualElements.RelativePanel`2">
            <summary>
            Defines the relative panel class.
            </summary>
        </member>
        <member name="M:ChartKit.VisualElements.RelativePanel`2.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.VisualElements.RelativePanel`2"/> class.
            </summary>
        </member>
        <member name="P:ChartKit.VisualElements.RelativePanel`2.Size">
            <summary>
            Gets or sets the size.
            </summary>
        </member>
        <member name="P:ChartKit.VisualElements.RelativePanel`2.Children">
            <summary>
            Gets the children collection.
            </summary>
        </member>
        <member name="P:ChartKit.VisualElements.RelativePanel`2.BackgroundPaint">
            <summary>
            Gets or sets the background paint.
            </summary>
        </member>
        <member name="P:ChartKit.VisualElements.RelativePanel`2.BackgroundGeometry">
            <summary>
            Gets the background geometry.
            </summary>
        </member>
        <member name="M:ChartKit.VisualElements.RelativePanel`2.OnInvalidated(ChartKit.Chart{`1})">
            <inheritdoc cref="M:ChartKit.VisualElements.VisualElement`1.OnInvalidated(ChartKit.Chart{`0})"/>
        </member>
        <member name="M:ChartKit.VisualElements.RelativePanel`2.SetParent(ChartKit.Drawing.IGeometry{`1})">
            <inheritdoc cref="M:ChartKit.VisualElements.VisualElement`1.SetParent(ChartKit.Drawing.IGeometry{`0})"/>
        </member>
        <member name="M:ChartKit.VisualElements.RelativePanel`2.Measure(ChartKit.Chart{`1})">
            <inheritdoc cref="M:ChartKit.VisualElements.VisualElement`1.Measure(ChartKit.Chart{`0})"/>
        </member>
        <member name="M:ChartKit.VisualElements.RelativePanel`2.RemoveFromUI(ChartKit.Chart{`1})">
            <inheritdoc cref="M:ChartKit.Kernel.ChartElement`1.RemoveFromUI(ChartKit.Chart{`0})"/>
        </member>
        <member name="T:ChartKit.VisualElements.StackPanel`2">
            <summary>
            Defines the stack panel class.
            </summary>
            <typeparam name="TBackgroundGeometry">The type of the background geometry.</typeparam>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
        </member>
        <member name="M:ChartKit.VisualElements.StackPanel`2.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.VisualElements.StackPanel`2"/> class.
            </summary>
        </member>
        <member name="P:ChartKit.VisualElements.StackPanel`2.Children">
            <summary>
            Gets the children collection.
            </summary>
        </member>
        <member name="P:ChartKit.VisualElements.StackPanel`2.Orientation">
            <summary>
            Gets or sets the panel orientation.
            </summary>
        </member>
        <member name="P:ChartKit.VisualElements.StackPanel`2.VerticalAlignment">
            <summary>
            Gets or sets the vertical alignment.
            </summary>
        </member>
        <member name="P:ChartKit.VisualElements.StackPanel`2.HorizontalAlignment">
            <summary>
            Gets or sets the horizontal alignment.
            </summary>
        </member>
        <member name="P:ChartKit.VisualElements.StackPanel`2.Padding">
            <summary>
            Gets or sets the padding.
            </summary>
        </member>
        <member name="P:ChartKit.VisualElements.StackPanel`2.BackgroundPaint">
            <summary>
            Gets or sets the background paint.
            </summary>
        </member>
        <member name="P:ChartKit.VisualElements.StackPanel`2.BackgroundGeometry">
            <summary>
            Gets the background geometry.
            </summary>
        </member>
        <member name="P:ChartKit.VisualElements.StackPanel`2.MaxWidth">
            <summary>
            Gets or sets the maximum width. When the maximum with is reached, a new row is created.
            </summary>
        </member>
        <member name="P:ChartKit.VisualElements.StackPanel`2.MaxHeight">
            <summary>
            Gets or sets the maximum height. When the maximum height is reached, a new column is created.
            </summary>
        </member>
        <member name="M:ChartKit.VisualElements.StackPanel`2.OnInvalidated(ChartKit.Chart{`1})">
            <inheritdoc cref="M:ChartKit.VisualElements.VisualElement`1.OnInvalidated(ChartKit.Chart{`0})"/>
        </member>
        <member name="M:ChartKit.VisualElements.StackPanel`2.SetParent(ChartKit.Drawing.IGeometry{`1})">
            <inheritdoc cref="M:ChartKit.VisualElements.VisualElement`1.SetParent(ChartKit.Drawing.IGeometry{`0})"/>
        </member>
        <member name="M:ChartKit.VisualElements.StackPanel`2.Measure(ChartKit.Chart{`1})">
            <inheritdoc cref="M:ChartKit.VisualElements.VisualElement`1.Measure(ChartKit.Chart{`0})"/>
        </member>
        <member name="M:ChartKit.VisualElements.StackPanel`2.RemoveFromUI(ChartKit.Chart{`1})">
            <inheritdoc cref="M:ChartKit.Kernel.ChartElement`1.RemoveFromUI(ChartKit.Chart{`0})"/>
        </member>
        <member name="T:ChartKit.VisualElements.TableLayout`2">
            <summary>
            Defines the table panel class.
            </summary>
            <typeparam name="TBackgroundGeometry">The type of the background geometry.</typeparam>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
        </member>
        <member name="M:ChartKit.VisualElements.TableLayout`2.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.VisualElements.TableLayout`2"/> class.
            </summary>
        </member>
        <member name="P:ChartKit.VisualElements.TableLayout`2.Padding">
            <summary>
            Gets or sets the padding.
            </summary>
        </member>
        <member name="P:ChartKit.VisualElements.TableLayout`2.HorizontalAlignment">
            <summary>
            Gets or sets the horizontal alignment.
            </summary>
        </member>
        <member name="P:ChartKit.VisualElements.TableLayout`2.VerticalAlignment">
            <summary>
            Gets or sets the horizontal alignment.
            </summary>
        </member>
        <member name="P:ChartKit.VisualElements.TableLayout`2.BackgroundPaint">
            <summary>
            Gets or sets the background paint.
            </summary>
        </member>
        <member name="P:ChartKit.VisualElements.TableLayout`2.BackgroundGeometry">
            <summary>
            Gets the background geometry.
            </summary>
        </member>
        <member name="M:ChartKit.VisualElements.TableLayout`2.Measure(ChartKit.Chart{`1})">
            <inheritdoc cref="M:ChartKit.VisualElements.VisualElement`1.Measure(ChartKit.Chart{`0})"/>
        </member>
        <member name="M:ChartKit.VisualElements.TableLayout`2.RemoveFromUI(ChartKit.Chart{`1})">
            <inheritdoc cref="M:ChartKit.Kernel.ChartElement`1.RemoveFromUI(ChartKit.Chart{`0})"/>
        </member>
        <member name="M:ChartKit.VisualElements.TableLayout`2.AddChild(ChartKit.VisualElements.VisualElement{`1},System.Int32,System.Int32,System.Nullable{ChartKit.Drawing.Align},System.Nullable{ChartKit.Drawing.Align})">
            <summary>
            Adds a child to the layout.
            </summary>
            <param name="row">The row index.</param>
            <param name="column">The column index.</param>
            <param name="child">The visual to add.</param>
            <param name="horizontalAlign">The cell horizontal alignment, if null the alignment will be defined by the layout.</param>
            <param name="verticalAlign">The cell vertical alignment, if null the alignment will be defined by the layout.</param>
        </member>
        <member name="M:ChartKit.VisualElements.TableLayout`2.RemoveChildAt(System.Int32,System.Int32)">
            <summary>
            Removes a child from the layout.
            </summary>
            <param name="row">The row.</param>
            <param name="column">The column.</param>
        </member>
        <member name="M:ChartKit.VisualElements.TableLayout`2.EnumerateChildren">
            <summary>
            Enumerates the children in the layout.
            </summary>
        </member>
        <member name="M:ChartKit.VisualElements.TableLayout`2.OnInvalidated(ChartKit.Chart{`1})">
            <inheritdoc cref="M:ChartKit.VisualElements.VisualElement`1.OnInvalidated(ChartKit.Chart{`0})"/>
        </member>
        <member name="M:ChartKit.VisualElements.TableLayout`2.SetParent(ChartKit.Drawing.IGeometry{`1})">
            <inheritdoc cref="M:ChartKit.VisualElements.VisualElement`1.SetParent(ChartKit.Drawing.IGeometry{`0})"/>
        </member>
        <member name="T:ChartKit.VisualElements.TableLayout`2.TableCell">
            <summary>
            Defines a cell in the <see cref="T:ChartKit.VisualElements.TableLayout`2"/>.
            </summary>
        </member>
        <member name="M:ChartKit.VisualElements.TableLayout`2.TableCell.#ctor(System.Int32,System.Int32,ChartKit.VisualElements.VisualElement{`1},System.Nullable{ChartKit.Drawing.Align},System.Nullable{ChartKit.Drawing.Align})">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.VisualElements.TableLayout`2.TableCell"/> class.
            </summary>
            <param name="row">The row index.</param>
            <param name="column">The column index.</param>
            <param name="visualElement">The visual to add.</param>
            <param name="verticalAlign">The cell vertical alignment, if null the alignment will be defined by the layout.</param>
            <param name="horizontalAlign">The cell horizontal alignment, if null the alignment will be defined by the layout.</param>
        </member>
        <member name="P:ChartKit.VisualElements.TableLayout`2.TableCell.Row">
            <summary>
            Gets the row.
            </summary>
        </member>
        <member name="P:ChartKit.VisualElements.TableLayout`2.TableCell.Column">
            <summary>
            Gets the column.
            </summary>
        </member>
        <member name="P:ChartKit.VisualElements.TableLayout`2.TableCell.VerticalAlign">
            <summary>
            Gets or sets the vertical alignment.
            </summary>
        </member>
        <member name="P:ChartKit.VisualElements.TableLayout`2.TableCell.HorizontalAlign">
            <summary>
            Gets or sets the horizontal alignment.
            </summary>
        </member>
        <member name="P:ChartKit.VisualElements.TableLayout`2.TableCell.VisualElement">
            <summary>
            Gets the visual element.
            </summary>
        </member>
        <member name="T:ChartKit.VisualElements.VariableGeometryVisual`1">
            <summary>
            Defines a visual element that is useful to create series miniatures in the tool tips and legends.
            </summary>
            <typeparam name="TDrawingContext">The type of the drawing context.</typeparam>
        </member>
        <member name="M:ChartKit.VisualElements.VariableGeometryVisual`1.#ctor(ChartKit.Drawing.ISizedGeometry{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:ChartKit.VisualElements.VariableGeometryVisual`1"/> class.
            </summary>
            <param name="geometry"></param>
        </member>
        <member name="P:ChartKit.VisualElements.VariableGeometryVisual`1.Geometry">
            <summary>
            Gets or sets the geometry.
            </summary>
        </member>
        <member name="E:ChartKit.VisualElements.VariableGeometryVisual`1.GeometryInitialized">
            <summary>
            Occurs when the geometry is initialized.
            </summary>
        </member>
        <member name="M:ChartKit.VisualElements.VariableGeometryVisual`1.OnInvalidated(ChartKit.Chart{`0})">
            <inheritdoc cref="M:ChartKit.VisualElements.VisualElement`1.OnInvalidated(ChartKit.Chart{`0})"/>
        </member>
        <member name="M:ChartKit.VisualElements.VariableGeometryVisual`1.SetParent(ChartKit.Drawing.IGeometry{`0})">
            <inheritdoc cref="M:ChartKit.VisualElements.VisualElement`1.SetParent(ChartKit.Drawing.IGeometry{`0})"/>
        </member>
        <member name="M:ChartKit.VisualElements.VariableGeometryVisual`1.Measure(ChartKit.Chart{`0})">
            <inheritdoc cref="M:ChartKit.VisualElements.VisualElement`1.Measure(ChartKit.Chart{`0})"/>
        </member>
        <member name="T:ChartKit.VisualElements.VisualElement`1">
            <summary>
            Defines the base visual element class, inheriting from this class makes it easy to implement a visual element.
            </summary>
        </member>
        <member name="P:ChartKit.VisualElements.VisualElement`1.PrimaryScaler">
            <summary>
            Gets the primary scaler.
            </summary>
        </member>
        <member name="P:ChartKit.VisualElements.VisualElement`1.SecondaryScaler">
            <summary>
            Gets the secondary scaler.
            </summary>
        </member>
        <member name="P:ChartKit.VisualElements.VisualElement`1.X">
            <summary>
            Gets or sets the X coordinate [in Pixels or ChartValues, see <see cref="P:ChartKit.VisualElements.VisualElement`1.LocationUnit"/>].
            </summary>
        </member>
        <member name="P:ChartKit.VisualElements.VisualElement`1.Y">
            <summary>
            Gets or sets the Y coordinate [in Pixels or ChartValues, see <see cref="P:ChartKit.VisualElements.VisualElement`1.LocationUnit"/>].
            </summary>
        </member>
        <member name="P:ChartKit.VisualElements.VisualElement`1.Rotation">
            <summary>
            Gets or sets the rotation.
            </summary>
        </member>
        <member name="P:ChartKit.VisualElements.VisualElement`1.Translate">
            <summary>
            Gets or sets the translate transform.
            </summary>
        </member>
        <member name="P:ChartKit.VisualElements.VisualElement`1.LocationUnit">
            <summary>
            Gets or sets the unit of the <see cref="P:ChartKit.VisualElements.VisualElement`1.X"/> and <see cref="P:ChartKit.VisualElements.VisualElement`1.Y"/> properties.
            </summary>
        </member>
        <member name="P:ChartKit.VisualElements.VisualElement`1.ScalesXAt">
            <summary>
            Gets or sets the axis index where the series is scaled in the X plane, the index must exist 
            in the <see cref="P:ChartKit.Kernel.Sketches.ICartesianChartView`1.YAxes"/> collection.
            </summary>
            <value>
            The index of the axis.
            </value>
        </member>
        <member name="P:ChartKit.VisualElements.VisualElement`1.ScalesYAt">
            <summary>
            Gets or sets the axis index where the series is scaled in the Y plane, the index must exist 
            in the <see cref="P:ChartKit.Kernel.Sketches.ICartesianChartView`1.YAxes"/> collection.
            </summary>
            <value>
            The index of the axis.
            </value>
        </member>
        <member name="P:ChartKit.VisualElements.VisualElement`1.ClippingMode">
            <summary>
            Gets or sets the clipping mode, clipping restricts the visual element for being drawn outside of the chart area (DrawMargin),
            default is <see cref="F:ChartKit.Measure.ClipMode.XY"/>, and means that anything outside the chart bounds will be ignored.
            </summary>
        </member>
        <member name="E:ChartKit.VisualElements.VisualElement`1.PointerDown">
            <summary>
            Called when the pointer goes down on the visual.
            </summary>
        </member>
        <member name="M:ChartKit.VisualElements.VisualElement`1.Invalidate(ChartKit.Chart{`0})">
            <inheritdoc cref="M:ChartKit.Kernel.ChartElement`1.Invalidate(ChartKit.Chart{`0})"/>
        </member>
        <member name="M:ChartKit.VisualElements.VisualElement`1.Measure(ChartKit.Chart{`0})">
            <summary>
            Measures the element and returns the size.
            </summary>
            <param name = "chart" > The chart.</param>
        </member>
        <member name="M:ChartKit.VisualElements.VisualElement`1.OnPaintChanged(System.String)">
            <summary>
            Called when [paint changed].
            </summary>
            <param name="propertyName">Name of the property.</param>
            <returns></returns>
        </member>
        <member name="M:ChartKit.VisualElements.VisualElement`1.OnInvalidated(ChartKit.Chart{`0})">
            <summary>
            Called when the visual is drawn.
            </summary>
            <param name="chart">The chart.</param>
        </member>
        <member name="M:ChartKit.VisualElements.VisualElement`1.SetParent(ChartKit.Drawing.IGeometry{`0})">
            <summary>
            Sets the parent to all the geometries in the visual.
            </summary>
        </member>
        <member name="M:ChartKit.VisualElements.VisualElement`1.GetActualCoordinate">
            <summary>
            Gets the acdtual coordinate of the visual.
            </summary>
            <returns></returns>
        </member>
    </members>
</doc>
